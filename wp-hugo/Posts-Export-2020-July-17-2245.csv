id,Date,Title,Permalink,Slug,Categories,Tags,Content
5,2016-11-30,Euler Problem 1: Multiples of 3 or 5 - Solutions in R,https://lucidmanager.org/euler-problem-1/,euler-problem-1,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>I have started solving <a href=""//projecteuler.net/"" target=""_blank"" rel=""noopener noreferrer"">Project Euler</a> problems in R to sharpen my skills in coding and mathematics. This first problem is trivial, but it shows some of the different methods that R can deploy to solve the same problem. <a href=""https://lucidmanager.org/euler-problem-5/"">Euler Problem 5</a> also discusses divisors.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 1 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23. Find the <a href=""https://projecteuler.net/problem=1"" target=""_blank"" rel=""noopener noreferrer"">sum of all the multiples</a> of 3 or 5 below 1000.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Proposed Solutions</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The problem definition on the Project Euler website is not consistent: the title mentions multiples of 3 AND 5, while the description asks for multiples of 3 OR 5.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>There are four ways to solve Euler Problem 1 in R:</p>
<!-- /wp:paragraph -->

<!-- wp:list {""ordered"":true} -->
<ol><li>Loop through all numbers from 1 to 999 and test whether they are divisible by 3 or by 5 using the <a href=""https://campus.datacamp.com/courses/free-introduction-to-r/chapter-1-intro-to-basics-1?ex=2"" target=""_blank"" rel=""noopener noreferrer"">modulus function</a>.</li><li>Doing the same, using <a href=""http://www.r-tutor.com/r-introduction/vector/vector-arithmetics"" target=""_blank"" rel=""noopener noreferrer"">Vector arithmetic</a>.</li><li>Sum the <a href=""https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/seq"" target=""_blank"" rel=""noopener noreferrer"">sequences</a> of the multiples of 3 and 5 and exclude duplicates (numbers divisible by 15).</li><li>Analytical approach.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>The three brute-force solutions are swift because of the low number of steps to find a solution. An analytical solution significantly reduces the processing time as it only requires one step.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The problem involves <a href=""https://en.wikipedia.org/wiki/Arithmetic_progression"" target=""_blank"" rel=""noopener noreferrer"">arithmetic progressions</a>, which are sequences of numbers with a constant difference. The sequence 1, 4, 7, 10, 13, ... is an arithmetic progression with a common difference of three. The sum of an arithmetic progression, where $latexn$ is the number of elements and $late xa_1$ and $latex a_n&amp;s=2$ are the lowest and highest value, is:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex \frac{1}{2} n(a_1 + a_n)$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The numbers divisible by $latex n=3$ can be expressed as:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex \mathrm{sum}_3(999)=3+6+ \ldots + 999 = 3(1+2+ \ldots + 333)$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>We can now calculate the sum of all divisors by combining the above progression with the formula for arithmetic progressions as expressed in the above code, where $latex m$ is the divisor and $latex n$ the extent of the sequence. $latex p$ is the highest number less than $latex n$, divisible by $latex m$. In the case of 5, this number is 995.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex p = n \lfloor (m/n) \rfloor$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Substitution gives:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex \mathrm{sum}_m(n) = p (1+(p/m))/2$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>View the code below or download the latest version from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem001.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock {""theme"":""classic""} -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme=""classic"" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">## Solution 1
answer &lt;- 0
for (i in 1:999) {
    if (i %% 3 == 0 | i %% 5 == 0) 
        answer &lt;- answer + i
}
print(answer)

## Solution 2
sum((1:999)[((1:999) %% 3 == 0) | ((1:999) %% 5 == 0)])

## Solution 3
sum(unique(c(seq(3, 999, 3), seq(5, 999, 5))))

## Solution 4
SumDivBy &lt;- function(m, n) {
    p &lt;- floor(n / m) * m
    return (p * (1 + (p / m)) / 2)
}
SumDivBy(3, 999) + SumDivBy(5, 999) - SumDivBy(15, 999)</pre>
<!-- /wp:enlighter/codeblock -->"
19,2016-12-07,Euler Problem 2: Even Fibonacci Numbers | Solutions in R,https://lucidmanager.org/euler-problem-2/,euler-problem-2,The Devil is in the Data,Numberphile|Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 2 looks at Fibonacci numbers. This number sequence describes many natural processes, such as the patterns in this beautiful sunflower. The seeds inside the sunflower grow in a spiral pattern and the number of spirals tends to be a Fibonacci number. This pattern is the most efficient way to pack the centre with as many seeds as possible.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Famous mathematician and father of computer science Alan Turing was fascinated by this problem until his death. In 2016, the Royal Society published a journal article that builds on his work in the <a href=""http://dx.doi.org/10.1098/rsos.160091"" target=""_blank"" rel=""noopener noreferrer"">Open Science</a> journal. They collected sunflowers from citizen scientists from around the world and confirmed that for the majority of sunflowers, the number of spirals is a Fibonacci number. They did, however, also discover other patterns. Euler Problem 2 is a bit less poetic as it only asks to generate and sum even numbers.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=DRjFV_DETKQ"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=DRjFV_DETKQ
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Euler Problem 2 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, \ldots$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>By considering the terms in the <a href=""https://projecteuler.net/problem=2"" rel=""noopener"">Fibonacci sequence whose values do not exceed four million</a>, find the sum of the even-valued terms.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The code generates <a href=""https://en.wikipedia.org/wiki/Fibonacci_number"" rel=""noopener"">Fibonacci numbers</a>&nbsp;until it reaches the value of four million. The code then sums the even numbers in the sequence.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=""wp-block-preformatted"">fib &lt;- c(1, 2)  #Define first two numbers
while (max(fib) &lt;= 4E+06) {
    # Generate Fibonacci numbers until limit is reached
    len &lt;- length(fib)
    fib &lt;- c(fib, fib[len - 1] + fib[len])
}
answer &lt;- sum(fib[fib %% 2 == 0])
print(answer)</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>A&nbsp;series of R packages exist to generate Fibonacci numbers. The&nbsp;<a href=""https://cran.r-project.org/web/packages/gmp/index.html"" rel=""noopener"">GMP package</a>&nbsp;for&nbsp;Multiple Precision Arithmetic provides a function to calculate the n<sup>th</sup> Fibonacci number. This package is also able to work with huge numbers. Using this package is much faster than the base R code used above. This most recent version of this code is available on <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem002.R"" rel=""noopener"">GitHub</a>. Interestingly, the <a href=""https://gmplib.org/manual/Fibonacci-Numbers-Algorithm.html"" target=""_blank"" rel=""noopener noreferrer"">GMP library</a> uses tables for Fibonacci numbers up to twelve quintillion ($latex 10^{18}$).</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=""wp-block-preformatted"">library(gmp)
i &lt;- 1
answer &lt;- 0
fib &lt;- fibnum(1)
while (fibnum(i) &lt;= 4E6) {
    fib &lt;- fibnum(i)
    if (fib %% 2 == 0)
        answer &lt;- answer + fib
    i &lt;- i + 1
}
print(answer)
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p><a href=""https://lucidmanager.org/euler-problem-25/"">Euler Problem 25</a> also deals with Fibonacci numbers and asks to find the first such number with 1000 digits.</p>
<!-- /wp:paragraph -->"
22,2016-12-14,Euler Problem 3: Largest Prime Factor | Solution in R,https://lucidmanager.org/euler-problem-3/,euler-problem-3,The Devil is in the Data,Numberphile|Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler problem 3 is about prime factors, which are some of the most important numbers of the digital economy. RSA encryption is based on the fact that determining the prime factors of huge numbers takes a very long time. So much time in fact that the cost of breaking the encryption outweigh the benefits of obtaining the secret.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Prime numbers are the basic building blocks of the natural numbers as every number, except the primes themselves. Every natural number can be written as the product of a series of primes. The RSA encryption system uses large primes to keep electronic messages away from prying eyes, as explained in the Numberphile video below.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=M7kEpw1tn50"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=M7kEpw1tn50
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>Prime numbers are a favourite topic in Project Euler. <a href=""https://lucidmanager.org/euler-problem-7/"">Problem 7</a> asks for the first ten thousand primes and <a href=""https://lucidmanager.org/euler-problem-10/"">Problem 10</a> looks at the sum of all the primes below two million.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 3 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The prime factors of 13195 are 5, 7, 13 and 29.&nbsp;What is the <a href=""https://projecteuler.net/problem=3"" rel=""noopener"">largest prime factor</a> of the number 600851475143?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Generating Prime Numbers</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This solution relies on two functions that can be used for multiples problems. The <a href=""https://en.wikipedia.org/wiki/Sieve_of_Eratosthenes"" rel=""noopener"">Sieve of Eratosthenes</a> generates prime numbers from 2 to n. The code is commented to explain the sieve, and the image shows how numbers from 1 to 100 are sieved to find the primes.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":168} -->
<div class=""wp-block-image""><figure class=""aligncenter""><img src=""https://upload.wikimedia.org/wikipedia/commons/b/b9/Sieve_of_Eratosthenes_animation.gif"" alt=""Sieve of Eratosthenes: Euler Problem 3"" class=""wp-image-168"" /></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>The <code>prime.factors</code> function&nbsp;generates the list of unique prime divisors and then&nbsp;produces the factors. The factors are identified by dividing the number by the candidate prime factors until the result is 1.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The solution can also be found by using the&nbsp;<em>primeFactors</em> function in the&nbsp;<a href=""https://cran.r-project.org/web/packages/numbers/index.html"" rel=""noopener"">numbers</a> package. This package provides a range of&nbsp;functions related to prime numbers and is much faster than the basic R code.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The most recent version of this code is shown below and you can download it from&nbsp;<a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem003.R"" rel=""noopener"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">esieve &lt;- function(n) {
    if (n == 1) return(NULL)
    if (n == 2) return(n)
    ## Create a list of consecutive integers {2,3,... n}.
    l &lt;- 2:n
    ## Start counter
    i &lt;- 1
    ## Select p as the first prime number in the list, p = 2.
    p &lt;- 2
    while (p^2 &lt;= n) {
        ## Remove all multiples of p from the l.
        l &lt;- l[l == p | l %% p!= 0]
        ## set p equal to the next integer in l which has not been removed.
        i &lt;- i + 1 ## Repeat steps 3 and 4 until p^2 &gt; n,
        ## all the remaining numbers in the list are primes
        p &lt;- l[i]
    }
    return(l)
}

prime.factors &lt;- function (n) {
    ## Define list of factors
    factors &lt;- c()
    ## Define primes to be tested
    primes &lt;- esieve(floor(sqrt(n)))
    ## Idenitfy prime divisors
    d &lt;- which(n %% primes == 0) 
    ## No prime divisors
    if (length(d) == 0) 
        return(n)
    ## Test candidate primes
    for (q in primes[d]) {
        ## Generate list of factors
        while (n %% q == 0) {
            factors &lt;- c(factors, q)
            n &lt;- n/q } } 
            if (n &gt; 1) 
                factors &lt;- c(factors, n)
    return(factors)
}
max(prime.factors(600851475143))

library(numbers)
max(primeFactors(600851475143))
</pre>
<!-- /wp:preformatted -->"
30,2016-12-22,Euler Problem 4: Largest Palindromic Product and Lychrel Numbers,https://lucidmanager.org/euler-problem-4/,euler-problem-4,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 4 takes us to the palindromic numbers, a number that is the same when reading it backwards. Almost all non-palindromic number can be converted to a palindromic number through the Lychrel process. The non-palindromic number is reversed, and the result is added to the original number. If the result is not a palindromic number, this is repeated until it gives a palindromic number. For example, 56 + 65 = 121. As another example, 125 + 521 = 646, which is a palindromic number.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Any number that will never become a palindrome is called a <a href=""https://en.wikipedia.org/wiki/Lychrel_number"" rel=""noopener"">Lychrel number</a>. The number 196 does not become a palindrome, even after hundreds of thousands of iterations. However, there is no proof that Lychrel numbers exist. If we write some code to undertake the Lychrel process, we would never be certain whether it eventually will stop, which is the infamous <a href=""https://en.wikipedia.org/wiki/Halting_problem"">halting problem</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=bN8PE3eljdA"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=bN8PE3eljdA
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Euler Problem 4 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>A palindromic number reads the same both ways. The largest <a href=""https://en.wikipedia.org/wiki/Palindromic_number"" rel=""noopener"">palindrome</a> made from the product of two 2-digit numbers is 9009 = 91 × 99. Find the <a href=""https://projecteuler.net/problem=4"" rel=""noopener"">largest palindrome</a> made from the product of two 3-digit numbers.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This code searches for palindromic numbers, starting at the highest values. The palindromes are tested by converting the number to a character string. When the first palindromic number is found, the loop is broken.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The <code>reverse</code> function reverses any number and the <code>palindrome</code> function tests if the reverse is the same as the original number.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>You can view the code below, or download the latest version of this code on <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem004.R"" rel=""noopener"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">## Reverse a number
reverse &lt;- function(n) {
    reverse &lt;- 0
    while (n &gt; 0) {
        remainder &lt;- n %% 10
        reverse &lt;- 10 * reverse + remainder
        n &lt;- floor(n / 10)
    }
    return(reverse)
}

## Test for palindrome
palindrome &lt;- function(x) {
    return(x == reverse(x))
}

## Euler problem 4
for (i in 999:900) {
    for (j in 990:900) {
        p &lt;- i * j
        if (palindrome(p)) 
            break
    }
    if (palindrome(p)) {
        break
    }
}
answer &lt;- i * j
print(answer)</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Searching a bit further results in twelve palindromic numbers made from the product of two 2-digit numbers.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Sequence <a href=""https://oeis.org/A002113"" rel=""noopener"">A002113</a> in the Online Encyclopedia of Integer Sequences (OEIS) lists palindromes in base 10. The graph below shows the number of palindromic numbers between 0 and 1 million.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(tidyverse)
p_max &lt;- 1.5E5
A002113 &lt;- which(lapply(1:p, palindrome) == TRUE)
data_frame(x = 1:p_max,
y = sapply(1:p_max, function(p) length(A002113[A002113 &lt; p])) ) %&gt;%
    ggplot(aes(x, y)) +
        geom_line() +
        xlab("""") +
        ylab(""Palindromic numbers &lt;n"")</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":6602} -->
<div class=""wp-block-image""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2016/12/problem004-1024x768.png"" alt=""Euler Problem 4: Largest Palindromic Product | Solution in R"" class=""wp-image-6602"" /></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Lychrel Numbers</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Sequence <a href=""https://oeis.org/A023108"" target=""_blank"" rel=""noopener noreferrer"">A023108</a> of the Online Encyclopedia of Integers lists number that apparently never iterate&nbsp;to become a palindrome.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This function tests a number for Lychrel property by following the&nbsp;palindrome process. Unfortunately, there is no way of telling if it will ever stop for certain numbers.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">lychrel &lt;- function(l) {
    while(!palindrome(l))
        l &lt;- l + reverse(l)
    return(l)
}
## Firest 195 non-Lychrel numbers
options(digits=22)
sapply(1:195, lychrel)

## This function call apparently never halts
lychrel(196)</pre>
<!-- /wp:preformatted -->"
35,2016-12-29,Euler Problem 5: Smallest Multiple | Solution in R,https://lucidmanager.org/euler-problem-5/,euler-problem-5,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 5&nbsp;relates to the <a href=""https://lucidmanager.org/euler-problem-1/"">divisibility of numbers</a> and is an almost trivial problem that is included here only for completeness.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 5</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder. What is the <a href=""https://projecteuler.net/problem=5"" target=""_blank"" rel=""noopener noreferrer"">smallest positive number that is evenly divisible by all of the numbers from 1 to 20</a>?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The solution will also be divisible by the numbers 1 to 10 so we can start at 2520 and increment by 2520. The loop checks whether&nbsp;the number is&nbsp;divisible by the numbers 1 to 20. You can view the code below or download the latest version from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem005.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">i &lt;- 2520
while (sum(i %% (1:20)) != 0) {
    i &lt;- i + 2520 # Increase by smallest number divisible by 1:10
}
answer &lt;- i
print(answer)
</pre>
<!-- /wp:preformatted -->"
38,2017-01-05,Euler Problem 6: Sum Square Difference | Solution in R,https://lucidmanager.org/euler-problem-6/,euler-problem-6,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler problem 6 is another <a href=""https://lucidmanager.org/euler-problem-1/"">trivial</a> one that only requires a basic understanding of coding in R but it does teach use something about computer science.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 6 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The sum of the squares of the first ten natural numbers is:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex 1^2 + 2^2 + \ldots + 10^2 = 385$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The square of the sum of the first ten natural numbers is:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex (1 + 2 + \ldots + 10)^2 = 552 = 3025$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The difference between the sum of the squares of the first ten natural numbers and the square of the sum is $latex 3025 - 385 = 2640$. Find the <a href=""https://projecteuler.net/problem=6"" target=""_blank"" rel=""noopener noreferrer"">difference between the sum of the squares</a> of the first one hundred natural numbers and the square of the sum.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This is a straightforward problem for vector processing capabilities in R. You can view the code below or download it from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem006.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=""wp-block-preformatted"">answer &lt;- sum(1:100)^2 - sum((1:100)^2)
print(answer)
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>This problem can also be solved arithmetically. When Carl Friedrich Gauss (1777–1855) when he was a child his teacher challenged his students to add all numbers from 1 to 100. All of his friends struggled to add all the 100 numbers one by one but Carl completed the task in a few seconds.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The solution shown above is like Carl's classmates who slavishly add all numbers using brute force. Gauss' solution only requires one simple step. Computer scientists use Big O notation to describe the steps it takes to complete an algorithm.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In <a href=""https://rob-bell.net/2009/06/a-beginners-guide-to-big-o-notation/"" target=""_blank"" rel=""noopener noreferrer"">Big-O Notation </a>the first solution is $latex O(n)$ which means that the number of steps in the algorithm grows in direct proportion to the data set. In this case, we only look at 100 numbers. But solving this problem for many billions of numbers would pose some practical problems. Gauss' solution is $latex O(1)$, which means that the solution only requires one step, regardless of the size of the data set.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Gauss found that the sum of natural numbers can be expressed as:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex n(n + 1)/2$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The sum of the squares of the first $latex n &amp;s=2$ natural numbers is:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex n(n+1)(2n+1)/6$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>With these two formulas, a fast solution without having to use loops can be written.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=""wp-block-preformatted"">n &lt;- 100
answer &lt;- ((n * (n + 1)) / 2)^2 - (n * (n + 1) * (2 * n + 1)) / 6
print(answer)
</pre>
<!-- /wp:preformatted -->"
45,2017-01-12,"Euler Problem 7: 10,001st Prime",https://lucidmanager.org/euler-problem-7/,euler-problem-7,The Devil is in the Data,Numberphile|Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler problem 7 asks us to generate ten thousand prime numbers.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=WJ12DYBuazY"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=WJ12DYBuazY
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Euler Problem 7 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>By listing the first six prime numbers: 2, 3, 5, 7, 11, and 13, we can see that the 6<sup>th</sup> prime is 13. What is the 1,0001<sup>st</sup> prime number?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The <code>is.prime</code> function determines whether a number is a prime number by checking that it is not divisible by any prime number up to the square root of the number. The Sieve of used in <a href=""https://lucidmanager.org/euler-problem-3/"">Euler Problem 3</a> generates the prime numbers. This problem can only be solved using brute force because&nbsp;<a href=""https://en.wikipedia.org/wiki/Prime_gap"" target=""_blank"" rel=""noopener noreferrer"">prime gaps</a> (sequence <span class=""nowrap""><a class=""extiw"" title=""oeis:A001223"" href=""https://oeis.org/A001223"">A001223</a></span> in the OEIS) do not follow a predictable pattern. You can download the latest version of this code from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem007.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">is.prime &lt;- function(n) {
    primes &lt;- esieve(ceiling(sqrt(n)))
    prod(n %% primes! = 0) == 1
}
i &lt;- 2 # First Prime
n &lt;- 1 # Start counter
while (n &lt; 10001) { # Find 10001 prime numbers
    i &lt;- i + 1 # Next number
    if(is.prime(i)) { # Test next number
        n &lt;- n + 1 # Increment counter
        i &lt;- i + 1 # Next prime is at least two away
    }
}
answer &lt;- i - 1
</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Sexy Primes</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The largest prime gap for the first 10,001 primes is 72. <a href=""https://en.wikipedia.org/wiki/Sexy_prime"" target=""_blank"" rel=""noopener noreferrer"">Sexy primes</a> with a gap of 6 are the most common and there are 1270 <a href=""https://en.wikipedia.org/wiki/Twin_prime"" target=""_blank"" rel=""noopener noreferrer"">twin primes</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(tidyverse)
primes &lt;- esieve(i)
p &lt;- length(primes)
gaps &lt;- data_frame(Gap = primes[2:p] - primes[1:(p - 1)], Sexy = Gap %% 6 == 0) %&gt;%
    group_by(Gap, Sexy) %&gt;%
    count()

ggplot(gaps, aes(Gap, n, fill = Sexy)) +
    geom_col() +
    scale_fill_manual(values = c( ""#7391AB"", ""#A62102"")) +
    labs(title = ""Frequency of prime gaps for the first 10,000 primes"",
        x = ""Prime Gap"",
        y = ""Frequency"")
        guide_legend(title = ""Sexy Primes"")
</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":6605} -->
<div class=""wp-block-image""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/01/problem007-1024x1024.png"" alt=""Euler Problem 7: 10,001st Prime and Sexy Primes"" class=""wp-image-6605"" /></figure></div>
<!-- /wp:image -->"
53,2017-01-18,Euler Problem 8: Largest Product in a Series,https://lucidmanager.org/euler-problem-8/,euler-problem-8,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p><a href=""https://projecteuler.net/problem=8"" target=""_blank"" rel=""noopener noreferrer"">Euler Problem 8</a> combines mathematics with text analysis. Just like problem 11, it asks for the <a href=""https://lucidmanager.org/euler-problem-11/"">largest product</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The problem is defined as follows:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The four adjacent digits in the 1,000-digit number below that have the greatest product are $latex 9 \times 9 \times 8 \times 9 = 5832$.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {""align"":""center""} -->
<p class=""has-text-align-center""><code>73167176531330624919225119674426574742355349194934<br>
96983520312774506326239578318016984801869478851843<br>
85861560789112949495459501737958331952853208805511<br>
12540698747158523863050715693290963295227443043557<br>
66896648950445244523161731856403098711121722383113<br>
62229893423380308135336276614282806444486645238749<br>
30358907296290491560440772390713810515859307960866<br>
70172427121883998797908792274921901699720888093776<br>
65727333001053367881220235421809751254540594752243<br>
52584907711670556013604839586446706324415722155397<br>
53697817977846174064955149290862569321978468622482<br>
83972241375657056057490261407972968652414535100474<br>
82166370484403199890008895243450658541227588666881<br>
16427171479924442928230863465674813919123162824586<br>
17866458359124566529476545682848912883142607690042<br>
24219022671055626321111109370544217506941658960408<br>
07198403850962455444362981230987879927244284909188<br>
84580156166097919133875499200524063689912560717606<br>
05886116467109405077541002256983155200055935729725<br>
71636269561882670428252483600823257530420752963450</code></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Find the <a href=""https://projecteuler.net/problem=8"" target=""_blank"" rel=""noopener noreferrer"">thirteen adjacent digits</a> in the 1,000-digit number that have the greatest product. What is the value of this product?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 8 Proposed Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The first step is to define the digits as a character string. The answer is found by cycling through all 13-character <a href=""https://en.wikipedia.org/wiki/N-gram"" target=""_blank"" rel=""noopener noreferrer"">n-grams</a> to find the highest product using the <a href=""https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/prod"" target=""_blank"" rel=""noopener noreferrer"">prod</a> function. You can download the most recent version of this code from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem008.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=""wp-block-preformatted""># Define digits
digits &lt;- ""7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450""
ngram &lt;- 13 # Define length
answer &lt;- 0
# Clycle through digits
    for (i in 1:(nchar(digits) - ngram + 1)) {
    # Pick 13 consecutive digits
    adjecent &lt;- substr(digits, i, i + ngram - 1)
    # Define product
    mult &lt;- prod(as.numeric(unlist(strsplit(adjecent, """")))) # Largest? 
    if (mult &gt; answer)
        answer &lt;- mult
}
</pre>
<!-- /wp:preformatted -->"
108,2017-01-26,Euler Problem 9: Special Pythagorean Triple,https://lucidmanager.org/euler-problem-9/,euler-problem-9,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 9 is about the ancient problem or Pythagorean triples. My background is in carpentry and the basic Pythagorean triple 3:4:5 is a common tool to check whether an angle is straight. When building a structure, simply mark 3 and 4 units of length on the two sides and check whether the diagonal is exactly five units to ensure your angles are straight. There are, however, an infinite number of triples that form right angles.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 9 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>A <a href=""https://en.wikipedia.org/wiki/Pythagorean_triple"" target=""_blank"" rel=""noopener noreferrer"">Pythagorean triple</a>&nbsp;is a set of three natural numbers, $latex a &lt; b &lt; c$, for which, $latex a^2 + b^2 = c^2$. For example: $latex 3^2 + 4^2 = 9 + 16 = 25 = 5^2$. There exists exactly one Pythagorean triplet for which $latex a + b + c = 1000$. <a href=""https://projecteuler.net/problem=9"" target=""_blank"" rel=""noopener noreferrer"">Find the product</a> of <em>a</em>, <em>b</em> and <em>c</em>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Brute Force Solutions</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This solution uses brute force and checks all combinations of <em>a</em>, <em>b</em> and <em>c</em>. To limit the solution space I used the fact that <em>a</em> &lt; <em>b</em> &lt; <em>c</em>, which implies that <em>a</em> &lt; <em>s</em>/3,&nbsp; and <em>a</em> &lt; <em>b</em> &lt; <em>s</em>/2, where <em>s</em> is the sum of the three sides.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">a &lt;- 0
b &lt;- 0
c &lt;- 0
s &lt;- 1000
found &lt;- FALSE
for (a in 1:floor((s / 3))) {
    for (b in a:(s / 2)) {
        c &lt;- s - a - b
        if (a^2 + b^2 == c^2) {
            found &lt;- TRUE
            break
        }
    }
    if (found) break
}
answer &lt;- a * b * c
print(answer)

# Improved Brute Force
a &lt;- 1
b &lt;- 499
repeat{
    c &lt;- sqrt(a^2 + b^2) 
    if (a + b + c &gt; 1000) {b &lt;- b - 1}
    else if (a + b + c &lt; 1000) {a &lt;- a + 1}
    else if (a + b + c == 1000) {break}
}
answer &lt;- a * b * c
print(answer)</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Euclid's Method</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Euclid's formula generates Pythagorean triples for an arbitrary pair of integers $latex m$ and $latex n$ with $latex m &gt; n &gt; 0$. The formula states that the integers $latex a = m^2 - n^2, b = 2mn, c = m^2 = n^2$ form a Pythagorean triple. View the code below or download the most recent version from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem009.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">abcsum &lt;- 1000
x &lt;- abcsum / 2
min &lt;- floor(sqrt(x / 2))
max &lt;- ceiling(sqrt(x))
m &lt;- min:max
m &lt;- m[x %% m == 0]
n &lt;- ((x / m) - m)
a &lt;- 2 * m * n
b &lt;- m^2 - n^2
c &lt;- m^2 + n^2
answer &lt;- a * b * c
print(answer)</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":120,""className"":""wp-image-120""} -->
<div class=""wp-block-image wp-image-120""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/02/Pythagorean_Triples_Scatter_Plot.png"" alt=""Euler Problem 9: Pythagorean Triples"" class=""wp-image-120"" /><figcaption>Scatter plot of the legs (a, b) of the first Pythagorean triples with <em>a</em> and <em>b</em> less than 6000. Negative values are included to illustrate the parabolic patterns. By Dearjean13 <a title=""Creative Commons Attribution-Share Alike 4.0"" href=""https://creativecommons.org/licenses/by-sa/4.0/"">CC BY-SA 4.0</a>.</figcaption></figure></div>
<!-- /wp:image -->"
124,2017-01-23,Trumpworld Analysis: Ownership Relations in his Business Network,https://lucidmanager.org/trumpworld-analysis/,trumpworld-analysis,The Devil is in the Data,Network Analysis|R Language,"<!-- wp:paragraph -->
<p>You do not need a machine learning algorithm to predict that the presidency of Donald Trump will be controversial. Judging by his pointed language in the campaign, we can rest assured that Trump will break many conventions of world politics. One of the most discussed aspects of his reign is the massive&nbsp;potential for conflicts of interest. Trump's complex business empire is entangled with national and international politics. Buzzfeed has mapped many of the relationships between&nbsp;businesses and people in what they have dubbed <a href=""https://www.buzzfeed.com/johntemplon/help-us-map-trumpworld"">Trumpworld</a>. They provided the data to enable citizens data science into the wheelings and dealings of Donald J. Trump. The <a href=""https://docs.google.com/spreadsheets/d/1Z5Vo5pbvxKJ5XpfALZXvCzW26Cl4we3OaN73K9Ae5Ss/edit"">raw data set</a> consists of three subsets of connections between:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Organisations</li><li>People</li><li>People and organisations</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>This article presents a quick analysis of the data using the R language for statistical computing and the iGraph package for analysing networks. View download this code and associated files from <a href=""https://github.com/pprevos/r.prevos.net/tree/master/Miscellaneous/TrumpWorld"" rel=""noopener"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Trumpworld Analysis</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This article analyses the connections between organisations using the mighty <a href=""http://igraph.org/r/"">igraph package</a>.The package implements social network analysis for the R language which can be used for many purposes, such as analysing <a href=""https://lucidmanager.org/analyse-enron-corpus/"">email traffic</a> or <a href=""https://lucidmanager.org/pacific-island-hopping/"">flight paths</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The code snippet below reads the data and converts it to a graph that can be examined using social network analysis techniques. I have saved the raw data available on Google Sheets file as CSV files. This data is filtered to contain only ownership relationships and the names of the organisations.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(tidyverse)
library(igraph)
trumpworld.org &lt;- read_csv(""TrumpWorld Data org-org.csv"") %&gt;%
    filter(Connection == ""Ownership"") %&gt;%
    select(OrgA = ""Organization A"", OrgB = ""Organization B"")

org.ownership &lt;- trumpworld.org %&gt;%
    as.matrix %&gt;%
    graph.edgelist()

par(mar=rep(0,4))
plot(org.ownership,
layout = layout.fruchterman.reingold,
    vertex.label = NA,
    vertex.size = 2,
    edge.arrow.size = .1
)</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":125,""className"":""aligncenter size-full wp-image-125""} -->
<div class=""wp-block-image aligncenter size-full wp-image-125""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/01/trumpworld-org1.png"" alt=""Trumpworld business ownership network"" class=""wp-image-125"" /><figcaption>Trumpworld Analysis: Ownership Relations in his Business Network</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Network Analysis</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This network contains 309 ownership relationships between 322 distinct organisations. When we plot the data, we see that most connections are dyadic connections between two firms. The plot is organised with the <a href=""https://en.wikipedia.org/wiki/Force-directed_graph_drawing"">Fruchterman-Reingold</a> algorithm to improve its clarity. We can also see a large cluster in the centre. The names have been removed for clarity. Our excursion into Trumpland continues by zooming in on the subnetwork. The second code section excises this connected subnetwork so we can analyse it in more detail.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Digging Deeper</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The node with the highest <a href=""https://en.wikipedia.org/wiki/Degree_(graph_theory)"">degree</a>&nbsp;identifies the business with the most holdings. This analysis shows that DJT Holdings LLC owns 33 other organisations. These organisations hold other organisations. We can now use the cluster function to investigate this subnetwork using the decompose function, which splits the network into its unconnected subnetworks. The code then selects and visualises the largest of the subnetworks.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This Trumpworld analysis shows that the ownership network&nbsp;is a <a href=""https://en.wikipedia.org/wiki/Star_(graph_theory)"">star network</a>. DJT Holdings LLC centrally controls all organisations. Perhaps this graph visualises the management style of the soon to be president Trump. Trump centrally controls his empire, which is typical of a&nbsp;family business. Does this chart visualise&nbsp;Trump's leadership style? Is the star network an expression of his lack of trust and thus desire to oversee everything directly?</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">which.max(degree(org.ownership))

org.ownership.d &lt;- decompose(org.ownership)

largest &lt;- which.max(sapply(org.ownership.d, diameter))

plot(org.ownership.d[[largest]],
     layout=layout.fruchterman.reingold,
     vertex.label.cex = .5,
     vertex.size = 5,
    edge.arrow.size = .1
)</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":129} -->
<div class=""wp-block-image""><figure class=""aligncenter""><a href=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/01/TrumplandHoldings.png""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/01/TrumplandHoldings-1024x897.png"" alt=""Trumpworld holdings"" class=""wp-image-129"" /></a><figcaption>Trumpworld holdings subset. Click to zoom.</figcaption></figure></div>
<!-- /wp:image -->"
137,2017-01-20,Mapping antipodes using the ggmap package,https://lucidmanager.org/mapping-antipodes/,mapping-antipodes,The Devil is in the Data,geocode|Map Porn|R Language,"<!-- wp:paragraph -->
<p>When I was a kid, I was was fascinated by the conundrum of what happens when you drill a hole straight through the centre of the earth. I always believed&nbsp;that I would turn up in Australia. But is this really the case?</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The antipodes of any place on earth is the place that is diametrically opposite to it. A pair of antipodes are&nbsp;connected by a straight line running through the centre of the Earth. These points are as far away from each other as is possible on this planet. Two people are antipodes when they live on opposite sides of the globe. Their feet&nbsp;(πούς/pous in Ancient Greek) are directly opposite each other.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>How can we use coding in R to solve this conundrum?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Mapping antipodes with ggmap</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>We can roughly recreate the antipodean map on Wikipedia with the&nbsp;<a href=""https://cran.r-project.org/web/packages/globe/"" target=""_blank"" rel=""noopener noreferrer""><em>globe</em> package</a>. This package, written by Adrian Baddeley, plots 2D and 3D views of the earth. The package contains a data file with major coastlines that can be used to create a flipped map of the world.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The package contains a data file with major coastlines that can be used to create a flipped map of the world. To turn a spatial location into its antipode you subtract 180 degrees from the longitude and reverse the sign of the latitude, shown below.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":6865,""className"":""size-full wp-image-6865""} -->
<div class=""wp-block-image size-full wp-image-6865""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/01/antipodes.png"" alt=""Antipodean globe."" class=""wp-image-6865"" /><figcaption>Antipodean globe.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(tidyverse)
## Antipodean globe
world &lt;- map_data(""world"")
anti_world &lt;- world %&gt;%
    mutate(long = long - 180,
           lat = - lat)           
ggplot() +
    geom_polygon(data = world,  aes(long, lat, group = group), fill = ""grey"") +
    geom_polygon(data = anti_world, aes(long, lat, group = group),
                 fill = ""blue"", alpha = 0.2) + 
    coord_map(""ortho"", orientation = c(0, 100, 00)) +
    theme_void()</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>We can also use the<a href=""https://cran.r-project.org/web/packages/ggmap/index.html"" target=""_blank"" rel=""noopener noreferrer"">&nbsp;ggmap&nbsp;package</a> to&nbsp;visualise antipodes. This package, developed by David Kahle antipodean&nbsp;R-guru&nbsp;Hadley Wickham, has a neat geocoding function to obtain a spatial location. You will need a Google API to enable the <a href=""https://lucidmanager.org/geocoding-with-ggmap/"">geocoding function</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The antipode function takes the description of a location and a zoom level to plot a dot on the antipode location. The gridExtra package is used to create a faceted map, which is not otherwise possible in ggmap.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(gridExtra)
library(ggmap)
api &lt;- readLines(""google.api"") # Text file with the API key
register_google(key = api)
## Antipode function
antipode &lt;- function(location, zm = 6) {
    # Map location
    lonlat &lt;- geocode(location)
    loc1 &lt;- get_map(lonlat, zoom = zm)
    map1 &lt;- ggmap(loc1) +
        geom_point(data = lonlat, aes(lon, lat, col = ""red"", size = 10)) + 
        theme(legend.position = ""none"")
    # Define antipode
    lonlat$lon &lt;- lonlat$lon-180
    if (lonlat$lon &lt; -180) 
        lonlat$lon &lt;- 360 + lonlat$lon
    lonlat$lat &lt;- -lonlat$lat
    loc2 &lt;- get_map(lonlat, zoom = zm)
    map2 &lt;- ggmap(loc2) +
        geom_point(data = lonlat, aes(lon, lat, col = ""red"", size = 10)) + 
        theme(legend.position = ""none"")
    grid.arrange(map1, map2, nrow = 1)
}

antipode(""Rector Nelissenstraat 47 Hoensbroek"", 4)</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>This code solves the problem I was thinking about as a child. Running the code shows that the antipodes location of&nbsp;the home I grew up in is not in Australia, but quite a way south of New Zealand. Another childhood fantasy shattered ... You can also view this code on&nbsp;<a href=""https://github.com/pprevos/geography/blob/master/antipodes.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":6866,""className"":""size-full wp-image-6866""} -->
<div class=""wp-block-image size-full wp-image-6866""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/01/AntipodeHoensbroek.jpg"" alt=""Mapping antipodes: Antipode map of my birthplace, Hoensbroek, the Netherlands."" class=""wp-image-6866"" /><figcaption>Antipode map of my birthplace, Hoensbroek, the Netherlands.</figcaption></figure></div>
<!-- /wp:image -->"
152,2017-02-01,Euler Problem 10: Summation of Primes,https://lucidmanager.org/euler-problem-10/,euler-problem-10,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 10 asks for the summation of primes. Computationally this is a simple problem because we can re-use the prime sieve developed for <a href=""https://lucidmanager.org/euler-problem-3/"">Euler Problem 3</a>. When generating a large number of primes the erratic pattern at which they occur is much more interesting than their sum. Mathematicians consider primes the basic building blocks of number theory.&nbsp;No matter how hard we look, however, they do not seem to obey any logical sequence.<br>The summing of primes reveals an interesting problem in mathematics. <a href=""https://en.wikipedia.org/wiki/Goldbach's_conjecture"" target=""_blank"" rel=""noopener noreferrer"">Goldbach's conjecture</a> is one of the oldest and best-known unsolved problems in number theory and states that:</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class=""wp-block-quote""><p>Every even integer greater than 2 can be expressed as the sum of two primes.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>Note that this conjecture is only about even numbers. Goldbach also theorised that every odd composite number can be written as the sum of a prime and twice a square.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=_tCZwRuB0Bc"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=_tCZwRuB0Bc
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Euler Problem 10 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The sum of the primes below 10 is 2 + 3 + 5 + 7 = 17. <a href=""https://projecteuler.net/problem=10"" target=""_blank"" rel=""noopener noreferrer"">Find the sum of all the primes below two million</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The sieve of Eratosthenes function used in <a href=""https://lucidmanager.org/euler-problem-3/"">Euler Problem 3</a> can be reused once&nbsp;again to generate the prime numbers between two and two million. An interesting problem occurs when I run the code.&nbsp;When I sum all the primes without the <code>as.numeric</code> conversion, R throws an integer overflow error and recommends the conversion. You can download this code from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem010.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=""wp-block-preformatted"">primes &lt;- esieve(2e6)
answer &lt;- (sum(as.numeric(primes)))
print(answer)
</pre>
<!-- /wp:preformatted -->"
160,2017-02-09,Euler Problem 11: Largest Product in a Grid,https://lucidmanager.org/euler-problem-11/,euler-problem-11,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 11 is a fairly straightforward application of <a href=""http://www.r-tutor.com/r-introduction/vector/vector-arithmetics"">vector arithmetics</a> in R. Just like problem 8, it asks for the <a href=""https://lucidmanager.org/euler-problem-8/"">largest product</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 11 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In the 20 × 20 grid below, four numbers along a diagonal line have been marked in red.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":6527} -->
<div class=""wp-block-image""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/02/euler-problem-11a.png"" alt=""Euler Problem 11"" class=""wp-image-6527"" /></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>The product of these numbers is 26 × 63 × 78 × 14 = 1,788,696. <a href=""https://projecteuler.net/problem=11"" target=""_blank"" rel=""noopener noreferrer"">What is the greatest product</a> of four adjacent numbers in the same direction (up, down, left, right, or diagonally) in the 20 by 20 grid?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The solution applies straightforward vector arithmetic. The product of all verticals is an array of the product of rows 1 to 4, rows 2 to 5 and so on. The code uses a&nbsp;similar logic for the horizontals and the diagonals. You can view the code below or download it from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem011.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">square &lt;- readLines(""Data/p011_matrix.txt"")
square &lt;- as.numeric(unlist(lapply(square, function(x){strsplit(x, "" "")})))
square &lt;- matrix(square, ncol = 20)

prod.vert &lt;- square[1:17, ] * square[2:18, ] * square[3:19, ] * square[4:20, ]
prod.hori &lt;- square[,1:17] * square[,2:18] * square[,3:19] * square[,4:20]
prod.dia1 &lt;- square[1:17, 1:17] * square[2:18, 2:18] * square[3:19, 3:19] * square[4:20, 4:20]
prod.dia2 &lt;- square[4:20, 1:17] * square[3:19, 2:18] * square[2:18, 3:19] * square[1:17, 4:20]

answer &lt;- max(prod.vert, prod.hori, prod.dia1, prod.dia2)</pre>
<!-- /wp:preformatted -->"
164,2017-02-15,Euler Problem 12: Highly Divisible Triangular Number,https://lucidmanager.org/euler-problem-12/,euler-problem-12,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 12 takes us to the realm of <a href=""https://en.wikipedia.org/wiki/Triangular_number"" rel=""noopener"">triangular numbers</a> and <a href=""https://en.wikipedia.org/wiki/Divisor"" rel=""noopener"">proper divisors</a>. The image below shows a hands-on method to visualise the number of divisors of ten. <a href=""https://en.wikipedia.org/wiki/Cuisenaire_rods"" rel=""noopener"">Cuisenaire rods</a> are learning aids to explore mathematics. Each of the coloured rods has a different integer length, which allows students to explore basic arithmetic. In this article, I discuss a method to generate triangular numbers using the R language.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center""} -->
<div class=""wp-block-image""><figure class=""aligncenter""><a href=""https://en.wikipedia.org/wiki/Cuisenaire_rods""><img src=""https://upload.wikimedia.org/wikipedia/commons/thumb/b/b0/Cuisenaire_ten.JPG/1200px-Cuisenaire_ten.JPG"" alt=""Euler Problem 12: Divisors of triangular numbers.""/></a><figcaption>The divisors of 10 illustrated with Cuisenaire rods: 1, 2, 5, and 10 (Wikipedia).</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Euler Problem 12 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The sequence of triangle numbers is generated by adding the natural numbers. So the 7<sup>th</sup> triangle number would be $latex 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28$. The first ten terms would be: $latex 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, \ldots$ Let us list the factors of the first seven triangle numbers:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>1</strong>: 1</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>3</strong>: 1, 3</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>6</strong>: 1, 2, 3, 6</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>10</strong>: 1, 2, 5, 10</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>15</strong>: 1, 3, 5, 15</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>21</strong>: 1, 3, 7 ,21</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><strong>28</strong>: 1, 2, 4, 7, 14, 28</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>We can see that 28 is the first triangle number to have over five divisors. What is the value of <a href=""https://projecteuler.net/problem=12"" rel=""noopener"">the first triangle number</a> to have over five hundred divisors?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In the video below, Vishal Kataria explains a simple method to determine the number of divisors using prime factorization. The&nbsp;prime factorization of $latex n$ is given by:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex n = p^{\alpha_1}_1 \times p^{\alpha_2}_2 \times p^{\alpha_k}_k$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The number of proper divisors is:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex d = (\alpha_1 + 1)&nbsp;(\alpha_2 + 1) \ldots (\alpha_k + 1)$</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=jXRHfgqE1qY"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=jXRHfgqE1qY
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>The code reuses the prime factorisation function developed for <a href=""https://lucidmanager.org/euler-problem-3/"">Euler Problem 3</a>. This function results in a vector of all prime factors, e.g. the prime factors of 28 are 2, 2 and 7.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The code to solve this problem determines the values for alpha using the <a href=""https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/rle"" rel=""noopener"">run length function</a>. This function counts the number of times each element in a sequence is repeated. The outcome of this function is a vector of the values and the number of times each is repeated. The prime factors of 28 are 2 and 7, and their run lengths are&nbsp;2 and 1. The number of divisors can now be determined.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex 28 = 2^2 \times 7^1$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex d = (2+1)(1+1) = 6$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The code to solve Euler Problem 12 is shown below. The loop continues until it finds a triangular number with 500 divisors.&nbsp;The first two lines increment the index and create the next triangular number. The third line in the loop&nbsp;determines the&nbsp;number of times each factor is repeated (the run lengths). The last line calculates the number of divisors using the formula mentioned above. View the code below or download the latest version from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem012.R"" rel=""noopener"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">i &lt;- 0
divisors &lt;- 0
while (divisors &lt; 500) {
    i &lt;- i + 1
    triangle &lt;- (i * (i + 1)) / 2
    pf &lt;- prime.factors(triangle)
    alpha &lt;- rle(pf)
    divisors &lt;- prod(alpha$lengths + 1)
}
answer &lt;- triangle
print(answer)</pre>
<!-- /wp:preformatted -->"
182,2017-02-22,Euler Problem 13: Adding a Large Sum of 1000 Digits,https://lucidmanager.org/euler-problem-13/,euler-problem-13,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 13 asks to add one hundred&nbsp;numbers with fifty digits. This seems like a simple problem where it not that most computers are not designed to deal with numbers with a lot of integers. For example:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex 2^{64} = 18446744073709551616$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>When asking R to compute this value we get&nbsp;1.844674e+19, losing most of the digits and limiting the accuracy of the results. Computers solve this problem using <a href=""https://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic"" target=""_blank"" rel=""noopener noreferrer"">Arbitrary-precision Arithmetic</a>. There are many software libraries that can process long integers without loosing accuracy.&nbsp;Euler Problem 13 requires this type of approach.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 13 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Work out the first ten digits of the <a href=""https://projecteuler.net/problem=13"" target=""_blank"" rel=""noopener noreferrer"">sum</a> of the following one-hundred 50-digit numbers.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The easy way to solve this problem is to use the <a href=""https://cran.r-project.org/web/packages/gmp/index.html"" target=""_blank"" rel=""noopener noreferrer"">gmp package</a> for working with very large integers. This package uses a special number&nbsp;types such as Big Rational and Big Integer. The number of digits in these number types is only limited by the size of the memory.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(gmp)
numbers &lt;- readLines(""Euler/p013_numbers.txt"")
digits &lt;- sum(as.bigz(numbers))
answer &lt;- substr(as.character(digits),1,10)</pre>
<!-- /wp:preformatted -->

<!-- wp:heading {""level"":1} -->
<h1>Using Base-R</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To find the solution to this problem using only base R, I wrote a function to add numbers using strings instead of integers. The function adds leading zeros to the smallest number to make them both the same length. The function then proceeds to add numbers in the same way we were taught in primary school. This function can in principle be used for several other Euler Problems using large integers.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">big.add &lt;- function(a, b) {
    # Add leading zeros to smallest numer
    if (nchar(a) &lt; nchar(b))
    a &lt;- paste0(paste(rep(0, nchar(b) - nchar(a)), collapse = """"), a) 
    if (nchar(a) &gt; nchar(b))
        b &lt;- paste0(paste(rep(0, nchar(a) - nchar(b)), collapse = """"), b)
    solution &lt;- vector()
    remainder &lt;- 0
    for (i in nchar(b):1) {
        p &lt;- as.numeric(substr(a, i, i))
        q &lt;- as.numeric(substr(b, i, i))
        r &lt;- p + q + remainder 
        if (r &gt;= 10 &amp; i!=1) {
            solution &lt;- c(solution, r %% 10)
            remainder &lt;- (r - (r %% 10))/10
        } else {
            solution &lt;- c(solution, r)
            remainder &lt;- 0
        }
    }
return(paste(rev(solution), collapse = """"))
}</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>With this function, the problem is easy to solve. The second part of the code runs this function over the one hundred numbers provided on the Euler Problem page and calculates the answer.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">numbers &lt;- readLines(""Euler/p013_numbers.txt"")
for (i in numbers) {
    answer &lt;- big.add(answer, i)
}
answer &lt;- substr(answer, 1, 10)</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Multiplying Big Numbers</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>You can expand this function to multiply a very large number with a smaller number using the Reduce function. This function adds the number a to itself, using the <code>big.add</code> function. The outcome of the addition is used in the next iteration&nbsp;until it has been repeated <em>b</em> times. The number b in this function needs to be a 'low' number because it uses a vector of the length b.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=""wp-block-preformatted"">big.mult &lt;- function(a, b) {
    Reduce(big.add, rep(a, as.numeric(b)))
}
</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>These base-R solutions for managing very large numbers is reused in the solution for <a href=""https://lucidmanager.org/euler-problem-25/"">Euler Problem 25</a> that asks for a Fibonacci number with 1000 decimals.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>You can download the latest version of this code from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem013.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=6bpLYxk9TUQ"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-4-3 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-4-3 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=6bpLYxk9TUQ
</div></figure>
<!-- /wp:core-embed/youtube -->"
188,2017-03-09,Euler Problem 15: Pathways Through a Lattice - Taxicab geometry,https://lucidmanager.org/euler-problem-15-lattice-paths/,euler-problem-15-lattice-paths,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 15 analyses <a href=""https://en.wikipedia.org/wiki/Taxicab_geometry"" target=""_blank"" rel=""noopener noreferrer"">taxicab geometry</a>. This system replaces the usual distance function with the sum of the absolute differences of their Cartesian coordinates. In other words, the distance a taxi would travel in a grid plan instead of the shortest distance between two points. In chess, the distance between squares on the chessboard for rooks is measured in taxicab distance.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The fifteenth Euler problem asks to determine the number of <a href=""http://www.intmath.com/blog/mathematics/taxicab-geometry-4941"" target=""_blank"" rel=""noopener noreferrer"">possible routes a taxi can take</a> in a city of a certain size. This problem is logically similar to <a href=""https://lucidmanager.org/euler-problem-18-67-maximum-path-sum/"">Euler Problem 18 and 67</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=Pll5MXk5AMA"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=Pll5MXk5AMA
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Euler Problem 15 Definition</h2>
<!-- /wp:heading -->

<!-- wp:image {""align"":""center""} -->
<div class=""wp-block-image""><figure class=""aligncenter""><img src=""https://projecteuler.net/project/images/p015.png"" alt=""Euler Problem 15: Lattice Paths"" /></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Starting in the top left corner of a 2×2 grid, and only being able to move to the right and down, there are exactly 6 routes to the bottom right corner. <a href=""https://projecteuler.net/problem=15"" target=""_blank"" rel=""noopener noreferrer"">How many possible&nbsp;routes</a> are there through a 20×20 grid?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The defined lattice is one larger than the number of squares. Along the edges of the matrix, only one pathway is possible: straight to the right or down.&nbsp;We can calculate the number of possible pathways&nbsp;for the remaining&nbsp;number by adding the number to the right and below the point.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex p_{i,j}=p_{i,j-1}+p_{{i+1},j}$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For the two by two&nbsp;lattice the solution space is:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>6 &nbsp;3 &nbsp;1<br>3 &nbsp;2 &nbsp;1<br>1 &nbsp;1 &nbsp;0</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The total number of pathways from the upper left corner to the lower right corner is thus 6. This logic can now be applied to a grid of any arbitrary size using the following code. The code defines the lattice and initiates the boundary conditions. The bottom row and the right column are filled with 1 as there is only one solution from these points. The&nbsp;code then calculates the pathways by working backwards through the matrix. The final solution is the number is the first cell.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>View the code below or download the latest version from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem015.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true""># Define lattice
nLattice &lt;- 20
lattice = matrix(ncol = nLattice + 1, nrow = nLattice + 1)

# Boundary conditions
lattice[nLattice + 1,-(nLattice + 1)] &lt;- 1
lattice[-(nLattice + 1), nLattice + 1] &lt;- 1

# Calculate Pathways
for (i in nLattice:1) {
    for (j in nLattice:1) {
        lattice[i,j] &lt;- lattice[i+1, j] + lattice[i, j+1]
    }
}

answer &lt;- lattice[1,1]</pre>
<!-- /wp:preformatted -->"
192,2017-03-01,Euler Problem 14: Find the Longest Collatz Sequence,https://lucidmanager.org/euler-problem-14-collatz-sequence/,euler-problem-14-collatz-sequence,The Devil is in the Data,Network Analysis|Numberphile|Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 14 looks at the&nbsp;<a href=""https://en.wikipedia.org/wiki/Collatz_conjecture"">Collatz Conjecture</a>. These playful&nbsp;sequences, named after German mathematician Lothar Collatz (1910–1990), cause mathematicians a lot of headaches. This video introduces the&nbsp;problem much better than I can describe it.</p>
<!-- /wp:paragraph -->

<!-- wp:embed {""url"":""https://www.youtube.com/watch?v=5mFpVDpKX70""} -->
<figure class=""wp-block-embed""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=5mFpVDpKX70
</div></figure>
<!-- /wp:embed -->

<!-- wp:heading -->
<h2>Euler Problem 14 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The following iterative sequence is defined for the set of positive integers:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex n \rightarrow n/2 $ ( $latex n $ is even)<br>$latex n \rightarrow 3n + 1 $ ( $latex n $ is odd)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Using the rule above and starting with 13, we generate the following sequence:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex 13 \rightarrow 40 \rightarrow 20 \rightarrow 10 \rightarrow 5 \rightarrow 16 \rightarrow 8 \rightarrow 4 \rightarrow 2 \rightarrow 1 $</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This sequence (starting at 13 and finishing at 1) contains ten terms. Although it has not been proved yet (Collatz Problem), it is thought that all starting numbers finish at 1. <a href=""https://projecteuler.net/problem=14"">Which starting number, under one million, produces the longest chain?</a> Note: Once the chain starts the terms are allowed to go above one million.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>You can view the code below or download the most recent version from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem014.R"" rel=""noopener"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 14 Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This problem is highly computationally intensive, and it highlights R's lack of speed. Generating one million Collatz sequences and finding the longest one requires a lot more than a minute of processing time allowed for in Project Euler.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">collatz.chain &lt;- function(n) {
    chain &lt;- vector()
    i &lt;- 1
    while (n != 1) {
        if (n%%2 == 0)
            n &lt;- n / 2
        else
        n &lt;- 3 * n + 1
        chain[i] &lt;- n
        i &lt;- i + 1
    }
    return(chain)
}
answer &lt;- 0
collatz.max &lt;- 0
for (n in 1:1E6) {
    collatz.length &lt;- length(collatz.chain(n))
    if (collatz.length &gt; collatz.max) {
        answer &lt;- n
        collatz.max &lt;- collatz.length
    }
}
print(answer)</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>The second version of the code is optimised because it stores&nbsp;the length of all sequences in an array. When the code generates a sequence and lands on a number already analysed, then it adds that previous number to the current one and moves on to the next step. This approach requires more memory but saves a lot of computation time.&nbsp;A minor tweak to the code optimises the rule for uneven numbers. Tripling an uneven number and adding one will always result in an even number so we can skip one step. This solution is more than twice as fast as the first version.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">collatz.length &lt;- vector(length = 1E6)
collatz.length[1] &lt;- 0
for (n in 2:1E6) {
    x &lt;- n
    count &lt;- 0 
    while (x != 1 &amp; x &gt;= n) {
        if (x %% 2 == 0) {
            x &lt;- x / 2
            count &lt;- count + 1
        }
        else {
            x &lt;- (3 * x + 1) / 2
            count &lt;- count + 2
        }
    }
    count &lt;- count + collatz.length[x]
    collatz.length[n] &lt;- count
}
answer &lt;- which.max(collatz.length)
print(answer)</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Visualising Collatz Sequences</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The Collatz sequence is an example of a simple mathematical rule that can create an unpredictable pattern. The number of steps required to reach one is listed in <a href=""https://oeis.org/A006577"" rel=""noopener"">A006577</a> of the Online Encyclopedia of Integer Sequences. The image below visualises the number of steps for the first 1000 positive numbers. The scatterplot shows some unusual patterns. Does this visualisation show that the Collatz Sequence does have a pattern after all?</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":283} -->
<div class=""wp-block-image""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/03/collatz-1.png"" alt=""Euler Problem 14: Number of halving and tripling steps to reach 1 in the Collatz problem."" class=""wp-image-283"" /></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Collatz Chains</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The Collatz sequences can also be visualised using networks. Each step between two numbers is an edge and the numbers are the vertices. For&nbsp;example, the network for the Collatz sequence for number 10 is&nbsp;5–16, 16–8, 8–4, 4–2, 2–1. When generating subsequent sequences the network will start to overlap and a tree of sequences appears. The tree below combines the Collatz&nbsp;sequences for the numbers 2 to 26. Number 27 has a very long sequence, making the tree much harder to read.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":413} -->
<div class=""wp-block-image""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/03/collatznetwork2-26.png"" alt=""Network of Collatz sequences n=2-26 (Euler problem 14)"" class=""wp-image-413"" /></figure></div>
<!-- /wp:image -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">edgelist &lt;- data.frame(a = 2, b = 1)
for (n in 3:26) {
    chain &lt;- as.character(c(n, collatz.chain(n)))
    chain &lt;- data.frame(a = chain[-length(chain)],
    b = chain[-1])
    edgelist &lt;- rbind(edgelist, chain)
}
library(igraph)
g &lt;- graph.edgelist(as.matrix(edgelist))
g &lt;- simplify(g)
par(mar = rep(0, 4))
V(g)$color &lt;- degree(g, mode = ""out"") + 1
plot(g,
    layout = layout.kamada.kawai,
    vertex.color = V(g)$color,
    vertex.size = 6,
    vertex.label.cex = .7,
    vertex.label.color = ""black"",
    edge.arrow.size = .1,
    edge.color = ""black""
)</pre>
<!-- /wp:preformatted -->"
218,2017-03-15,Euler Problem 16: Power Digit Sum,https://lucidmanager.org/euler-problem-16-power-digit-sum/,euler-problem-16-power-digit-sum,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 16 is reminiscent of the famous <a href=""http://trailblazernetizens.blogspot.com.au/2015/08/the-amazing-chessboard-theory.html"">fable of wheat and chess</a>.&nbsp;Lahur Sessa invented the game of chess for King&nbsp;Iadava. The king was delighted with the game and asked Lahur to name his reward. Lahur&nbsp;asked the king to place one grain of rice on the first square of a chessboard, two on the next square, four on the third square&nbsp;and so on&nbsp;until the board is filled.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The king&nbsp;was happy with his humble request&nbsp;until his mathematicians worked out that it would take millions of tonnes of grain. Assuming there are 25 grains of wheat in a gramme, the last field will contain more than 461,168,602,000 tonnes of grain.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 16 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>$latex 2^{15} = 32768$ and the sum of its digits is $latex 3 + 2 + 7 + 6 + 8 = 26$. What is the sum of the digits of the number $latex 2^{1000}$?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The most straightforward solution uses the <a href=""https://cran.r-project.org/web/packages/gmp/index.html"">GMP</a>&nbsp;package for Multiple Precision Arithmetic to calculate big integers. The as.bigz function results in a special class of arbitrarily large integer numbers.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(gmp)
digits &lt;- as.bigz(2^1000) # Define number
answer &lt;- sum(as.numeric(unlist(strsplit(as.character(digits), &amp;quot;&amp;quot;))))
print(answer)</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>We can also solve this problem in base-R with the <code>bigg.add</code> function&nbsp;which I&nbsp;developed for&nbsp;<a href=""https://lucidmanager.org/euler-problem-13/"">Euler Problem 13</a>. This function uses basic string operations to add to arbitrarily large numbers. Raising a number to the power of two can also be written as a series of additions:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex 2^4 = 2 \times 2 \times 2 \times 2 = ((2+2)+(2+2)) +&nbsp;((2+2)+(2+2))$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The solution to this problem is to&nbsp;add 2&nbsp;+ 2&nbsp;then add the outcome of that equation to itself, and so on. Repeat this one thousand times to raise the number two to the power of one thousand.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>You can view the code below or download the latest version from&nbsp;<a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem016.R"" rel=""noopener"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">pow &lt;- 2
for (i in 2:1000)
    pow &lt;- big.add(pow, pow)
answer &lt;- sum(as.numeric(unlist(strsplit(pow, """"))))
print(answer)</pre>
<!-- /wp:preformatted -->"
231,2017-03-22,Euler Problem 17: Number letter counts in various languages,https://lucidmanager.org/euler-problem-17-number-letter-counts/,euler-problem-17-number-letter-counts,The Devil is in the Data,Numberphile|Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 17 asks to count the letters in numbers written as words. This is a skill we all learnt in primary school mainly useful when writing cheques—to those that still use them. The principle for this problem is similar to <a href=""https://lucidmanager.org/euler-problem-22-names-scores/"">Euler Problem 22</a>, which analyses given names.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Each language has its own rules for writing numbers. My native language Dutch has very different logic to English. Both Dutch and English use compound words after the number twelve.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Linguists have theorised this is evidence that early Germanic numbers were duodecimal. This factoid is supported by the importance of a ""dozen"" as a counting word and the twelve hours in the clock. There is even a Dozenal Society that promotes the use of a number system based on 12.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=U6xJfP7-HCc"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=U6xJfP7-HCc
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>The English language changes the rules when reaching the number 21. While we say eight-teen in English, we do no say ""one-twenty"". Dutch stays consistent and the last number is always spoken first. For example, 37 in English is ""thirty-seven"", while in Dutch&nbsp;it is written as ""zevenendertig"" (seven and thirty).</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 17 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If the numbers 1 to 5 are written out in words: one, two, three, four, five, then there are 3 + 3 + 5 + 4 + 4 = 19 letters used in total. If all the numbers from 1 to 1000 (one thousand) inclusive were written out in words, <a href=""https://projecteuler.net/problem=17"" target=""_blank"" rel=""noopener noreferrer"">how many letters would be used</a>?</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>NOTE: Do not count spaces or hyphens. For example, 342 (three hundred and forty-two) contains 23 letters and 115 (one hundred and fifteen) contains 20 letters. The use of ""and"" when writing out numbers is in compliance with British usage.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The first piece of code provides a function that generates the words for numbers 1 to 999,999. This is more than the problem asks for, but it might be a useful function&nbsp;for another application. The last line concatenates all words together and removes the spaces. View download the latest version of this code, including different languages, from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem017.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">numword.en &lt;- function(x) {
    if (x &gt; 999999) return(""Error: Oustide my vocabulary"")
    # Vocabulary 
    single &lt;- c(""one"", ""two"", ""three"", ""four"", ""five"", ""six"", ""seven"", ""eight"", ""nine"")
    teens &lt;- c( ""ten"", ""eleven"", ""twelve"", ""thirteen"", ""fourteen"", ""fifteen"", ""sixteen"", ""seventeen"", ""eighteen"", ""nineteen"")
    tens &lt;- c(""ten"", ""twenty"", ""thirty"", ""forty"", ""fifty"", ""sixty"", ""seventy"", ""eighty"", ""ninety"")
    numword.10 &lt;- function (y) {
        a &lt;- y %% 100
        if (a != 0) {
            and &lt;- ifelse(y &gt; 100, ""and"", """")
            if (a &lt; 20)
                return (c(and, c(single, teens)[a]))
            else
                return (c(and, tens[floor(a / 10)], single[a %% 10]))
        }
    }
    numword.100 &lt;- function (y) {
        a &lt;- (floor(y / 100) %% 100) %% 10
        if (a != 0)
            return (c(single[a], ""hundred""))
    }
    numword.1000 &lt;- function(y) {
        a &lt;- (1000 * floor(y / 1000)) / 1000
        if (a != 0)
            return (c(numword.100(a), numword.10(a), ""thousand""))
    }
    numword &lt;- paste(c(numword.1000(x), numword.100(x), numword.10(x)), collapse="" "")
    return (trimws(numword))
}

answer &lt;- nchar(gsub("" "", """", paste0(sapply(1:1000, numword.en), collapse="""")))
print(answer)</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Writing Numbers in Dutch</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>I went beyond Euler Problem 17 by translating the code to spell numbers in Dutch. Interesting bit of trivia is that it takes 307 fewer characters to spell the numbers 1 to 1000 in Dutch than it does in English. It would be good if other people can submit functions for other languages in the comment section. Perhaps we can create an R package with a multi-lingual function for spelling numbers.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">numword.nl &lt;- function(x) {
    if (x &gt; 999999) return(""Error: Getal te hoog."")
    single &lt;- c(""een"", ""twee"", ""drie"", ""vier"", ""vijf"", ""zes"", ""zeven"", ""acht"", ""negen"")
    teens &lt;- c( ""tien"", ""elf"", ""twaalf"", ""dertien"", ""veertien"", ""fifteen"", ""zestien"", ""zeventien"", ""achtien"", ""negentien"")
    tens &lt;- c(""tien"", ""twintig"", ""dertig"", ""veertig"", ""vijftig"", ""zestig"", ""zeventig"", ""tachtig"", ""negengtig"")
    numword.10 &lt;- function(y) {
        a &lt;- y %% 100
        if (a != 0) {
            if (a &lt; 20)
                return (c(single, teens)[a])
            else
                return (c(single[a %% 10], ""en"", tens[floor(a / 10)]))
        }
    }
    numword.100 &lt;- function(y) {
        a &lt;- (floor(y / 100) %% 100) %% 10
        if (a == 1)
            return (""honderd"")
        if (a &gt; 1) 
            return (c(single[a], ""honderd""))
    }
    numword.1000 &lt;- function(y) {
        a &lt;- (1000 * floor(y / 1000)) / 1000
        if (a == 1)
            return (""duizend "")
        if (a &gt; 0)
            return (c(numword.100(a), numword.10(a), ""duizend ""))
    }
    numword&lt;- paste(c(numword.1000(x), numword.100(x), numword.10(x)), collapse="""")
    return (trimws(numword))
}

antwoord &lt;- nchar(gsub("" "", """", paste0(sapply(1:1000, numword.nl), collapse="""")))
print(antwoord)</pre>
<!-- /wp:preformatted -->"
253,2017-01-29,Spike Detection in Water Treatment Data in the R Language,https://lucidmanager.org/spike-detection/,spike-detection,The Devil is in the Data,Hydroinformatics|R Language,"<!-- wp:paragraph -->
<p>Spike detection in time series is an essential aspect of water treatment plant control. Spikes in SCADA data are events in the data stream of water treatment plants&nbsp;or similar installations. These spikes can indicate problems with the process and could result in an&nbsp;increased risk to public health. The <a href=""https://www.wsaa.asn.au/publication/health-based-targets-manual"">WSAA Health Based Targets Manual </a>specifies a series of decision rules to assess the performance of filtration processes. For example, this rule assesses the performance of conventional filtration:</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class=""wp-block-quote""><p>""Individual filter turbidity ≤ 0.2 NTU for 95% of month and not &gt; 0.5 NTU for ≥ 15 consecutive minutes.""</p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p><a href=""https://en.wikipedia.org/wiki/Turbidity"" target=""_blank"" rel=""noopener noreferrer"">Turbidity</a> is a measure for the cloudiness of a fluid because of large numbers of individual particles otherwise invisible to the naked eye. Turbidity is an important parameter in water treatment because a high level of cloudiness strongly correlates with the presence of microbes. This article shows how to implement this specific&nbsp;decision rule using the R language.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Simulation</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To create a minimum working example, I first create a simulated SCADA feed for turbidity. The&nbsp;<em>turbidity</em> data frame contains 24 hours of data. The&nbsp;<a href=""https://stat.ethz.ch/R-manual/R-devel/library/base/html/seq.POSIXt.html"" target=""_blank"" rel=""noopener noreferrer""><em>seq.POSIXt</em></a> function creates 24 hours of timestamps at a one-minute spacing. In addition, the <a href=""https://www.rdocumentation.org/search?q=rnorm"" target=""_blank"" rel=""noopener noreferrer""><em>rnorm</em></a>&nbsp;function creates 1440 turbidity&nbsp;readings with an average of 0.1 NTU and a standard deviation of 0.01 NTU. The image below visualises the simulated data. The next step is to assess this data in accordance with the decision rule.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">set.seed(1234)
turbidity &lt;- data.frame(DateTime = seq.POSIXt(as.POSIXct(""2017-01-01 00:00:00""),
                        by = ""min"", length.out = 24 * 60),
                        Turbidity = rnorm(n = 24*60, mean = 0.1, sd = 0.01)
)</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>The second section simulates five spikes in the data. The first line picks a random start time for the spike. The&nbsp;second line in the for-loop picks a duration between 10 and 30 minutes. In addition, the third line simulates the value of the spike. The mean value of the spike is determined by the <a href=""https://www.rdocumentation.org/packages/stats/versions/3.6.2/topics/Binomial"" target=""_blank"" rel=""noopener noreferrer"">rbinom</a>&nbsp;function to create either a low or a high spike. The remainder of the spike simulation inserts the new data into the turbidity data frame.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">for (i in 1:5) {
    time &lt;- sample(turbidity$DateTime, 1)
    duration &lt;- sample(10:30, 1)
    value &lt;- rnorm(1, 0.5 * rbinom(1, 1, 0.5) + 0.3, 0.05)
    start &lt;- which(turbidity$DateTime == time)
    turbidity$Turbidity[start:(start+duration - 1)] &lt;- rnorm(duration, value, value/10)
}

library(ggplot2)
ggplot(turbidity, aes(x = DateTime, y = Turbidity)) + 
    geom_line(size = 0.2) +
    geom_hline(yintercept = 0.5, col = ""red"") + 
    ylim(0,max(turbidity$Turbidity)) +
    ggtitle(""Simulated SCADA data"")</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>The image below visualises the simulated data using the mighty&nbsp;<a href=""https://ggplot2.tidyverse.org/"" target=""_blank"" rel=""noopener noreferrer"">ggplot2</a>. Only four spikes are visible because two of them overlap. The next step is to assess this data in accordance with the decision rule.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":262,""width"":430,""height"":241} -->
<div class=""wp-block-image""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/02/spikes.png"" alt=""Simulated SCADA data with spikes"" class=""wp-image-262"" width=""430"" height=""241""/></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>SCADA Spike Detection</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The following code searches for all spikes over 0.50 NTU using the <a href=""https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/rle"" target=""_blank"" rel=""noopener noreferrer"">run length&nbsp;function</a>. This function transforms a vector into a vector of values and lengths. For example,&nbsp;the run length of the vector <code>c(1, 1, 2, 2, 2, 3, 3, 3, 3, 5, 5, 6)</code> is:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>lengths: int [1:5] 2 3 4 2 1</li><li>values : num [1:5] 1 2 3 5 6</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>The value 1 has a length of 1, the value 2 has a length of 3 and so on. The spike detection&nbsp;code creates the run length for turbidity levels greater than 0.5, which results in a boolean vector. The&nbsp;<a href=""https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/cumsum"" target=""_blank"" rel=""noopener noreferrer"">cumsum</a>&nbsp;function calculates the starting point of each spike which allows us to calculate their duration.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The code results in a data frame with all spikes higher than 0.50 NTU and longer than 15 minutes. The spike that occurred at&nbsp;11:29 was higher than 0.50 NTU and lasted for 24 minutes. The other three spikes are either lower than 0.50 NTU. The first high spike lasted less than 15 minutes.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">spike.detect &lt;- function(DateTime, Value, Height, Duration) {
    runlength &lt;- rle(Value &gt; Height)
    spikes &lt;- data.frame(Spike = runlength$values,
    times &lt;- cumsum(runlength$lengths))
    spikes$Times &lt;- DateTime[spikes$times]
    spikes$Event &lt;- c(0,spikes$Times[-1] - spikes$Times[-nrow(spikes)])
    spikes &lt;- subset(spikes, Spike == TRUE &amp;amp; Event &gt; Duration)
    return(spikes)
}
spike.detect(turbidity$DateTime, turbidity$Turbidity, 0.5, 15)</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>This approach was used to prototype a <a rel=""noopener noreferrer"" href=""https://issuu.com/australianwater/docs/water_journal_november_2015/64"" target=""_blank"">software package</a> to assess water treatment plant data in accordance with the Health-Based Targets Manual. The finished product has been written in SQL and is available under an Open Source sharing license. You can download the latest version of this code on <a rel=""noopener noreferrer"" href=""https://github.com/pprevos/hydroinformatics/blob/master/SCADA/scada_spikes.R"" target=""_blank"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380""/></a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->"
287,2017-05-04,Euler Problem 19: Counting Sundays — When does the week start?,https://lucidmanager.org/euler-problem-19/,euler-problem-19,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 19 is so trivial it is almost not worth writing an article about. One interesting aspect of this problem is the naming of weekdays and deciding which day the week starts. This issue is more complex than it sounds because data science is in essence not about data but about people.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=JEyuQd-zMeg"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=JEyuQd-zMeg
</div><figcaption>Where do days of the week get their names?</figcaption></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Euler Problem 19 Definition</h2>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>1 Jan 1900 was a Monday.</li><li>Thirty days has September, April, June and November.</li><li>All the rest have thirty-one,</li><li>Saving February alone, Which has twenty-eight, rain or shine. And on leap years, twenty-nine.</li><li>A leap year occurs on any year evenly divisible by 4, but not on a century unless it is divisible by 400.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p><a href=""https://projecteuler.net/problem=19"" target=""_blank"" rel=""noopener noreferrer"">How many Sundays</a> fell on the first of the month during the twentieth century (1 Jan 1901 to 31 Dec 2000)?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The problem can be quickly solved with R base code and a tiny bit faster when using the <a href=""https://cran.r-project.org/web/packages/lubridate/"">lubridate package</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">dates &lt;- seq.Date(as.Date(""1901-01-01""), as.Date(""2000-12-31""), ""days"")
days &lt;- rep(1:7, length.out = length(dates))
answer &lt;- sum(days[substr(dates, 9, 10) == ""01""] == 1)
print(answer)

#Using Lubridate
library(lubridate, quietly = TRUE)
answer &lt;- sum(wday(dates[substr(dates, 9, 10) == ""01""]) == 1)
print(answer)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>To draw out this post a little bit further, I wrote some code to solve the problem without using any of the calendar functions in R.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">week.day &lt;- 0
answer &lt;- 0
for (y in 1901:2000) {
    for (m in 1:12) {
        max.day &lt;- 31
        if (m %in% c(4, 6, 9, 11))
            max.day &lt;- 30
        # Leap years
        if (m == 2) {
            if (y %% 4 == 0 &amp; y %% 100 != 0 | y %% 400 == 0) 
                max.day &lt;- 29
            else 
                max.day &lt;- 28
        }
        for (d in 1:max.day) {
            week.day &lt;- week.day + 1
            if (week.day == 8) week.day &lt;- 1
            if (week.day == 1 &amp; d == 1)
            answer &lt;- answer + 1
        }
    }
}
print(answer)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>You can download the latest version of this code from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem019.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Which day does the week start?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The only aspect remotely interesting about this problem is the conversion from weekdays to numbers. In R, Monday is considered day one, which makes sense in the Christian context of Western culture. Saturday and Sunday are the weekends, the two last days of the week so they are day 6 and 7. According to international standard <a href=""http://www.iso.org/iso/home/standards/iso8601.htm"" target=""_blank"" rel=""noopener noreferrer"">ISO 8601</a>, Monday is the first day of the week. Although this is the international standard, several countries, including the United States and Canada, consider Sunday to be the first day of the week.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The international standard is biased towards Christianity. The Christian or Western world marks Sunday as their day of rest and worship. Muslims refer to Friday as their day of rest and prayer. The Jewish calendar counts Saturday—the Sabbath—as the day of rest and worship. This idea is also shared by Seventh-Day Adventists.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":9096,""align"":""center"",""className"":""size-full wp-image-6546""} -->
<div class=""wp-block-image size-full wp-image-6546""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2017/05/DayoftheWeek-1024x379.png"" alt=""First day of the week around the world."" class=""wp-image-9096""/><figcaption>First day of the week around the world.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>This Euler problem shows that data science is not only about data: it is always how people <a href=""https://lucidmanager.org/qualitative-data-science/"">interpret the world</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">library(tidyverse)
firstday &lt;- read_csv(""FirstDay.csv"")
world &lt;- map_data(map = ""world"") full_join(world, firstday) %>%
    ggplot(aes(long, lat, group = group, fill = firstday)) +
    geom_polygon() +
        theme_void() +
        coord_fixed()</pre>
<!-- /wp:enlighter/codeblock -->"
312,2017-05-11,Euler Problem 20: Large Integer Factorials,https://lucidmanager.org/euler-problem-20/,euler-problem-20,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 20 is the third problem that requires special consideration for working with very large integers. In this problem, we look at&nbsp;<a href=""https://en.wikipedia.org/wiki/Factorial"" target=""_blank"" rel=""noopener noreferrer"">factorials</a>. These numbers are useful in combinatorics if, for example, you like to know in how many ways you can arrange a deck of cards.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The problem with computing factorials is that they are mostly very large numbers, beyond the generic capabilities of computers to process.&nbsp;For example, a humble pack of playing card can be shuffled in $latex 52! = 80658175170943878571660636856403766975289505440883277824000000000000$ different configurations.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 20 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>$latex n ! = n \times (n - 1) \times (n-2) \times \ldots \times 3 \times 2 \times 1.$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For example: $latex  10 ! = 10 \times 9 \times \ldots \times 3 \times 2 \times 1 = 3628800$.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The sum of the digits in the number $latex 10 !$ is $latex 3 + 6 + 2 + 8 + 8 + 0 + 0 = 27$.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a href=""https://projecteuler.net/problem=20"" target=""_blank"" rel=""noopener noreferrer"">Find the sum</a> of the digits in the number 100!</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 20 Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The&nbsp;factorial of the number 100 contains 158 digits, which is a lot more digits than a 64-bit operating system can accurately produce. Using the standard function: <code>factorial(100) = 9.332622e+157</code>. Without using a specialised algorithm, we cannot determine the&nbsp;sum of all digits. We need to deploy&nbsp;<a href=""https://en.wikipedia.org/wiki/Arbitrary-precision_arithmetic"" target=""_blank"" rel=""noopener noreferrer"">arbitrary-precision arithmetic</a>&nbsp;to solve this problem.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This problem can be solved using a specialised R package and using only base-R code. Many computer languages, including R, have special libraries to deal with such large numbers. The <a href=""https://cran.r-project.org/web/packages/gmp/index.html"" target=""_blank"" rel=""noopener noreferrer"">GMP&nbsp;Multiple Precision Arithmetic</a> package&nbsp;renders this problem almost trivial.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(gmp)
digits &lt;- factorialZ(100)
digits &lt;- as.character(digits)
answer &lt;- sum(as.numeric(unlist(strsplit(digits, """"))))</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Base-R Code</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The problem becomes more interesting when only using basic R code.&nbsp;I developed the big.add function to solve&nbsp;<a href=""https://lucidmanager.org/euler-problem-13/"">Euler Problem 13</a>&nbsp;through the addition of very large integers. We can extend this function to also calculate factorials. A factorial can be replaced by a series of additions, for example:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex 3! = 1 \times 2 \times 3 = (((1+1) + (1+1)) + (1+1))$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This can be mimicked in R using the&nbsp;<a href=""http://adv-r.had.co.nz/Functionals.html#functionals-fp"" target=""_blank"" rel=""noopener noreferrer"">Reduce function</a>.&nbsp;This function reduces a vector&nbsp;to a single value by recursively calling a function.&nbsp;<code>Reduce(""+"", rep(4, 5))</code> is the same as:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex 4 \times 5 = ((((4 + 4) + 4) + 4) + 4) = 20$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Using a loop, we can use the Reduce function to calculate a factorial, using only additions:</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">fact &lt;- 1
x &lt;- 100
for (i in 2:x) {
    fact &lt;- Reduce(""+"", rep(fact, i))
}
print(fact)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>The <code>big.factorial</code> function below implements this idea by combining the <code>big.add</code> and <code>Reduce</code> functions to calculate large integer factorials. The function returns a value of 1, for factorial of 0 or 1. This function does not calculate the <a rel=""noopener noreferrer"" href=""https://en.wikipedia.org/wiki/Gamma_function"" target=""_blank"">Gamma-function</a> for fractions. For all other values, it goes through a loop from 2 to the requested factorial. The temporary values are stored in the <em>bf</em> variable. The code loops through the factorials by&nbsp;using the result of the previous <em>Reduce</em>&nbsp;call into the current one.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">big.factorial &lt;- function(x) {
    x &lt;- floor(x)
    bf &lt;- 1 if (x > 1) {
        for (i in 2:x) {
            bf &lt;- Reduce(big.add, rep(bf,i))
        }
    }
return (bf)
}

digits &lt;- big.factorial(100)
answer &lt;- sum(as.numeric(unlist(strsplit(as.character(digits), """"))))
print(answer)
</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>This function is most certainly not as fast as the GMP package but it was fun to write and to learn about the mechanics behind arbitrary precision arithmetic at work. You can view the latest version of this code on <a rel=""noopener noreferrer"" href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem020.R"" target=""_blank"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=uNS1QvDzCVw"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=uNS1QvDzCVw
</div></figure>
<!-- /wp:core-embed/youtube -->"
345,2018-05-03,Qualitative Data Science: Using RQDA to analyse interviews,https://lucidmanager.org/qualitative-data-science/,qualitative-data-science,The Devil is in the Data,Digital Humanities|Marketing|Network Analysis|R Language,"<!-- wp:paragraph -->
<p>Qualitative data science sounds like a contradiction in terms. Data scientists generally solve problems using numerical solutions. Even the analysis of a text is reduced to a numerical problem using Markov chains, <a href=""https://lucidmanager.org/rvest-and-tidytext/"">topic analysis</a>, <a href=""https://lucidmanager.org/tap-water-sentiment-analysis/"">sentiment analysis</a> and other mathematical tools.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Scientists and professionals consider numerical methods to be the gold standard of analysis. There is, however, a price to pay when relying on numbers alone. Numerical analysis reduces the complexity of the social world. When analysing people, numbers present an illusion of precision and accuracy.&nbsp;Giving primacy to quantitative research in the social sciences comes at a high price. The dynamics of reality are reduced to statistics, losing the narrative of the people that the research aims to understand.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Being both an engineer and a social scientist, I acknowledge the importance of both numerical and qualitative methods. My dissertation used a mixed-method approach to review the relationship between employee behaviour and customer perception in water utilities. This article introduces some aspects of qualitative data science with an example from my dissertation.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In this article, I show how I analysed data from interviews using both quantitative and qualitative methods and demonstrate why qualitative data science is better to understand text than numerical methods. The most recent version of the code is available on my <a href=""https://github.com/pprevos/Marketing/tree/master/Macromarketing"" rel=""noopener"">GitHub repository</a>. Unfortunately, I cannot share the data set as this contains personally identifying data.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""width"":545,""height"":402,""linkDestination"":""custom""} -->
<div class=""wp-block-image""><figure class=""aligncenter is-resized""><a href=""https://kenandeen.wordpress.com/2015/01/18/quantitative-vs-qualitative-data/""><img src=""https://kenandeen.files.wordpress.com/2015/01/quantitave-vs-qualitative.png"" alt=""Qualitative Data Science"" width=""545"" height=""402""/></a></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Qualitative Data Science</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The often celebrated artificial intelligence of machine learning is impressive but does not come close to human intelligence and ability to understand the world. Many data scientists are working on automated text analysis to solve this issue (the <a href=""https://cran.r-project.org/web/packages/topicmodels/"" rel=""noopener"">topicmodels</a> package is an example of such an attempt).&nbsp;These efforts are impressive, but even the smartest text analysis algorithm is not able to derive <em>meaning</em> from text. To fully embrace all aspects of data science we need to be able to methodically undertake <a href=""https://en.wikipedia.org/wiki/Qualitative_research"" rel=""noopener"">qualitative&nbsp;data analysis</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The capabilities of R in numerical analysis are impressive, but it can also assist with Qualitative Data&nbsp;Analysis (QDA). Huang Ronggui from Hong Kong developed the <a href=""http://rqda.r-forge.r-project.org/"" rel=""noopener"">RQDA package</a> to analyse texts in R. RQDA assists with qualitative data analysis using a GUI front-end to analyse collections texts. The video below contains a complete course in using this software. Below the video, I share an example from my dissertation which compares qualitative and quantitative methods for analysing text.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/playlist?list=PL66CB2FF65368715C\u0026feature=plcp"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/playlist?list=PL66CB2FF65368715C&amp;feature=plcp
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>For my dissertation about <a href=""https://lucidmanager.org/invisible-water-utility/"">water utility marketing</a>, I interviewed seven people from various organisations. The purpose of these interviews was to learn about the value proposition for water utilities. The data consists of the transcripts of six interviews which I manually coded using RQDA. For reasons of agreed anonymity, I cannot provide the raw data file of the interviews through GitHub.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Numerical Text Analysis</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Word clouds are a popular method for exploratory analysis of texts.&nbsp;The wordcloud is created with the <a href=""https://cran.r-project.org/web/packages/tm/index.html"" rel=""noopener"">text mining</a> and wordcloud packages. The transcribed interviews are converted to a text corpus (the native format for the tm package) and whitespace, punctuation etc is removed. This code snippet opens the RQDA file and extracts the texts from the database. RQDA stores all text in an SQLite database and the package provides a query command to extract data.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">library(tidyverse)
library(RQDA)
library(tm)
library(wordcloud)
library(igraph)

openProject(""stakeholders.rqda"")
interviews &lt;- data.frame(name = RQDAQuery(""SELECT name FROM source""),
                         text = RQDAQuery(""SELECT file FROM source""))
interviews &lt;- Corpus(VectorSource(interviews$file))

interviews &lt;-  tm_map(interviews, stripWhitespace)
interviews &lt;-  tm_map(interviews, content_transformer(tolower))
interviews &lt;-  tm_map(interviews, removeWords, stopwords(""english""))
interviews &lt;-  tm_map(interviews, removePunctuation)
interviews &lt;-  tm_map(interviews, removeNumbers)
interviews &lt;-  tm_map(interviews, removeWords, c(""interviewer"", ""interviewee""))

# Word cloud
set.seed(1969)
wordcloud(interviews, min.freq = 10, max.words = 50, rot.per=0.35, 
          colors = brewer.pal(8, ""Blues"")[-1:-5])</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:image {""align"":""center"",""id"":1255,""width"":466,""height"":390,""className"":""size-full wp-image-1255""} -->
<div class=""wp-block-image size-full wp-image-1255""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/05/wordcloud.png"" alt="""" class=""wp-image-1255"" width=""466"" height=""390""/><figcaption>Word cloud of interview transcripts</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>This word cloud makes it clear that the interviews are about water businesses and customers, which is a pretty obvious statement. The interviews are also about the opinion of the interviewees (think). While the word cloud is aesthetically pleasing and provides a quick snapshot of the content of the texts, they cannot inform us about their meaning.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Topic modelling is a more advanced method to extract information from the text by assessing the proximity of words to each other. The <a href=""https://eight2late.wordpress.com/2015/09/29/a-gentle-introduction-to-topic-modeling-using-r/"" rel=""noopener"">topic modelling</a> package provides functions to perform this analysis. I am not an expert in this field and simply followed basic steps using default settings with four topics.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">dtm &lt;- DocumentTermMatrix(interviews)
dtm &lt;- removeSparseTerms(dtm, 0.99)
ldaOut &lt;- LDA(dtm, k = 4)
terms(ldaOut,6)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>This code converts the corpus created earlier into a <a href=""https://en.wikipedia.org/wiki/Document-term_matrix"" rel=""noopener"">Document-Term Matrix</a>, which is a matrix of words and documents (the interviews) and the frequency at which each of these words occurs. The LDA function applies a <a href=""https://en.wikipedia.org/wiki/Latent_Dirichlet_allocation"" rel=""noopener"">Latent Dietrich Allocation</a> to the matrix to define the topics. The variable k defines the number of anticipated topics. An LDA is similar to clustering in multivariate data. The final output is a table with six words for each topic.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[table id=2 /]</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This table does not tell me much at all about what was discussed in the interviews. Perhaps it is the frequent use of the word ""water"" or ""think""—I did ask people their opinion about water-related issues. To make this analysis more meaningful, I could perhaps manually remove the words water, yeah, and so on. This introduces a bias in the analysis and reduces the reliability of the topic analysis because I would be interfering with the text.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Numerical text analysis sees a text as a bag of words instead of a set of meaningful words. It seems that any automated text mining needs a lot of manual cleaning to derive anything meaningful. This excursion shows that automated text analysis is not a sure-fire way to analyse the meaning of a collection of words. After a lot of trial and error to try to make this work, I decided to go back to my roots of qualitative analysis using RQDA as my tool.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Qualitative Data Science Using RQDA</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To use RQDA for qualitative data science, you first need to manually analyse each text and assign codes (topics) to parts of the text. The image below shows a question and answer and how it was coded. All marked text is blue, and the codes are shown between markers. Coding a text is an iterative process that aims to extract meaning from a text. The advantage of this method compared to numerical analysis is that the researcher injects meaning into the analysis. The disadvantage is that the analysis will always be biased, which in the social sciences is unavoidable. My list of topics was based on words that appear in a marketing dictionary so that I analysed the interviews from that perspective.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":6822,""width"":732,""height"":291,""className"":""wp-image-6822 size-full""} -->
<div class=""wp-block-image wp-image-6822 size-full""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/05/coding.png"" alt=""Example of text coded with RQDA."" class=""wp-image-6822"" width=""732"" height=""291""/><figcaption>Example of text coded with RQDA.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>My first step was to look at the occurrence of codes (themes) in each of the interviews.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">## Load and transform data
codings &lt;- getCodingTable()[,4:5]
categories &lt;- RQDAQuery(""SELECT filecat.name AS category, source.name AS filename 
                         FROM treefile, filecat, source 
                         WHERE treefile.catid=filecat.catid AND treefile.fid=source.id AND treefile.status=1"")
codings &lt;- merge(codings, categories, all.y = TRUE)
head(codings)

## Open coding
reorder_size &lt;- function(x) {
    factor(x, levels = names(sort(table(x))))
}
ggplot(codings, aes(reorder_size(codename), fill=category)) + geom_bar(stat=""count"") + 
    facet_grid(~filename) + coord_flip() + 
    theme(legend.position=""bottom"", legend.title=element_blank()) + 
    ylab(""Code frequency in interviews"") + xlab(""Code"")</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>The code uses an internal RQDA function <em>getCodingTable</em> to obtain the primary data. The <em>RQDAQuery</em> function provides more flexibility and enables more complex queries of the data. You can view the structure of the RQDA database using the <em>RQDATables</em> function.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":388,""width"":786,""height"":878,""className"":""size-full wp-image-388""} -->
<div class=""wp-block-image size-full wp-image-388""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/02/interviewcode.png"" alt=""Occurrence of themes from six interviews."" class=""wp-image-388"" width=""786"" height=""878""/><figcaption>The occurrence of themes from six interviews.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>This bar chart helps to explore the topics that interviewees discussed, but it does not help to understand how these topic relate to each other. This method provides better insights into the text than the 'bag of words' approach. Qualitative data analysis provides meaning to a text that no algorithm can discern. Although this meaning is ultimately subjective, proper methodology clarified any biases.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>RQDA provides a facility to assign each code to a code category.  A network diagram is a good tool to visualise this structure. The igraph package provides extensive functionality to analyse graphs.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Qualitative data analysis can create value from a text by interpreting it from a given perspective. This article is not even an introduction to the science and art of qualitative data science. I hope it invites you to explore RQDA and similar tools.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you are interested in finding out more about this method, then feel free to read chapter three of my dissertation on <a rel=""noopener"" href=""http://hdl.handle.net/1959.9/561679"">customer service in water utilities</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":1256,""width"":507,""height"":508,""className"":""size-full wp-image-1256""} -->
<div class=""wp-block-image size-full wp-image-1256""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/05/network.png"" alt=""Network of interview topics."" class=""wp-image-1256"" width=""507"" height=""508""/><figcaption>The network of interview topics.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading {""level"":3} -->
<h3>Network visualisation code</h3>
<!-- /wp:heading -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">edges &lt;- RQDAQuery(""SELECT codecat.name, freecode.name FROM codecat, freecode, treecode WHERE codecat.catid=treecode.catid AND freecode.id=treecode.cid"")

g &lt;- graph_from_edgelist(as.matrix(edges), directed = FALSE) %>%
  simplify()
V(g)$name &lt;- gsub("" "", ""\n"", V(g)$name)

c &lt;- spinglass.community(g)
par(mar=rep(0,4))
set.seed(666)
plot(c, g, 
     vertex.size = 10,
     vertex.color = NA,
     vertex.frame.color = NA,
     layout = layout.drl)</pre>
<!-- /wp:enlighter/codeblock -->"
353,2017-02-10,Percentile Calculations in Water Quality Regulations,https://lucidmanager.org/percentile-calculations/,percentile-calculations,The Devil is in the Data,Hydroinformatics|R Language,"<!-- wp:paragraph -->
<p>Percentile calculations can be more tricky than at first meets the eye.&nbsp;A <a href=""https://en.wikipedia.org/wiki/Percentile"">percentile</a>&nbsp;indicates the value below which a percentage of observations fall. Some percentiles have special names, such as the <a href=""https://en.wikipedia.org/wiki/Quartile"">quartile</a> or the <a href=""https://en.wikipedia.org/wiki/Decile"">decile</a>, both of which are <a href=""https://en.wikipedia.org/wiki/Quantile"">quantiles</a>. This deceivingly simple definition hides the various ways to determine this number. Unfortunately, there is <a href=""https://www.amherst.edu/media/view/129116/original/Sample+Quantiles.pdf"">no standard definition for percentiles</a>, so which method do you use?</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The <a href=""http://stat.ethz.ch/R-manual/R-devel/library/stats/html/quantile.html"">quantile</a> function in R generates sample percentiles corresponding to the given probabilities. By default, the quantile function provides the quartiles and the minimum and maximum values. The code snippet below generates semi-random data, plots the histogram and visualises the third quartile.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">set.seed(1969)
test.data &lt;- rnorm(n = 10000, mean = 100, sd = 15)
library(ggplot2)
ggplot(as.data.frame(test.data), aes(test.data)) +
    geom_histogram(binwidth = 1, aes(y = ..density..), fill = ""dodgerblue"") +
    geom_line(stat = ""function"", fun = dnorm, args = list(mean = 100, sd = 15), colour = ""red"", size = 1) +
    geom_area(stat = ""function"", fun = dnorm, args = list(mean = 100, sd = 15),
    colour = ""red"", fill = ""red"", alpha = 0.5, xlim = quantile(test.data, c(0.5, 0.75))) +
    theme(text = element_text(size = 16))</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:image {""align"":""center"",""id"":363,""width"":393,""height"":241,""className"":""wp-image-363 size-full""} -->
<div class=""wp-block-image wp-image-363 size-full""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/02/percentiles.png"" alt=""Percentile Calculations"" class=""wp-image-363"" width=""393"" height=""241"" /><figcaption>Percentile Calculations.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>The quantile default function and the 95<sup>th</sup> percentile give the following results:</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">quantile(test.data)
0% 25% 50% 75% 100%
39.91964 89.68041 100.16437 110.01910 153.50195

quantile(test.data, probs=0.95)
95%
124.7775</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Methods of percentile calculation</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The quantile function in R provides for nine different ways to calculate percentiles. Each of these options uses a different method to interpolate between observed values.&nbsp;I will not discuss the mathematical nuances between these methods. <a href=""https://www.amherst.edu/media/view/129116/original/Sample+Quantiles.pdf"">Hyndman and Fan</a> (1996) provide a detailed overview of these methods. The differences between the nine available&nbsp;methods only matter in skewed distributions, such as water quality data. For the normal distribution simulated above the outcome for all methods is exactly the same, as illustrated by the following code.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">sapply(1:9, function(m) quantile(test.data, 0.95, type = m))

95% 95% 95% 95% 95% 95% 95% 95% 95%
124.7775 124.7775 124.7775 124.7775 124.7775 124.7775 124.7775 124.7775 124.7775</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Percentile calculations in water quality</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The <a href=""https://nhmrc.gov.au/about-us/publications/australian-drinking-water-guidelines"">Australian Drinking Water Quality Guidelines</a> (November&nbsp;2016) specify that: ""based on aesthetic considerations, the turbidity should not exceed 5 NTU at the consumer’s tap"". The Victorian&nbsp;Safe Drinking Water Regulations (2015) relax this requirement and require that:</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class=""wp-block-quote""><p>""The 95<sup>th</sup> percentile of results for samples in any 12 month period must be less than or equal to 5.0 NTU.""</p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>The Victorian regulators <a href=""https://www2.health.vic.gov.au/Api/downloadmedia/%7BA1F6D255-D5C7-4B7E-AAE5-8B7451EDE81A%7D"">also&nbsp;specify&nbsp;</a>that the percentile should be calculated with the&nbsp;<em>Weibull Method</em>.&nbsp;This requirement raises two questions: What is the Weibull method? How do you implement this requirement in R?</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The term Weibull Method is a bit confusing as this is not a name used by statisticians. In Hyndman &amp; Fan (1996), this method has the less poetic name $latex \hat{Q}_8(p)$. <a href=""https://en.wikipedia.org/wiki/Waloddi_Weibull"">Waloddi Weibull</a>, a Swedish engineer famous for his distribution, was one of the first to describe this method. Only the regulator in Victoria uses that name, which is based on <a href=""http://amzn.to/2k8shr8"">McBride (2005)</a>. This theoretical interlude aside, how can we practically apply this to water quality data? In case you are interested in how the Weibull method works, the <code>weibull.quantile</code> function&nbsp;shown below calculates a quantile&nbsp;<em>p</em> for a vector&nbsp;<em>x</em> using this method. This function gives the same result as <code>quantile(x, p, type = 6)</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">weibull.quantile &lt;- function(x, p) {
    # Order Samples from large to small
    x &lt;- x[order(x, decreasing = FALSE)]
    # Determine ranking of percentile according to Weibull (1939)
    r &lt;- p * (length(x) + 1)
    # Linear interpolation
    rfrac &lt;- (r - floor(r))
    return((1 - rfrac) * x[floor(r)] + rfrac * x[floor(r) + 1])
}
</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Turbidity Data Example</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Turbidity data is not normally distributed as it is always larger than zero.&nbsp;In this example, the turbidity results for the year 2016 for the water system in <a href=""https://en.wikipedia.org/wiki/Tarnagulla"">Tarnagulla </a>are used to illustrate the percentile calculations. The range of weekly turbidity measurements is between 0.,05 NTU and 0.8 NTU, well below the aesthetic limits.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":379,""width"":538,""height"":228,""className"":""size-full wp-image-379""} -->
<div class=""wp-block-image size-full wp-image-379""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/02/turbidity.png"" alt=""Turbidity at customer tap in the Tarnagulla system in 2016 (n=53)."" class=""wp-image-379"" width=""538"" height=""228"" /><figcaption>Turbidity at customer tap in the Tarnagulla system in 2016 (n=53).</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>When we calculate the percentiles for all nine methods available in the base-R function we see that the so-called Weibull method generally provides the most conservative result.</p>
<!-- /wp:paragraph -->

<!-- wp:shortcode -->
[table id=1 /]
<!-- /wp:shortcode -->

<!-- wp:paragraph -->
<p>The following code snippet created the graph and the table:</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">ggplot(turbidity, aes(Result)) +
    geom_histogram(binwidth = .05, fill = ""dodgerblue"", aes(y = ..density..)) +
    facet_wrap(~Zone) +
    theme(text = element_text(size = 16))

tapply(turbidity$Result, turbidity$Zone,
       function(x) sapply(1:9, function(m) quantile(x, 0.95, type = m)))</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>You can download the latest version of the code from <a rel=""noopener noreferrer"" href=""https://github.com/pprevos/hydroinformatics/blob/master/WaterQuality/percentiles.R"" target=""_blank"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380"" /></a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->"
395,2017-05-18,Euler Problem 21: Amicable Numbers,https://lucidmanager.org/euler-problem-21-amicable-numbers/,euler-problem-21-amicable-numbers,The Devil is in the Data,Numberphile|Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler problem 21 takes us to the realm of <a href=""https://en.wikipedia.org/wiki/Amicable_numbers"">amicable numbers</a>. The <a href=""https://oeis.org/A259180"">A259180</a> sequence in the OEIS lists all amicable, or friendly numbers.  These are the most romantic numbers in all of maths.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>A related concept is a&nbsp;<a href=""https://en.wikipedia.org/wiki/Perfect_number"">perfect number</a>, which is a number that equals the sum of its proper divisors. Mathematicians have also defined <a href=""https://en.wikipedia.org/wiki/Sociable_number"">sociable numbers</a>&nbsp;and&nbsp;<a href=""https://en.wikipedia.org/wiki/Betrothed_numbers"">betrothed&nbsp;numbers </a>which are similar to amicable numbers. But perhaps these are for another Euler problem. <a href=""https://lucidmanager.org/euler-problem-23-non-abundant-sums/"">Euler Problem 23</a> is about finding abundant numbers,which are numbers for which the sum of its proper divisors is greater than the number itself.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Amicable numbers were known to the <a title=""Pythagoreanism"" href=""https://lucidmanager.org/euler-problem-9/"">Pythagoreans</a>, who credited them with many mystical properties. Before we had access to computers, finding amicable numbers was a task that required a lot of patience. No algorithm can systematically generate all amicable numbers, and until 1946 only 390 pairs were known. Medieval Muslim mathematicians developed several formulas to create amicable numbers, but the only way to be complete is using brute force.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=fUSZBVYZdKY"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=fUSZBVYZdKY
</div><figcaption>220 and 284 (Amiable Numbers) - Numberphile.</figcaption></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Euler Problem 21 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Let $latex d(n)$ be defined as the sum of proper divisors of n (numbers less than $latex n$ which divide evenly into n). If $latex d(a) = b$ and $latex d(b) = a$, where $latex a \neq b$, then $latex a$ and $latex b$ are an amicable pair and each of $latex a$ and $latex b$ are called amicable numbers.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For example, the proper divisors of 220 are 1, 2, 4, 5, 10, 11, 20, 22, 44, 55 and 110; therefore $latex d(220) = 284$. The proper divisors of 284 are 1, 2, 4, 71 and 142; so, $latex d(284) = 220$.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a href=""https://projecteuler.net/problem=21"">Evaluate the sum</a> of all the amicable numbers under 10000.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":1} -->
<h1>Solution</h1>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The first part of the code provides for a&nbsp;function to list all proper divisors for a given integer <em>x</em>.&nbsp;The loop&nbsp;determines the divisors for the numbers 220 to 10,000, calculates their sum and then checks if&nbsp;these numbers are amicable. When the code finds an amicable number, the counter jumps to the sum of the divisors to check for the next one. You can view the code below or download the latest version from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem021.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">proper.divisors &lt;- function(x) {
    divisors &lt;- vector()
    d &lt;- 1
    for (i in 1:floor(sqrt(x))) {
        if (x %% i == 0) {
            divisors[d] &lt;- i
            if (i != x/i) {
                d &lt;- d
                divisors[d] &lt;- x / i
            }
        d &lt;- d + 1
        }
    }
return(divisors)
}

answer &lt;- 0
n &lt;- 220
while (n &lt;= 10000) {
    div.sum &lt;- sum(proper.divisors(n)) - n
    if (n == sum(proper.divisors(div.sum)) - div.sum &amp; n != div.sum) {
        answer &lt;- answer + n + div.sum
        print(paste0(""("", n, "","", div.sum, "")""))
        n &lt;- div.sum
    }
    n &lt;- n + 1
}
print(answer)
</pre>
<!-- /wp:enlighter/codeblock -->"
402,2017-05-24,Euler Problem 22 : Names Scores,https://lucidmanager.org/euler-problem-22-names-scores/,euler-problem-22-names-scores,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler problem 22 is another trivial one that takes us to the realm of&nbsp;<a href=""https://en.wikipedia.org/wiki/ASCII"" target=""_blank"" rel=""noopener noreferrer"">ASCII</a> codes. ASCII is a method to convert symbols into numbers, originally invented for telegraphs. Back in the 8-bit days, <a href=""https://en.wikipedia.org/wiki/ASCII_art"" target=""_blank"" rel=""noopener noreferrer"">ASCII art</a> was a method to create images without using lots of memory. Each image consists of a collection of text characters that give the illusion of an image. Euler problem 22 is, unfortunately, a bit less poetic. This problem is similar to <a href=""https://lucidmanager.org/euler-problem-17-number-letter-counts/"">Euler problem 17</a> that asks to count the length of words expressing numbers.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 22 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Using <a href=""https://projecteuler.net/project/resources/p022_names.txt"" target=""_blank"" rel=""noopener noreferrer"">names.txt</a>, a 46K text file containing over five-thousand first names, begin by sorting it into alphabetical order. Then working out the alphabetical value for each name, multiply this value by its alphabetical position in the list to obtain a name score.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For example, when the list is sorted into alphabetical order, COLIN, which is worth 3 + 15 + 12 + 9 + 14 = 53, is the 938<sup>th</sup> name in the list. So, COLIN would obtain a score of 938 × 53 = 49,714.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a href=""https://projecteuler.net/problem=22"" target=""_blank"" rel=""noopener noreferrer"">What is the total</a> of all the name scores in the file?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This code reads and cleans the file and sorts the names alphabetically.&nbsp;The <a href=""https://stat.ethz.ch/R-manual/R-devel/library/base/html/rawConversion.html"" target=""_blank"" rel=""noopener noreferrer"">charToRaw</a> function determines the numerical value of each character in each name. This output of this function is the hex <a href=""http://ascii.cl/"" target=""_blank"" rel=""noopener noreferrer"">ASCII code</a> for each character. The letter A is number 65, so we subtract 64 from each value to get the sum total.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">names &lt;- readLines(""https://projecteuler.net/project/resources/p022_names.txt"",
                   warn =FALSE)
names &lt;- unlist(strsplit(names, "",""))
names &lt;- gsub(""[[:punct:]]"", """", names)
names &lt;- sort(names)

# Total Name scores
answer &lt;- 0
for (i in names) {
    value &lt;- sum(sapply(unlist(strsplit(i, """")),
                 function(x) as.numeric(charToRaw(x)) - 64))
    value &lt;- value * which(names==i)
    answer &lt;- answer + value
}
print(answer)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>We can have a bit more fun with this problem by comparing this list with the <a href=""https://www.babycenter.com/top-baby-names-2016.htm"" target=""_blank"" rel=""noopener noreferrer"">most popular baby names in 2016</a>. The first section of the code extracts the list of popular names from the website. The rest of the code counts the number of matches between the lists and shows the popular baby names not present in the Project Euler list.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">library(rvest)
url &lt;- ""https://www.babycenter.com/top-baby-names-2016.htm""
babynames &lt;- url %>%
    read_html() %>%
    html_nodes(xpath = '//*[@id=""babyNameList""]/table') %>%
    html_table()
babynames &lt;- babynames[[1]]

# Convert Project Euler list and test for matches
proper &lt;- function(x) paste0(toupper(substr(x, 1, 1)), tolower(substring(x, 2)))
names &lt;- proper(names)

sum(babynames$GIRLS %in% names)
sum(babynames$BOYS %in% names)

babynames$GIRLS[!(babynames$GIRLS %in% names)]
babynames$BOYS[!(babynames$BOYS %in% names)]</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>You can download the latest version of this code on <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem022.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->"
445,2017-06-15,Lexicographic Permutations: Proposed Solution to Euler Problem 24,https://lucidmanager.org/euler-problem-24/,euler-problem-24,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 24 asks to develop <a href=""https://en.wikipedia.org/wiki/Permutation#Generation_in_lexicographic_order"" target=""_blank"" rel=""noopener noreferrer"">lexicographic permutations</a>&nbsp;which are ordered arrangements of objects in lexicographic order. Tushar Roy of <em>Coding Made Simple</em> has shared a great introduction on how to generate lexicographic permutations.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=nYFd7VHKyWQ"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=nYFd7VHKyWQ
</div><figcaption>String Permutation Algorithm.</figcaption></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Euler Problem 24 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>A permutation is an ordered arrangement of objects. For example, 3124 is one possible permutation of the digits 1, 2, 3 and 4. If all of the permutations are listed numerically or alphabetically, we call it lexicographic order. The lexicographic permutations of 0, 1 and 2 are:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>012 021 102 120 201 210</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>What is the <a href=""https://projecteuler.net/problem=24"" target=""_blank"" rel=""noopener noreferrer"">millionth lexicographic permutation</a> of the digits 0, 1, 2, 3, 4, 5, 6, 7, 8 and 9?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Brute Force Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The digits 0 to 9 have $latex 10 ! = 3628800 $ permutations (including combinations that start with 0). Most of these permutations are, however, not in lexicographic order. A brute-force way to solve the problem is to determine the next lexicographic permutation of a number string and repeat this one million times.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">nextPerm &lt;- function(a) {
    # Find longest non-increasing suffix
    i &lt;- length(a)
    while (i > 1 &amp;&amp; a[i - 1] >= a[i])
        i &lt;- i - 1
    # i is the head index of the suffix
    # Are we at the last permutation?
    if (i &lt;= 1) return (NA)
    # a[i - 1] is the pivot
    # Frind rightmost element that exceeds the pivot
    j &lt;- length(a)
    while (a[j] &lt;= a[i - 1]) 
        j &lt;- j - 1
    # Swap pivot with j
    temp &lt;- a[i - 1]
    a[i - 1] &lt;- a[j]
    a[j] &lt;- temp
    # Reverse the suffix
    a[i:length(a)] &lt;- rev(a[i:length(a)])
    return(a)
    }

numbers &lt;- 0:9
for (i in 1:(1E6 - 1)) numbers &lt;- nextPerm(numbers)
answer &lt;- paste(numbers, collapse = """")
print(answer)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>This code takes the following <a href=""https://www.nayuki.io/page/next-lexicographical-permutation-algorithm"" target=""_blank"" rel=""noopener noreferrer"">steps</a>:</p>
<!-- /wp:paragraph -->

<!-- wp:list {""ordered"":true} -->
<ol><li>Find largest index $latex i$ such that $latex a_{i-1} &lt; a_i$.
<ol>
<li>If no such index exists, then this is already the last permutation.</li>
</ol>
</li><li>Find largest index $latex j$ such that $latex j \geq i$ and $latex a_j &gt; a_{i-1}$.</li><li>Swap $latex a_j &amp;s=2$ and $latex a_{i-1}$.</li><li>Reverse the suffix starting at $latex a_i$.</li></ol>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>Combinatorics</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>A more efficient solution is to use combinatorics, thanks to <a href=""http://www.mathblog.dk/project-euler-24-millionth-lexicographic-permutation/"" target=""_blank"" rel=""noopener noreferrer"">MathBlog</a>. The last nine digits can be ordered in $latex 9! = 362880$ ways. So the first $latex 9!$ permutations start with a 0. By extending this thought, it follows that the millionth permutation must start with&nbsp;a 2.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex \lfloor (1000000 - 1) / 9 ! \rfloor  = 2$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>From this&nbsp;rule, it follows that the 725761<sup>st</sup> permutation is 2013456789. We now need 274239 more lexicographic permutations:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex (1000000 - 1) - (2 \times 9!) = 274239$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>We can repeat this logic to find the next digit. The last 8 digits can be ordered in 40320 ways.&nbsp;The second digit is the 6th digit in the remaining numbers, which is 7 (2013456789).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex \lfloor 274239 / 8 ! \rfloor  = 6$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex 274239 - (6 \times 7 !) = 32319$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This process is repeated until all digits have been used. View the code bleow or download the latest version from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem024.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">numbers &lt;- 0:9
n &lt;- length(numbers)
answer &lt;- vector(length = 10)
remain &lt;- 1E6 - 1
for (i in 1:n) {
    j &lt;- floor(remain / factorial(n - i))
    answer[i] &lt;- numbers[j + 1]
    remain &lt;- remain %% factorial(n - i)
    numbers &lt;- numbers[-(j + 1)]
}
answer &lt;- paste(answer, collapse = """")
print(answer)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>R blogger <a href=""https://www.r-bloggers.com/project-euler-problem-24/"" target=""_blank"" rel=""noopener noreferrer"">Tony's Bubble Universe</a> created&nbsp;a generalised function to solve this problem a few years ago.</p>
<!-- /wp:paragraph -->"
449,2017-06-22,"Fibonacci number with 1000 digits, Euler Problem 25",https://lucidmanager.org/euler-problem-25/,euler-problem-25,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 25 takes us back to the <a href=""https://lucidmanager.org/euler-problem-2/"">Fibonacci sequence</a> and the problems related to working with very large integers. The&nbsp;Fibonacci sequence follows a simple mathematical rule but it can create things of great beauty. This pattern occurs quite often in nature, like to nautilus shell shown in the image. This article shows how to find the first Fibonacci number with one thousand digits.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>You view the code to solve this problem below, or download the latest version from <a rel=""noreferrer noopener"" href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem025.R"" target=""_blank"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Large Integers in R</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>By default, numbers with more than 7 digits are shown in scientific notation in R, which reduces the accuracy&nbsp;of the calculation. You can change the precision of large integers with the <em>options</em> function but&nbsp;R struggles with integers with more than 22 digits. This example illustrates this issue:</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">> factorial(24)
[1] 6.204484e+23

> options(digits = 22)
> factorial(24)
[1] 620448401733239409999872</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>Finding a number of 1000 digits is a problem in R with using a special function or package. This article explains how to solve this problem using the <a href=""https://cran.r-project.org/web/packages/gmp/index.html"" target=""_blank"" rel=""noreferrer noopener"" aria-label=""GMP package (opens in a new tab)"">GMP package</a> and in base R code.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 25 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The Fibonacci sequence is defined by a recurrence relation:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex F_n = F_{n-1} + F_{n-2} $, where $latex F_1 = 1$ and $latex F_2 = 1$. The 12<sup>th</sup> term, $latex F_{12}$, is the first term to contain three digits.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>What is the index of the <a href=""https://projecteuler.net/problem=25"" target=""_blank"" rel=""noopener noreferrer"">first term in the Fibonacci sequence to contain 1000 digits</a>?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Proposed Solutions</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The first solution uses the GMP library to manage very large integers. This package implements the the <a href=""https://gmplib.org/"" target=""_blank"" rel=""noreferrer noopener"" aria-label=""GNU Multiple Precision Arithmetic Library (opens in a new tab)"">GNU Multiple Precision Arithmetic Library</a> for working with huge numbers. This package also contains a function to generate Fibonacci numbers. This solution cycles through the Fibonacci sequence until it finds a number with 1000 digits.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">library(gmp) # GNU Multiple Precision Arithmetic Library
n &lt;- 1
fib &lt;- 1
while (nchar(as.character(fib)) &lt;= 1000) {
    fib &lt;- fibnum(n) # Determine next Fibonacci number
    n &lt;- n + 1
}
answer &lt;- n
print(answer)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>This is a very fast solution but my aim is to solve the first 100 Project Euler problems using only base-R code. The <code>big.add</code> function I developed to solve <a href=""https://lucidmanager.org/euler-problem-13/"">Euler Problem 13</a> uses only basic R to add large numbers. This code to solve Euler Problem 25 is much slower than the GMP library but it was fun to develop.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">fib &lt;- 1 # First Fibonaci number
cur &lt;- 1 # Current number in sequence
pre &lt;- 1 # Previous number in sequence
index &lt;- 2
while (nchar(fib) &lt; 1000) {
    fib &lt;- big.add(cur, pre) # Determine next Fibonacci number
    pre &lt;- cur
    cur &lt;- fib
    index &lt;- index + 1
}
answer &lt;- index
print(answer)</pre>
<!-- /wp:enlighter/codeblock -->"
455,2017-03-06,Create Air Travel Route Maps in ggplot: A Visual Travel Diary,https://lucidmanager.org/create-air-travel-route-maps/,create-air-travel-route-maps,The Devil is in the Data,geocode|Map Porn|R Language,"<!-- wp:paragraph -->
<p>I have been lucky to fly to a few countries around the world. Like any other bored traveller, I thumb through the airline magazines and look at the <a href=""http://www.airlineroutemaps.com/"" target=""_blank"" rel=""noopener noreferrer"">air travel route maps</a>. These maps are beautifully stylised depictions of the world with gently curved lines between the many destinations serviced by the airline. I always wanted such a map for my own travel adventures. In this article I explain how to create a map of your own travels in the style of the Emirates Airlines route map.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Create Air Travel Route Maps using ggplot2</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The first step was to create a list of all the places I have flown between at least once. Paging through my travel photos and diaries, I managed to create a pretty complete list. The structure of this document is simply a list of all <a href=""https://github.com/pprevos/geography/blob/master/flights.csv"" target=""_blank"" rel=""noopener noreferrer"">routes</a> (From, To) and every flight only gets counted once. The next step finds the spatial coordinates for each airport by searching Google Maps using the geocode function from the <a href=""https://cran.r-project.org/web/packages/ggmap/index.html"" target=""_blank"" rel=""noopener noreferrer"">ggmap</a> package. You will need a Google API to enable the <a href=""https://lucidmanager.org/geocoding-with-ggmap/"">geocoding function</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In some instances, I had to add the country name to avoid confusion between places. To prevent errors from the Google maps API, I have added a while loop that runs until all destinations have been geocoded.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>We now we have a data frame of airports with their coordinates and can create air travel route maps. The data frames are merged so that we can create air travel route maps using the <a href=""http://ggplot2.tidyverse.org/reference/geom_segment.html"" target=""_blank"" rel=""noopener noreferrer"">curve geom</a>. The <a href=""http://ggplot2.tidyverse.org/reference/borders.html"" target=""_blank"" rel=""noopener noreferrer"">borders</a> function of ggplot2 creates the map data. The <a href=""https://github.com/slowkow/ggrepel"" target=""_blank"" rel=""noopener noreferrer"">ggrepel</a> package helps to prevent overplotting of text. This code also removes any return flights and splits flights that crossed the date line.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":1450} -->
<div class=""wp-block-image""><figure class=""aligncenter""><a href=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/03/flights_map.png""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/03/flights_map.png"" alt=""My personal Air Travel Route Maps in ggplot: A Visual Travel Diary"" class=""wp-image-1450"" /></a><figcaption>My personal Air Travel Route Maps in ggplot: A Visual Travel Diary</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>You can view the recent version of the code and associated files in <a href=""https://github.com/pprevos/geography/"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>. In another post I have used the same principle to create a route map of flights between islands in the <a href=""https://lucidmanager.org/pacific-island-hopping/"">Pacific Ocean</a> using the schedules from several international airlines.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""decode:1""} -->
<pre class=""wp-block-preformatted decode:1"">library(tidyverse)
library(ggmap)
library(ggrepel)

flights &lt;- read_csv(flights.csv)
airports_file &lt;- ""airports.csv""
if (file.exists(airports_file)) {
  airports &lt;- read_csv(airports_file)
  } else {
  airports &lt;- data_frame(airport = NA, lon = NA, lat = NA)
}

destinations &lt;- unique(c(flights$From, flights$To))
new_destinations &lt;- destinations[!destinations %in% airports$airport]
while (length(new_destinations) &gt; 0) {
    new_airports &lt;- geocode(new_destinations) %&gt;%
      mutate(airport = new_destinations) %&gt;%
      select(airport, lon, lat)
    airports &lt;- rbind(airports, new_airports) %&gt;%
      filter(!is.na(lon) | !is.na(lat))
    new_destinations &lt;- destinations[!destinations %in% airports$airport]
}
write_csv(airports, &amp;quot;airports.csv&amp;quot;)

d &lt;- vector()
for (i in 1:nrow(flights)) {
    d &lt;- which(paste(flights$From, flights$To) %in% paste(flights$To[i], flights$From[i]))
    flights$From[d] &lt;- ""R""
}
flights &lt;- flights %&gt;%
  filter(From != ""R"") %&gt;%
  select(From, To)

flights &lt;- merge(flights, airports, by.x = ""From"", by.y = ""airport"")
flights &lt;- merge(flights, airports, by.x = ""To"", by.y = ""airport"")
flights &lt;- flights %&gt;% 
  select(From, To, lon.x, lat.x, lon.y, lat.y) %&gt;% 
  as_data_frame()

circ &lt;- which(abs(flights$lon.y - flights$lon.x) &gt; 180)
flights[circ,]
flights$lon.y[circ] &lt;- ifelse(flights$lon.y[circ] &amp;lt; 0, 180, -180)
flights$lat.y[circ] &lt;- rowSums(flights[circ, c(""lat.x"", ""lat.y"")]) / 2
leg2 &lt;- airports %&gt;%
  filter(airport %in% flights$To[circ]) %&gt;%
  mutate(From = rep("""", length(circ))) %&gt;%
  mutate(lon.x = -flights$lon.y[circ], lat.x = flights$lat.y[circ]) %&gt;%
  select(From, To = airport, lon.x, lat.x, lon.y = lon, lat.y = lat)
flights &lt;- rbind(flights, leg2)

airports$airport &lt;- as.character(airports$airport)
comma &lt;- regexpr("","", airports$airport)
airports$airport[which(comma &gt; 0)] &lt;- substr(airports$airport[which(comma &gt; 0)], 1, comma[comma &gt; 0] - 1)

worldmap &lt;- borders(""world"", colour = ""#efede1"", fill = ""#efede1"") 
ggplot() + worldmap + 
    geom_point(data = airports, aes(x = lon, y = lat), col = ""#970027"") + 
    geom_text_repel(data = airports, aes(x = lon, y = lat, label = airport), 
                    col = ""black"", size = 2, segment.color = NA) + 
    geom_curve(data = flights, aes(x = lon.x, y = lat.x, xend = lon.y, yend = lat.y), 
               col = ""#b29e7d"", size = .4) + 
    theme_void()
</pre>
<!-- /wp:preformatted -->"
485,2017-06-08,Tic Tac Toe Simulation: The Intelligent Minimax Algorithm,https://lucidmanager.org/tic-tac-toe-war-games/,tic-tac-toe-war-games,The Devil is in the Data,R Games|R Language,"<!-- wp:paragraph -->
<p>One of my favourite movies is <em>WarGames</em>. One of the most memorable scenes is where the protagonist tries to teach the out-of-control AI that a nuclear war is unwinnable with a Tic Tac Toe simulation.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Tic Tac Toe might be a futile children’s game but it can also teach us&nbsp;about artificial intelligence. Tic Tac Toe, or Noughts and Crosses,  is a <a rel=""noreferrer noopener"" href=""https://en.wikipedia.org/wiki/Zero-sum_game"" target=""_blank"">zero-sum game</a>&nbsp;with perfect information.&nbsp;Both players have full information about each other. When nobody makes a mistake, the game always ends in a draw.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This article describes how to self-playing game of Tic Tac Toe, complete with a graphical interface, in the R language. This article is part of a series about <a href=""https://lucidmanager.org/r-games/"">computer games</a> in the R Language.</p>
<!-- /wp:paragraph -->

<!-- wp:uagb/post-carousel {""block_id"":""ce27ea82-a4c6-4374-80d8-c99e06cbae8e"",""categories"":""9"",""taxonomyType"":""post_tag"",""displayPostDate"":false,""displayPostExcerpt"":false,""displayPostAuthor"":false,""displayPostComment"":false,""displayPostLink"":false,""columns"":2,""rowGap"":10,""columnGap"":10,""titleTag"":""h4"",""titleBottomSpace"":2,""metaBottomSpace"":0,""excerptBottomSpace"":0} /-->

<!-- wp:paragraph -->
<p>The first two parts of the article describe how to create the user interface and add a human player. The second part delves into creating computer players. My ultimate aim is to recreate this iconic scene in the <em><a href=""https://www.youtube.com/watch?v=F7qOV8xonfY"" target=""_blank"" rel=""noreferrer noopener"" aria-label=""WarGames (opens in a new tab)"">WarGames</a></em> movie.</p>
<!-- /wp:paragraph -->

<!-- wp:uagb/call-to-action {""block_id"":""bf94c859-2fc3-4f8c-a8d2-e138450f82c3"",""ctaTarget"":true,""ctaIcon"":""github"",""ctaText"":""Download"",""ctaLink"":""https://github.com/pprevos/RGames/tree/master/TicTacToe"",""ctaBtnLinkColor"":""#f9f9f8"",""ctaBgColor"":""#e82a44"",""ctaBorderWidth"":0} -->
<div class=""uagb-cta__outer-wrap"" id=""uagb-cta-block-bf94c859-2fc3-4f8c-a8d2-e138450f82c3""><div class=""uagb-cta__content-wrap uagb-cta__block uagb-cta__icon-position-right uagb-cta__content-right uagb-cta__content-stacked-tablet uagb-cta__button-valign-middle ""><div class=""uagb-cta__left-right-wrap""><div class=""uagb-cta__content""><div class=""uagb-cta__title-wrap""><h3 class=""uagb-cta__title"">Download Tic Tac Toe in R</h3></div><div class=""uagb-cta-text-wrap""><p class=""uagb-cta__desc"">You can view the code below or download it from <a href=""https://github.com/pprevos/RGames/tree/master/TicTacToe"">GitHub</a>.</p></div></div><div class=""uagb-cta__link-wrapper uagb-cta__block-link-style""><div class=""uagb-cta__button-wrapper""><a href=""https://github.com/pprevos/RGames/tree/master/TicTacToe"" class=""uagb-cta__block-link uagb-cta__button-link-wrapper uagb-cta-typeof-button"" target=""_blank"" rel=""noopener noreferrer""><span class=""uagb-cta__link-content-inner""><span>Download</span></span><span class=""uagb-cta-button-icon uagb-cta__align-button-after uagb-cta-with-svg""><svg xmlns=""http://www.w3.org/2000/svg"" viewbox=""0 0 496 512""><path d=""M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z""></path></svg></span></a></div></div></div></div></div>
<!-- /wp:uagb/call-to-action -->

<!-- wp:heading -->
<h2>The Game Board</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This first code snippet draws the Tic Tac Toe simulation board. The <g class=""gr_ gr_7 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace"" id=""7"" data-gr-id=""7"">variable </g><code>xo</code><g class=""gr_ gr_7 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace"" id=""7"" data-gr-id=""7""> holds</g> the identity of the pieces and the <g class=""gr_ gr_8 gr-alert gr_gramm gr_inline_cards gr_run_anim Style multiReplace"" id=""8"" data-gr-id=""8"">vector </g><code>board</code><g class=""gr_ gr_8 gr-alert gr_gramm gr_inline_cards gr_disable_anim_appear Style multiReplace"" id=""8"" data-gr-id=""8"">  holds</g> the current game. The game board is a vector of length nine consisting of either -1 (X),  0 (empty field) or 1 (O). The vector indices correspond with locations  on the game board:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {""align"":""center""} -->
<p style=""text-align:center"">1 2 3<br>4 5 6<br>7 8 9</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The second part of the code&nbsp;checks for three in a row and draws the corresponding line.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">draw.board &lt;- function(game) {
    xo &lt;- c(""X"", "" "", ""O"") # Symbols
    par(mar = rep(1,4))
    plot.new()
    plot.window(xlim = c(0,30), ylim = c(0,30))
    abline(h = c(10, 20), col = ""darkgrey"", lwd = 4)
    abline(v = c(10, 20), col = ""darkgrey"", lwd = 4)
    text(rep(c(5, 15, 25), 3), c(rep(25, 3), rep(15,3), rep(5, 3)), 
         xo[game + 2], cex = 4)
    # Identify location of any three in a row
    square &lt;- matrix(game, nrow = 3, byrow = TRUE)
    hor &lt;- abs(rowSums(square))
    if (any(hor == 3)) 
        hor &lt;- (4 - which(hor == 3)) * 10 - 5 
    else 
        hor &lt;- 0
    ver &lt;- abs(colSums(square))
    if (any(ver == 3)) 
        ver &lt;- which(ver == 3) * 10 - 5 
    else
        ver &lt;- 0
    diag1 &lt;- sum(diag(square))
    diag2 &lt;- sum(diag(t(apply(square, 2, rev)))) 
    # Draw winning lines 
    if (all(hor > 0))
        for (i in hor)
            lines(c(0, 30), rep(i, 2), lwd = 10, col=""red"")
    if (all(ver > 0))
        for (i in ver)
            lines(rep(i, 2), c(0, 30), lwd = 10, col=""red"")
    if (abs(diag1) == 3)
        lines(c(2, 28), c(28, 2), lwd = 10, col = ""red"")
    if (abs(diag2) == 3)
        lines(c(2, 28), c(2, 28), lwd = 10, col = ""red"")
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Human Player</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This second code snippet lets a human player move by clicking anywhere on the graphic display using the <a href=""https://www.rdocumentation.org/packages/graphics/versions/3.6.2/topics/locator"">locator</a> function. The click location is converted to a number to denote the position on the board.&nbsp;The entered field is only accepted if it has not yet been used (the <code>empty</code> variable contains the available fields). </p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">move.human &lt;- function(game) {
    text(4, 0, ""Click on screen to move"", col = ""grey"", cex=.7)
    empty &lt;- which(game == 0)
    move &lt;- 0
    while (!move %in% empty) {
        coords &lt;- locator(n = 1) # add lines
        coords$x &lt;- floor(abs(coords$x) / 10) + 1
        coords$y &lt;- floor(abs(coords$y) / 10) + 1
        move &lt;- coords$x + 3 * (3 - coords$y)
    }
    return(move)
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Human Player</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The computer uses a modified <a href=""https://en.wikipedia.org/wiki/Minimax"">Minimax Algorithm</a> to determine its next move. This article from the <a rel=""noopener"" href=""http://neverstopbuilding.com/minimax"">Never Stop Building</a> blog and the video below explain this method in great detail.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=6kFKnB6JtcY"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-4-3 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-4-3 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=6kFKnB6JtcY
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>If the computer moves first, the algorithm takes a while because of the large number of permutations. There are&nbsp;<a rel=""noreferrer noopener"" href=""http://www.se16.info/hgb/tictactoe.htm"" target=""_blank"">255,168 possible legal games</a>&nbsp;in Tic Tac Toe,&nbsp;46,080 (18%) of which end in a draw.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The code for this part is contributed by a reader (see comments below). I originally made a mistake in the recurring function and Alberto was so kind to contribute a correct version.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The&nbsp;<em><g class=""gr_ gr_3 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling"" id=""3"" data-gr-id=""3"">ganador</g></em>&nbsp;(Spanish for winning) function assesses the board condition by assigning -10 or + 10 for a winning game and 0 for any other situation.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The minimax function returns a list with the move and its valuation through the ganador function. The function calls itself until it has filled the board and retains the best scoring move using the minimax method. Random variables are added to avoid the computer always playing the same move in the same situation.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">ganador &lt;- function(juego, player) {
    game &lt;- matrix(juego, nrow = 3, byrow = T)
    hor &lt;- rowSums(game)
    ver &lt;- colSums(game)
    diag &lt;- c(sum(diag(game)), sum(diag(apply(game, 1, rev))))
    if (-3 %in% c(hor, ver, diag))
        return(-10)
    if (3 %in% c(hor, ver, diag))
        return(10)
    else
        return(0)
}

minimax &lt;- function(juego, player) {
    free &lt;- which(juego == 0)
    if(length(free) == 1) {
        juego[free] &lt;- player
        return(list(move = free, U = ganador(juego, player)))
    }
    poss.results &lt;- rep(0, 9)
    for(i in free) {
        game &lt;- juego
        game[i] &lt;- player
        poss.results[i] &lt;- ganador(game, player)
    }
    mm &lt;- ifelse(player == -1, ""which.min"", ""which.max"")
    if(any(poss.results == (player * 10))) {
        move &lt;- do.call(mm, list(poss.results))
        return(list(move = move, U = poss.results[move]))
    }
    for(i in free) {
        game &lt;- juego
        game[i] &lt;- player
        poss.results[i] &lt;- minimax(game, -player)$U
    }
    random &lt;- runif(9, 0, 0.1)
    poss.results[-free] &lt;- 100 * -player
    poss.results &lt;- poss.results + (player * random)
    move &lt;- do.call(mm, list(poss.results))
    return(list(move = move, U = poss.results[move]))
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Play Tic Tac Toe</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The last bit of code defines a function to play the game. Each layer can be either a human or a computer. The function loops while there are still empty spots on the board an<g class=""gr_ gr_183 gr-alert gr_gramm gr_inline_cards gr_run_anim Grammar multiReplace"" id=""183"" data-gr-id=""183""><g class=""gr_ gr_184 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling"" id=""184"" data-gr-id=""184"">d</g></g> no winner is declared.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">tic.tac.toe &lt;- function(player1 = ""human"", player2 = ""computer"") {
    game &lt;- rep(0, 9) # Empty board
    winner &lt;- 0 # Define winner
    player &lt;- 1 # First player
    players &lt;- c(player1, player2)
    draw.board(game)
    while (0 %in% game &amp; winner == 0) { # Keep playing until win or full board
        if (players[(player + 3) %% 3] == ""human"") # Human player
            move &lt;- move.human(game)
        else { # Computer player
            move &lt;- minimax(game, player)[[1]]
            }
        game[move] &lt;- player # Change board
        draw.board(game)
        winner &lt;- ganador(game, player)
        player &lt;- -player # Change player
    }
    if (winner == 0)
        text(15, 15 , ""DRAW"", col = ""red"", cex = 10)
}

tic.tac.toe()</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Wargames Simulation</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Now all elements are in place to recreate the simulation in the <em>Wargames</em> movie. The animation package helps to create an animated gif where the computer keeps playing itself. All games end in a draw.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":8269} -->
<figure class=""wp-block-image""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/05/wargames.gif"" alt=""Simulating Tic Tac Tow Wargames."" class=""wp-image-8269""/></figure>
<!-- /wp:image -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">library(animation)

## WAR GAMES TIC TAC TOE
draw.board.wargames &lt;- function(game) {
    xo &lt;- c(""X"", "" "", ""O"") # Symbols
    par(mar = rep(1,4), bg = ""#050811"")
    plot.new()
    plot.window(xlim = c(0,30), ylim = c(0,30))
    abline(h = c(10, 20), col = ""#588fca"", lwd = 20)
    abline(v = c(10, 20), col = ""#588fca"", lwd = 20)
    text(rep(c(5, 15, 25), 3), c(rep(25, 3), rep(15,3), rep(5, 3)), xo[game + 2],
         cex = 20, col = ""#588fca"")
    text(0, 0, ""lucidmanager.org"", col = ""#588fca"", cex = 2, adj = 0)
    ## Identify location of any three in a row
    square &lt;- t(matrix(game, nrow = 3))
    hor &lt;- abs(rowSums(square))
    if (any(hor == 3)) 
        hor &lt;- (4 - which(hor == 3)) * 10 - 5 
    else 
        hor &lt;- 0
    ver &lt;- abs(colSums(square))
    if (any(ver == 3)) 
        ver &lt;- which(ver == 3) * 10 - 5 
    else
        ver &lt;- 0
    diag1 &lt;- sum(diag(square))
    diag2 &lt;- sum(diag(t(apply(square, 2, rev)))) 
    ## Draw winning lines 
    if (all(hor > 0)) for (i in hor) lines(c(0, 30), rep(i, 2), lwd = 20, col=""#588fca"")
    if (all(ver > 0)) for (i in ver) lines(rep(i, 2), c(0, 30), lwd = 20, col=""#588fca"")
    if (abs(diag1) == 3) lines(c(2, 28), c(28, 2), lwd = 20, col = ""#588fca"")
    if (abs(diag2) == 3) lines(c(2, 28), c(2, 28), lwd = 20, col = ""#588fca"")
}

saveGIF ({
    for (i in 1:10) {
        game &lt;- rep(0, 9) # Empty board
        winner &lt;- 0 # Define winner
        player &lt;- -1 # First 
        while (0 %in% game &amp; winner == 0) {
            empty &lt;- which(game == 0) # Define empty squares
            if (length(empty) == 9)
                move &lt;- empty[sample(length(empty), 1)] # Random move
            else
                move &lt;- minimax(game, player)[[1]]
            game[move] &lt;- player # Change board
            draw.board.wargames(game)
            winner &lt;- ganador(game) # Evaulate game
            player &lt;- -player # Change player
        }
    }
},
interval = .1, movie.name = ""wargames.gif"",
ani.width = 1024, ani.height = 1024)</pre>
<!-- /wp:enlighter/codeblock -->"
541,2017-07-20,Euler Problem 28: The Ulam Spiral and Quadratic primes,https://lucidmanager.org/euler-problem-28/,euler-problem-28,The Devil is in the Data,Numberphile|Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 28 takes us to the world of the <a href=""https://en.wikipedia.org/wiki/Ulam_spiral"" target=""_blank"" rel=""noopener noreferrer"">Ulam Spiral</a>. This is a spiral that contains sequential positive integers in a square spiral, marking the prime numbers. Stanislaw Ulam discovered that a lot of primes are located along the diagonals. These diagonals can be described as polynomials. The Ulam Spiral is thus a way of generating quadratic primes (<a href=""https://lucidmanager.org/quadratic-primes-euler-problem-27/"">Euler Problem 27</a>).</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center""} -->
<div class=""wp-block-image""><figure class=""aligncenter""><img src=""https://upload.wikimedia.org/wikipedia/commons/thumb/3/3c/Ulam_spiral_howto_primes_only.svg/507px-Ulam_spiral_howto_primes_only.svg.png"" alt=""Euler Problem 28: The Ulam Spiral""/><figcaption>Ulam Spiral (WikiMedia).</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Euler Problem 28 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Starting with the number 1 and moving to the right in a clockwise direction a 5 by 5 spiral is formed as follows:</p>
<!-- /wp:paragraph -->

<pre style=""text-align: center;""><span style=""color: #ff0000;"" data-rich-text-format-boundary=""true"">21</span> 22 23 24 <span style=""color: #ff0000;"">25</span><br data-rich-text-line-break=""true"" />20 <span style=""color: #ff0000;"">07</span> 08 <span style=""color: #ff0000;"">09</span> 10<br data-rich-text-line-break=""true"" />19 06 <span style=""color: #ff0000;"">01</span> 02 11<br data-rich-text-line-break=""true"" />18 <span style=""color: #ff0000;"">05</span> 04 <span style=""color: #ff0000;"">03</span> 12<br data-rich-text-line-break=""true"" /><span style=""color: #ff0000;"">17</span> 16 15 14 <span style=""color: #ff0000;"">13</span></pre>

<!-- wp:paragraph -->
<p>It can be verified that the sum of the numbers on the diagonals is 101. What is the <a href=""https://projecteuler.net/problem=28"" target=""_blank"" rel=""noopener noreferrer"">sum of the numbers on the diagonals in </a>a 1001 by 1001 spiral formed in the same way?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Proposed Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To solve this problem we do not need to create a matrix.&nbsp;This code calculates the values of the corners of a matrix with size $latex n &amp;s=1$. The lowest number in the matrix with size $latex n &amp;s=1$ is $latex n(n-3)+4$. The numbers increase by $latex n-1 &amp;s=1$. The code steps through all matrices from size 3 to 1001. The solution uses only the uneven sized matrices because these have a centre. The answer to the problem is the sum of all numbers.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">size &lt;- 1001 # Size of matrix
answer &lt;- 1 # Starting number

## Define corners of subsequent matrices
for (n in seq(from = 3, to = size, by = 2)) {
    corners &lt;- seq(from = n * (n - 3) + 3, by = n - 1, length.out = 4)
    answer &lt;- answer + sum(corners)
}
print(answer)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Plotting the Ulam Spiral</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>We can go beyond Euler Problem 28 and play with the mathematics. This code snippet plots all the prime numbers in the Ulam Spiral. Watch the Numberphile video for an explanation of the patterns that appear along the diagonals.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The code creates a matrix of the required size and fills it with the Ulam Spiral. The code then identifies all primes using the <em>is.prime</em> function from&nbsp;<a href=""https://lucidmanager.org/euler-problem-7/"">Euler Problem 7</a>, as visualised on the top of this article. You can download&nbsp; the latest version of this code from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem028.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":9080,""align"":""center"",""className"":""size-full wp-image-547""} -->
<div class=""wp-block-image size-full wp-image-547""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2017/07/ulamspiral-1024x470.png"" alt=""Ulam Spiral prime numbers."" class=""wp-image-9080""/><figcaption>Ulam Spiral prime numbers.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=iFuR97YcSLM"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=iFuR97YcSLM
</div><figcaption>Prime spirals: Numberphile.</figcaption></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">size &lt;- 201 # Size of matrix
ulam &lt;- matrix(ncol = size, nrow = size)
mid &lt;- floor(size / 2 + 1)
ulam[mid, mid] &lt;- 1
for (n in seq(from = 3, to = size, by = 2)) {
    numbers &lt;- (n * (n - 4) + 5) : ((n + 2) * ((n + 2) - 4) + 4)
    d &lt;- mid - floor(n / 2)
    l &lt;- length(numbers)
    ulam[d, d:(d + n - 1)] &lt;- numbers[(l - n + 1):l]
    ulam[d + n - 1, (d + n - 1):d] &lt;- numbers[(n - 1):(n - 2 + n)]
    ulam[(d + 1):(d + n - 2), d] &lt;- numbers[(l - n):(l - 2 * n + 3)]
    ulam[(d + 1):(d + n - 2), d + n - 1] &lt;- numbers[1:(n - 2)]
}
ulam.primes &lt;- apply(ulam, c(1, 2), is.prime)

library(ggplot2)
library(reshape2)
ulam.primes &lt;- melt(ulam.primes)

ggplot(ulam.primes, aes(x = Var1, y = Var2, fill = value)) +
    geom_tile() +
    scale_fill_manual(values = c(""white"", ""black"")) +
    guides(fill =FALSE) +
    theme(void)</pre>
<!-- /wp:enlighter/codeblock -->"
549,2017-08-03,Euler Problem 29: Distinct Powers,https://lucidmanager.org/euler-problem-29-distinct-powers/,euler-problem-29-distinct-powers,The Devil is in the Data,Numberphile|Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 29 is another permutation problem that is quite easy to solve using <a href=""https://lucidmanager.org/euler-problem-6/"">brute force</a>.&nbsp;The <a href=""http://www.mathblog.dk/project-euler-29-distinct-terms-sequence-ab/"">MathBlog</a> site by Kristian Edlund has a nice solution using only pen and paper.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Raising a number to a power can have interesting results. The video below explains why this <a href=""https://lucidmanager.org/pandigital-products-euler-problem-32/"">pandigital</a> formula approximates $latex e $ to billions of decimals:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex (1 + 9^{-4^{6 \times 7}})^{3^{2^{85}}} \approx e &amp;s=2$</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=xgBGibfLD-U"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=xgBGibfLD-U
</div><figcaption>Incredible formula - Numberphile.</figcaption></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Euler Problem 29 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Consider all integer combinations of: $latex a^b $ for $latex 2 \leq a \leq 5 $ and $latex \leq b \leq 5 $.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex 2^2=4, \quad 2^3 = 8, \quad 2^4 = 16, \quad 2^5 = 32 $</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex 3^2 = 9,\quad 3^3 = 27, \quad 3^4 = 81,\quad 3^5 = 243 $</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex 4^2 = 16,\quad 4^3 = 64, \quad 4^4 = 256, \quad 4^5 = 1024 $</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex 5^2 = 25,\quad 5^3 = 125, \quad 5^4 = 625,\quad 5^5 = 3125 $</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If they are then placed in numerical order, with any repeats removed, we get the following sequence of 15 distinct terms:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex 4, \ 8, \ 9, \ 16, \ 25, \ 27, \ 32, \ 64, \ 81, \ 125, \ 243, \ 256,\ 625, \ 1024, \ 3125 $</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>How many <a href=""https://projecteuler.net/problem=29"" target=""_blank"" rel=""noopener noreferrer"">distinct terms are in the sequence</a> generated by $latex a^b $ for $latex 2 \leq a \leq 100 $ and $latex 2 \leq b \leq 100 $?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Brute Force Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This code calculates all powers from $latex 2^2 $ to $latex 2^{100} $ and determines the number of unique values. There is no need to use Multiple Precision Arithmetic because we are only interested in their uniqueness and not the precise value, </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>View the code below or download latest version of this code on <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem029.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">target &lt;- 100
terms &lt;- vector()
i &lt;- 1
    for (a in 2:target) {
    for (b in 2:target) {
        terms[i] &lt;- a^b
        i &lt;- i + 1
    }
}
answer &lt;- length(unique(terms))
print(answer)</pre>
<!-- /wp:enlighter/codeblock -->"
616,2017-04-20,R-Cade Games: Simulating the Legendary Pong Game,https://lucidmanager.org/pong/,pong,The Devil is in the Data,R Games|R Language,"<!-- wp:paragraph -->
<p>Pong is one of the earliest <a href=""https://en.wikipedia.org/wiki/Arcade_game"" target=""_blank"" rel=""noopener noreferrer"">arcade games</a> on the market, first released in 1972. From the day I first saw this miracle box, I wanted to know more about computers.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>I learnt how to write code from the 1983 book&nbsp;<a href=""https://archive.org/details/Dr_Wackos_Guide_to_Creating_Arcade_Games"" target=""_blank"" rel=""noopener noreferrer"">Dr. C. Wacko's Miracle Guide to Designing and Programming your own Atari Computer Arcade Games</a>. This book explains in a very clear and humorous&nbsp;way how to write computer games in Atari basic. I devoured this book and spent many hours developing silly games. This article is an ode to Dr Wacko, a computer geek's midlife-crisis and an attempt to replicate the software I developed thirty years ago.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":8199,""align"":""center"",""linkDestination"":""custom""} -->
<div class=""wp-block-image""><figure class=""aligncenter""><a href=""https://archive.org/details/Dr_Wackos_Guide_to_Creating_Arcade_Games/page/n0"" target=""_blank"" rel=""noopener noreferrer""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2017/04/DrWacko-1024x731.jpg"" alt=""Dr Wacko's Miracle Guide - The Pong Inspiration"" class=""wp-image-8199""/></a></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>I showed in a previous post that R can be used for board&nbsp;<a href=""https://lucidmanager.org/r-games/"">games</a> or play a game of <a href=""https://lucidmanager.org/euler-problem-144/"">elliptical pool</a>. The question is whether&nbsp;we create arcade&nbsp;games in R.&nbsp;My challenge is to recreate the look and feel of 1980s arcade games, or <em>R-Cade</em> games, using R? The code shown below simulates&nbsp;the legendary game of pong.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Playing Pong in R</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The code is based on the Wacko's<em> Boing Program</em> in the above-mentioned book. The R code&nbsp;is fully commented and speaks for itself. Please note that the animation is very clunky when you run it in <a href=""https://support.rstudio.com/hc/en-us/articles/200488548-Problem-with-Plots-or-Graphics-Device"" target=""_blank"" rel=""noopener noreferrer"">RStudio</a>.&nbsp;Only&nbsp;the native R Terminal displays the animation correctly.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This version plays automatically with a randomiser routine to render the gameplay imperfect. The skill parameter indicates how good the computer player is between 0 and 1.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The <g class=""gr_ gr_9 gr-alert gr_spell gr_inline_cards gr_run_anim ContextualSpelling ins-del multiReplace"" id=""9"" data-gr-id=""9""><a rel=""noreferrer noopener"" aria-label=""beepr (opens in a new tab)"" href=""https://cran.r-project.org/web/packages/beepr/index.html"" target=""_blank"">beepr</a></g> library by Rasmus Bååth provides some much-needed sound.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The main issue with this code is that I have not been able to ad a human Pong player. I am not aware of a way to use continuous input in the R language. Perhaps somebody can help me perfect this little ditty. I love to know how to read real-time USB input to control the game, so we get a step closer to the first R-Cade game.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://youtu.be/A6ytTe8KcZ0"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-4-3 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-4-3 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://youtu.be/A6ytTe8KcZ0
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>The Pong Simulation Code</h2>
<!-- /wp:heading -->

<!-- wp:uagb/marketing-button {""block_id"":""c896537a-6d8e-4e29-b64e-4bff34ae6ca1"",""link"":""https://github.com/pprevos/RGames/blob/master/pong.R"",""linkTarget"":true,""icon"":""github""} -->
<div class=""wp-block-uagb-marketing-button uagb-marketing-btn__outer-wrap uagb-marketing-btn__align-center uagb-marketing-btn__align-text-center uagb-marketing-btn__icon-before"" id=""uagb-marketing-btn-c896537a-6d8e-4e29-b64e-4bff34ae6ca1""><div class=""uagb-marketing-btn__wrap""><a href=""https://github.com/pprevos/RGames/blob/master/pong.R"" class=""uagb-marketing-btn__link"" target=""_blank"" rel=""noopener noreferrer""><div class=""uagb-marketing-btn__title-wrap""><div class=""uagb-marketing-btn__icon-wrap""><svg xmlns=""http://www.w3.org/2000/svg"" viewbox=""0 0 496 512""><path d=""M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z""></path></svg></div><h6 class=""uagb-marketing-btn__title"">Download</h6></div><div class=""uagb-marketing-btn__prefix-wrap""><p class=""uagb-marketing-btn__prefix"">You can view the Pong code below or download the latest version from GitHub.</p></div></a></div></div>
<!-- /wp:uagb/marketing-button -->

<!-- wp:spacer {""height"":20} -->
<div style=""height:20px"" aria-hidden=""true"" class=""wp-block-spacer""></div>
<!-- /wp:spacer -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">## Sound library
library(beepr) 

## Game parameters
skill &lt;- 0.87 # Skill (0-1)
score &lt;- 0
high.score &lt;- 0

## Define playing field
x11()
par(mar = rep(1,4), bg = ""black"")
plot.new()
splot.window(xlim = c(0,30), ylim = c(0,30))
lines(c(1, 30, 30, 1), c(0, 0, 30, 30), type = ""l"", lwd = 5, col = ""white"")

## Playing field boundaries (depends on cex)
xmin &lt;- 0.5
xmax &lt;- 29.4
ymin &lt;- 0.5
ymax &lt;- 29.4

## initial position
x &lt;- sample(5:25, 1)
y &lt;- sample(5:25, 1)
points(x, y, pch = 15, col = ""white"", cex = 2)

## Paddle control
psize &lt;- 4
ypaddle &lt;- y

## Set direction
dx &lt;- runif(1, .5, 1)
dy &lt;- runif(1, .5, 1)

## Game play
while (x > xmin - 1) {
    sound &lt;- 0 # Silence
    Sys.sleep(.05) # Pause screen
    points(x, y, pch = 15, col = ""black"", cex = 2) # Erase ball
    # Move ball
    x &lt;- x + dx
    y &lt;- y + dy
    # Collision detection
    if (x > xmax) {
        dx &lt;- -dx * runif(1, .9, 1.1) # Bounce
        if (x > xmin) x &lt;- xmax # Boundary
        sound &lt;- 10 # Set sound
        }
    if (y &lt; ymin | y > ymax) {
        if (y &lt; ymin) y &lt;- ymin
        if (y > ymax) y &lt;- ymax
        dy &lt;- -dy * runif(1, .9, 1.1)
        sound &lt;- 10
    }
    # Caught by paddle?
    if (x &lt; xmin &amp; (y > ypaddle - (psize / 2)) &amp; y &lt; ypaddle + (psize / 2)) {
        if (x &lt; xmin) x &lt;- xmin
        dx &lt;- -dx * runif(1, .9, 1.1)
        sound &lt;- 2
        score &lt;- score + 1
        }
    # Draw ball
    points(x, y, pch = 15, col = ""white"", cex = 2)
    if (sound !=0) beep(sound)
    # Move paddle
    if (runif(1, 0, 1) &lt; skill) ypaddle &lt;- ypaddle + dy # Imperfect follow
    # Draw paddle
    # Erase back line
    lines(c(0, 0), c(0, 30), type = ""l"", lwd = 8, col = ""black"")
    # Keep paddle in window
    if (ypaddle &lt; (psize / 2)) ypaddle &lt;- (psize / 2)
    if (ypaddle > 30 - (psize / 2)) ypaddle &lt;- 30 - (psize / 2)
    # Draw paddle
    lines(c(0, 0), c(ypaddle - (psize / 2), ypaddle + (psize / 2)), type = ""l"", lwd = 8, col = ""white"")
}
beep(8)
text(15,15, ""GAME OVER"", cex=5, col = ""white"")
s &lt;- ifelse(score == 1, """", ""s"")
text(15,5, paste0(score, "" Point"", s), cex=3, col = ""white"")</pre>
<!-- /wp:enlighter/codeblock -->"
678,2017-05-25,The Sierpinski Triangle: Visualising infinity in R,https://lucidmanager.org/sierpinski-triangle/,sierpinski-triangle,The Devil is in the Data,Numberphile|R Language,"<!-- wp:paragraph -->
<p>Wacław Sierpiński was a mathematical genius&nbsp;who developed several of the earliest fractals. The Sierpiński triangle is an easy to conceptualise geometrical&nbsp;figure but it hides a fascinating mathematical complexity. Start by drawing an equilateral triangle and draw another one in its centre. Then draw equilateral triangles in the four resulting triangles,&nbsp;and so on, <em>ad infinitum</em>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The original Sierpinski triangle will eventually disappear into <a href=""http://mathworld.wolfram.com/CantorDust.html"" target=""_blank"" rel=""noopener noreferrer"">Cantor dust</a>, a cloud of ever-shrinking triangles of infinitesimal size. The triangle is self-similar,&nbsp;no matter how far you zoom in, the basic geometry remains the same.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":682} -->
<div class=""wp-block-image""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/05/sierpinski.gif"" alt=""Sierpinsky triangle"" class=""wp-image-682"" /></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>The Chaos Game</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>A fascinating method to create a Sierpinski Triangle is a <a href=""https://en.wikipedia.org/wiki/Chaos_game"" target=""_blank"" rel=""noopener noreferrer"">chaos game</a>. This method uses random numbers and some simple arithmetic rules. Sierpinski&nbsp;Triangles can be created using the following six steps:</p>
<!-- /wp:paragraph -->

<!-- wp:list {""ordered"":true} -->
<ol><li>Define three points in a plane to form a triangle.</li><li>Randomly select any point on the plane.</li><li>Randomly select any one of the three triangle points.</li><li>Move half the distance from your current position to the selected vertex.</li><li>Plot the current position.</li><li>Repeat from step 3.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>This fractal is an implementation of chaos theory as this random process attracts to&nbsp;a complex ordered geometry. The game only works with random numbers and when selecting random vertices of the triangle.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=kbKtFN71Lfs"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=kbKtFN71Lfs
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Sierpinski Triangle Code</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This code implements the six rules in R. The code first initialises the triangle, defines a random starting point and then runs a loop to place random dots.&nbsp;The R plot engine does not draw pixels but uses characters, which implies that the diagram is not as accurate as it could be but the general principle is clear. The <code>x11()</code> and <code>Sys.sleep()</code> commands are used to&nbsp;plot during the for-loop.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This algorithm demonstrates how a seemingly chaotic process can result in order. Many other versions of <a href=""https://en.wikipedia.org/wiki/Chaos_game"" target=""_blank"" rel=""noopener noreferrer"">chaos games</a> exist, which I leave to the reader to play with. If you create your own versions then please share the code in the comment box below.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you are interested in visualising mathematical&nbsp;oddities then feel free to read my article about the <a href=""https://lucidmanager.org/plotting-mobius-strip/"">Möbius strip and Klein Bottle</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>View the code below or download the latest version from <a href=""https://github.com/pprevos/r.prevos.net/blob/master/Miscellaneous/Mathematics/sierpinsky.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">p &lt;- c(0, 500, 1000)
q &lt;- c(0, 1000, 0)
x11()
par(mar = rep(0, 4))
plot(p, q, col= ""red"", pch = 15, cex = 1, axes = FALSE)
Random starting point

x &lt;- sample(0:1000, 1)
y &lt;- sample(0:1000, 1)

for (i in 1:10000) {
    Sys.sleep(.001)
    n &lt;- sample(1:3, 1)
    x &lt;- floor(x + (p[n] - x) / 2)
    y &lt;- floor(y + (q[n] - y) / 2)
    points(x, y, pch = 15, cex = 0.5)
}</pre>
<!-- /wp:preformatted -->"
738,2017-07-06,Generating Quadratic Primes: Euler Problem 27,https://lucidmanager.org/euler-problem-27-quadratic-primes/,euler-problem-27-quadratic-primes,The Devil is in the Data,Numberphile|Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Prime numbers are the engine of the Internet economy because they cannot be generated through an algorithm. This impossibility has not stopped mathematicians from trying to find formulas to generate prime numbers. Euler problem 27 deals with quadratic formulas that can be used to generate sets of prime numbers. I have already discussed this in the article about the <a href=""https://lucidmanager.org/euler-problem-28/"">Ulam Spiral</a> in the next Euler Problem. This Numerphile video discusses quadratic primes.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=3K-12i0jclM"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=3K-12i0jclM
</div><figcaption>41 and more Ulam's Spiral.</figcaption></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Euler Problem 27 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Euler discovered the remarkable quadratic formula:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex n^2+n+41$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>It turns out that the formula will produce 40 primes for the consecutive integer values $latex 0 \leq n \leq 39$. However, when $latex n=40$, $latex 40^2+40+41=40(40+1)+41$ is divisible by 41, and certainly when $latex n=41 &amp;s=2$, $latex 41^2+41+41$ is clearly divisible by $latex 41$.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The incredible formula $latex n^2-79n+1601$ was discovered, which produces 80 primes for the consecutive values $latex 0 \leq n \leq 79$. The product of the coefficients, -79 and 1601, is -126479.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Considering quadratics of the form: $latex n^2+an+bn^2+an+b$, where $latex |a| &lt; 1000$ and $latex |b| \leq 1000$, where $latex |n| $ is the modulus/absolute value of $latex n$, e.g. $latex |11|=11$ and $latex |-4|=4 $.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a href=""https://projecteuler.net/problem=27"" rel=""noopener"">Find the product of the coefficients</a>, $latex a$ and $latex b$, for the quadratic expression that produces the maximum number of primes for consecutive values of $latex n$, starting with $latex n=0$.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Proposed Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The only way to solve this problem is through brute force. We need to reduce the solution space to optimise it for speed (source: <a rel=""noopener"" href=""http://www.mathblog.dk/project-euler-27-quadratic-formula-primes-consecutive-values/"">mathblog.dk</a>). Because the outcome of the equation must be prime for $latex n = 0$, $latex b$ also has to be prime. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>We can use the prime sieve from <a href=""https://lucidmanager.org/euler-problem-3/"">Euler Problem 3</a>, which reduces it from 2000 to 168 options. When we insert $latex n = 1$, it follows that a has to be an even number. If $latex 1+a+b$ has to be prime and b has to be a prime number, then $latex a $can only be an odd number. However, when $latex b = 2$, $latex a$, also has to be even.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 27 code</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>View the latest version of this code below or download it from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem027.R"" rel=""noopener"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">seq.a &lt;- seq(-999, 1001, 2) # a has to be odd
seq.b &lt;- (esieve(1000)) # b has to be prime
max.count &lt;- 0
for (a in seq.a) {
    if (a == 2) 
        seq.a &lt;- seq(-1000, 1000, 2) # a has to be even
    for (b in seq.b) {
        n &lt;- 0 # Find sequence of primes for a and b
        while (is.prime(n^2 + a * n + b)) {
            n &lt;- n + 1
        }
        # Store maximum values
        if (n > max.count) {
            max.count &lt;- n
            max.a &lt;- a
            max.b &lt;- b
        }
    }
}
answer &lt;- max.a * max.b
print(answer)</pre>
<!-- /wp:enlighter/codeblock -->"
751,2017-07-13,Using the iGraph package to Analyse the Enron Corpus,https://lucidmanager.org/analyse-enron-corpus/,analyse-enron-corpus,The Devil is in the Data,Digital Humanities|Network Analysis|R Language,"<!-- wp:paragraph -->
<p>The Enron scandal is one of the most famous corporate governance failures in the history of capitalism. The case itself is interesting for its own sake, but in this post, I am more interested in one of the data sets that the subsequent investigation has provided.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This blog post analyses an extensive collection of e-mails from former Enron employees. The Enron corpus is analysed using network analysis tools provided by the <a href=""http://igraph.org/r/"" rel=""noopener"">iGraph package</a>. Network analysis is a versatile technique that can be used to add value to a lot of different data sets, including the complex corporate relationships of <a href=""https://lucidmanager.org/trumpworld-analysis/"">Donald Trump</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=jrEf8uabe7E"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=jrEf8uabe7E
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>The Enron Corpus</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>As part of their inquiries, The Federal Energy Regulatory Commission used an extensive collection of emails from Enron employees. The Enron corpus is one of the only publicly available collections of emails available for research. This dataset also provides a fascinating playground for citizen data scientists.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The set has privacy issues as it contains messages from living people. When analysing this data set, we need to keep in mind that the majority of former Enron employees were innocent people who lost their jobs due to the greed of their overlords. The code in this post only analyses the e-mail headers, ignoring the content.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center""} -->
<div class=""wp-block-image""><figure class=""aligncenter""><a href=""http://www.cnbc.com/2014/10/13/energy-industry-the-10-biggest-energy-company-bankruptcies.html"" rel=""noopener""><img src=""https://fm.cnbc.com/applications/cnbc.com/resources/img/editorial/2014/10/13/102082546-675237.530x298.jpg"" alt=""Laid-off Enron employees outside Enron headquarters as the company collapsed in 2001 - Enron corpus analysis"" /></a><figcaption>Laid-off Enron employees outside Enron headquarters as the company collapsed in 2001 (Source cnbc.com).</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>The Enron Corpus is an extensive database of half a million emails generated by more than 100 Enron employees. You can download the corpus from the <a href=""https://www.cs.cmu.edu/~./enron/"" rel=""noopener"">Carnegie Mellon School of Computer Science</a>. The first code snippet downloads the 7 May 2015 version of the dataset (about 423Mb, tarred and gzipped) and untars it to your working directory. You can download the most recent version of the code on <a href=""https://github.com/pprevos/r.prevos.net/blob/master/Miscellaneous/Enron.R"" rel=""noopener"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">if (!file.exists(""enron_mail_20150507.tgz"")) {
    download.file(""https://www.cs.cmu.edu/~./enron/enron_mail_20150507.tgz"",
                   destfile = ""enron_mail_20150507.tgz"")
}
if (!file.exists(""enron_mail_20150507.tgz"")) {
    untar(""enron_mail_20150507.tgz"")
}</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Preparing the Enron email</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The main folder is <code>maildir</code>, which holds all the personal accounts. Our first task is to load the required libraries and create a list of available emails. This code results in 517,401 e-mail files with 44,859 emails in the inboxes of users. The E-mail corpus consists of nested folders per user with e-mails as text files.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">emails &lt;- list.files(""maildir/"", full.names = TRUE, recursive = TRUE)
emails &lt;- emails[grep(""/inbox"", emails)]</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>The bulk of the code creates a list of emails between Enron employees. The code performs a lot of string manipulations to extract the information from the text files. The content of the e-mails is ignored, the code only retrieves the sender and the receiver. The analysis is limited to e-mails between employees in the corpus. Only those receivers whose inbox forms part of the analysis are included. The result of this code is a data frame with the usernames of the sender and receiver for each email. The data frame contains 2779 emails that meet the criteria.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The code below looks extracts all internal emails in the Inox folders. It then retrieves a lis of usernames from the e-mails. The data is cleaned by removing users without sent e-mails, and emails which users sent to themselves.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">inboxes &lt;- data.frame(
    from = apply(as.data.frame(emails), 1, 
               function(x){readLines(x, warn = FALSE)[3]}),
    to = emails,
    stringsAsFactors = FALSE
)
head(inboxes)

## Keep only enron.com and strip all but username
library(stringr) # String manipulation
inboxes &lt;- inboxes[grepl(""@enron.com"", inboxes$from),]
inboxes$from &lt;- str_sub(inboxes$from, 7, nchar(inboxes$from) - 10)
to &lt;- str_split(inboxes$to, ""/"")
inboxes$to &lt;- sapply(to, ""["", 7) # Number depends on foldder structure
head(inboxes)

## Create list of usernames
users &lt;- data.frame(user = paste0(""~/Desktop/maildir/"", unique(inboxes$to)))

## Remove those without sent mails
sent &lt;- apply(users, 1, function(x) sum(grepl(""sent"", dir(x))))
users &lt;- subset(users, sent != 0)
Replace username with e-mail name
users$mailname &lt;- NA
for (i in 1:nrow(users)){
    sentmail &lt;- dir(paste0(users$user[i], ""/sent_items/""))
    name &lt;- readLines(paste0(users$user[i], ""/sent_items/"", sentmail[1]), warn = F)[3]
    name &lt;- str_sub(name, 7, nchar(name)-10)
    users$mailname[i] &lt;- name
}
users$user &lt;- str_sub(users$user, 19)
inboxes &lt;- merge(inboxes, by.x=""to"", users, by.y=""user"")
inboxes &lt;- data.frame(from = inboxes$from, to = inboxes$mailname)

inboxes$from &lt;- as.character(inboxes$from)
inboxes$to &lt;- as.character(inboxes$to)
Only e-mails between inbox users

inboxes &lt;- inboxes[inboxes$from %in% inboxes$to,]

## Remove no.address
inboxes &lt;- subset(inboxes, from != ""no.address"" &amp; to != ""no.address"")

## Remove emails to self
inboxes &lt;- subset(inboxes, inboxes$from != inboxes$to)</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Analyse the Enron Corpus</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The last code snippet defines a <a href=""https://en.wikipedia.org/wiki/Graph_(discrete_mathematics)"" rel=""noopener"">graph</a> from the table of e-mails. Each employee is a node in the network, and each e-mail is an edge (line). The iGraph package is a powerful tool to analyse networks. The <code>graph_from_edgelist</code> function creates a network object that can be analysed using the iGraph package. The graph is directed because the information flows from the sender to the receiver.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In the next step, the Spingglass algorithm finds <a href=""https://en.wikipedia.org/wiki/Community_structure"" rel=""noopener"">community structure</a> within the data. A community is a group of nodes that are more connected with each other than with any other node.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The last step visualises the network. The diagram is drawn using the Fruchterman-Reingold algorithm, which places the most connected nodes at the centre of the picture. The background colours in the diagram indicate the eight communities.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The graph tells us a lot about the group of employees in the Enron corpus and how they relate to each other. Each of the communities represents a tightly connected group of employees that mainly e-mail each other. Any connections between communities are shown in red. When the <code>vertex.label = NA</code> line is removed, the usernames are displayed at each node.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>We can see groups that never email each other, lonely hangers-on and tightly knit cliques within Enron. In the centre of the graph, we see a few individuals who are connectors between groups because they send a lot of emails to people outside their community. On the fringes of the graph are the hangers-on who only once or twice emailed somebody in the corpus but were still included in the investigation.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=""wp-block-preformatted"">library(igraph)
g &lt;- graph_from_edgelist(as.matrix(inboxes), directed = TRUE)
coms &lt;- spinglass.community(g)
par(mar = c(0,0,2,0))
plot(coms, g,
    vertex.label=NA,
    layout = layout.fruchterman.reingold,
    vertex.size = 3
)
</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":756} -->
<div class=""wp-block-image""><figure class=""aligncenter""><a href=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/07/enron.png"" rel=""attachment wp-att-756""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/07/enron-1024x1024.png"" alt=""Enron email corpus network with communities."" class=""wp-image-756"" /></a><figcaption>Enron email corpus network with communities.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>This analysis provides only a quick glimpse into the knowledge contained in the Enron email corpus. An extensive range of tools is available to analyse such networks. An interesting exercise would be to overlap this network with the organisation chart to see the relationships between teams. Have fun playing with this fantastic, but somewhat sensitive, data set!</p>
<!-- /wp:paragraph -->"
766,2017-07-27,How Virtual Tags have transformed SCADA data analysis,https://lucidmanager.org/virtual-tags/,virtual-tags,The Devil is in the Data,Hydroinformatics|R Language,"<!-- wp:paragraph -->
<p>Yesterday, I delivered the International Keynote at the&nbsp;<a href=""https://www.conferenz.co.nz/events/asset-data-insights-conference"" rel=""noopener"">Asset Data &amp; Insights Conference</a>&nbsp;in Auckland, New Zealand (the place where R was originally developed). My talk was about how to create value from SCADA data, using a method I developed with my colleagues called&nbsp;<em>Virtual Tags</em>. My talk started with my views on data science strategy, which I also presented to the <a href=""https://lucidmanager.org/strategic-data-science/"">R User Group</a> in Melbourne. In this post, I like to explain what Virtual Tags are, and how they can be used to improve the value of <a href=""http://awa.asn.au/AWA_MBRR/Publications/Latest_News/Water_utilities_ready_for_next_wave_of_SCADA_data_analysis.aspx"" target=""_blank"" rel=""noopener noreferrer"">SCADA data</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>SCADA Systems at Water Treatment Plants</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Water treatment plants are mostly fully automated systems, using analysers and the SCADA system to communicate this data. For those of you not familiar with water treatment plants, this video below gives a cute summary of the process.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=rj44AkHmVCo"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-4-3 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-4-3 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=rj44AkHmVCo
</div><figcaption>Water Treatment SCADA explanation.</figcaption></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>Water treatment plants need sensors to measure a broad range of parameters. These instruments&nbsp;record data 24 hours per day to control operations. When the process operates effectively, all values fall within a very narrow band. All these values are stored by the SCADA system for typically a year, after which they are destroyed to save storage space.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Water treatment plants measure <a href=""https://en.wikipedia.org/wiki/Turbidity"" rel=""noopener"">turbidity</a> (clarity of the water) to assess the effectiveness of filtration.&nbsp;The code snippet below simulates the measurements from a turbidity instrument at a water treatment plant over five hours. The code simulates measurements from a turbidity instrument at a water treatment plant over a period of five hours. Most water quality data has a log-normal distribution with a narrow standard deviation. You can download the latest version of this code on <a href=""https://github.com/pprevos/hydroinformatics/blob/master/SCADA/virtual_tags.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">set.seed(1234)
n &lt;- 300
wtp &lt;- data.frame(DateTime = seq.POSIXt(ISOdate(1910, 1, 1), length.out = n, by = 60),
                  WTP = rlnorm(n, log(.1), .01))
library(ggplot2)
p &lt;- ggplot(wtp, aes(x = DateTime, y = WTP)) + 
         geom_line(colour = ""grey"") +
         ylim(0.09, 0.11) + 
         ylab(&amp;quot;Turbidity&amp;quot;) + 
         ggtitle(""Turbidity simulation"")
p
[/code]</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":827,""width"":486,""height"":309} -->
<div class=""wp-block-image""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/07/Turbidity.png"" alt=""Simulated turbidity"" class=""wp-image-827"" width=""486"" height=""309""/></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>SCADA Historian</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The data generated by the SCADA system is used to take operational decisions. The data is created and structured to make decisions in the present, not to solve problems in the future. SCADA Historian systems archive this information for future analysis. Historian systems only store new values when the new reading is more or less than a certain percentage than the previous one. This method saves storage space without sacrificing much accuracy.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For example, when an instrument reads 0.20 and the limit is set at 5%, new values are only recorded when they are below 0.19 or above 0.21. Any further values are stored when they deviate 5% from the new value, and so on. The code snippet below simulates this behaviour, based on the simulated turbidity readings generated earlier. This Historian only stores the data points marked in black.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">threshold &lt;- 0.03
h &lt;- 1 # First historised point

wtp$historise &lt;- FALSE
wtp$historise[c(1, n)] &lt;- TRUE # Testing for delta &gt; threshold
for (i in 2:nrow(wtp)) {
    delta &lt;- wtp$WTP[i] / wtp$WTP[h] 
    if (delta &gt; (1 + threshold) | delta &lt; (1 - threshold)) {
        wtp$historise[i] &lt;- TRUE
        h &lt;- i
    }
}
historian &lt;- subset(wtp, historise == TRUE)
historian$Source &lt;- ""Historian""
p &lt;- p + geom_point(data = historian, aes(x = DateTime, y = WTP)) +
             ggtitle(""Historised data"")
p</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":828,""width"":486,""height"":309} -->
<div class=""wp-block-image""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/07/Historian.png"" alt=""Deadbanding SCADA data"" class=""wp-image-828"" width=""486"" height=""309""/></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Virtual Tags</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This standard method to generate and store SCADA data works fine to operate systems but does not work so well when using the data for posthoc analysis. The data in Historian is an unequally-spaced time series which makes it harder to analyse the data. The Virtual Tag approach expands these unequal time series to an equally-spaced one, using constant interpolation.<br>The <code>vt</code> function undertakes the constant interpolation using the <a href=""http://astrostatistics.psu.edu/su07/R/html/stats/html/approxfun.html"" rel=""noopener"">approx function</a>. The function <code>vt</code> is applied to all the DateTime values, using the historised data points. The red line shows how the value is constant until it jumps by more than 5%. This example demonstrates that we have a steady process with some minor spikes, which is the expected outcome of this simulation.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">vt &lt;- function(t) approx(historian$DateTime, historian$WTP, xout = t, method = ""constant"")
turbidity &lt;- lapply(as.data.frame(wtp$DateTime), vt)
wtp$VirtualTag &lt;- turbidity[[1]]$y
p + geom_line(data = wtp, aes(x = DateTime, y = VirtualTag), 
              colour = ""red"") +
ggtitle(""Virtual Tags"")
p</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":829,""width"":486,""height"":309} -->
<div class=""wp-block-image""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/07/VirtualTags.png"" alt=""Example of Virtual Tags for SCADA"" class=""wp-image-829"" width=""486"" height=""309""/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>The next step in Virtual Tags is to combine the tags from different data points. For example, we are only interested in the turbidity readings when the filter was running. We can do this by combining this data with a valve status or flow in the filter.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This approach might seem cumbersome but it simplifies analysing data from Historian. Virtual Tags enables several analytical processes that would otherwise be hard to. This system also adds context to the SCADA information by linking tags to each other and the processes they describe. If you are interested in more detail, then please download the <a rel=""noopener"" href=""http://colibanwater.github.io/HBT/"">technical manual</a> for Virtual Tags and how they are implemented in SQL.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you like to learn more about using R code to solve water problems, then look at the online course R for Water Professionals.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380""/></a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->"
776,2017-06-29,The Viral Recurring Decimal: Euler Problem 26,https://lucidmanager.org/euler-problem-26/,euler-problem-26,The Devil is in the Data,Numberphile|Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>A few years ago a fraction broke the internet. What happens when you divide 1 by 998001?</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex \frac{1}{998001} = 0.000001002003004005006007008009010011012013014015 \ldots $</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>What is special about this fraction is that it lists every three-decimal number except for 998. Look carefully at the sequence to see that is 000, 001, 0002, 003, 004, 005 and so on. After it has reached 999, the sequence continues from the start. This fraction thus has 2997 recurring decimals. James Grime from <a href=""http://www.numberphile.com/"" rel=""noopener"">Numberphile</a> explains this mathematical oddity with his usual enthusiasm.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=daro6K6mym8"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=daro6K6mym8
</div><figcaption>998,001 an its mysterious recurring decimals - Numberphile.</figcaption></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>The decimal fraction of 1/998001 is a <a rel=""noopener"" href=""https://en.wikipedia.org/wiki/Repeating_decimal"">recurring decimal</a>. These are decimal numbers with periodic digits (repeating its values at regular intervals). Euler problem 26 asks us to analyse recurring decimals (reciprocal cycles). This Euler Problem also looks at fractions and <a href=""https://lucidmanager.org/euler-problem-33-ford-circles/"">Ford Circles</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 26 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>A unit fraction contains 1 in the numerator. The decimal representation of the unit fractions with denominators 2 to 10 are given:<br>$latex 1/2 = 0.5 $<br>$latex 1/3 = 0.(3) $<br>$latex 1/4 = 0.25 $<br>$latex 1/5 = 0.2 $<br>$latex 1/6 = 0.1(6) $<br>$latex 1/7 = 0.(142857) $<br>$latex 1/8 = 0.125 $<br>$latex 1/9 = 0.(1) $<br>$latex 1/10 = 0.1 $</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Where 0.1(6) means 0.166666…, and has a 1-digit recurring cycle. It can be seen that 1/7 has a 6-digit recurring cycle. Find the value of d &lt; 1000 for which 1/d contains the longest recurring cycle in its decimal fraction part.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href=""https://oeis.org/A051626"" target=""_blank"" rel=""noopener noreferrer"">A051626</a> describes the length of the recurring numbers in 1/n in the&nbsp;<em>On-Line Encyclopaedia of Integer Sequences</em>. To solve Euler Problem 26, we need to generate the first 1000 numbers of this sequence and find out which number has the longest recurring cycle.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>R can only display up to 22 decimals by using <code>options(digits=22)</code>.&nbsp;The base R capability is unsuitable for solving this problem, so I wrote some code to perform long division the old-fashioned way.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The <code>recur</code> function divides 1 by any arbitrary integer. The code continues until the decimal terminates, for example 1/4 = 0.25, or when a recurring pattern emerges, e.g. 1/7 = 0.(142857).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The function has two arguments: <code>n</code> is the input number. The <code>output</code> argument determines the outcome of the function: ""len"" for the length of the recurring decimals. Any other value shows the result of the calculation. The output of the function is a string. Using the European notation, the recurring part of the decimals is shown between brackets, e.g. 1/14 =&nbsp;0.0(714285).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>You can view the code below or download the latest version from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem026.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">recur &lt;- function(x, output = """") {
    # Prepare variable
    if (x == 0) return(NaN)
    if (x == 1) return(0)
    x &lt;- floor(abs(x))
    # Initiate vectors to store decimals and remainders
    dec &lt;- vector()
    rem &lt;- vector()
    # Initiate values
    i &lt;- 1
    r &lt;- 10
    rem &lt;- r
    # Long division
    repeat {
        dec[i] &lt;- floor(r / x)
        r &lt;- 10 * (r %% x)
        # Test wether the number is terminating or repeating
        if (r == 0 | r %in% rem) break
        rem[i + 1] &lt;- r
        i &lt;- i + 1 
    }
    # Determine number of recurring digits
    rep &lt;- ifelse(r != 0, length(rem) - which(r == rem) + 1, 0)
    # Output
    if (output == ""len"")
        return(rep)
    else {
        if (rep != 0) {
            if (rep == length(dec)) 
                l &lt;- ""(""
            else
                l &lt;- c(dec[1:(length(dec) - rep)], ""("")
            dec &lt;- c(l, dec[(length(dec) - rep + 1):length(dec)], "")"")
        }
        return(paste0(""0."", paste0(dec, collapse = """", sep = """")))
        }
}

A051626 &lt;- sapply(1:1000, recur, ""len"")
answer &lt;- which.max(A051626)
print(answer)

recur(998001, ""len"")
recur(998001)</pre>
<!-- /wp:enlighter/codeblock -->"
809,2017-08-31,Pacific Island Hopping using R and iGraph,https://lucidmanager.org/pacific-island-hopping/,pacific-island-hopping,The Devil is in the Data,geocode|Map Porn|Network Analysis|R Language,"<!-- wp:paragraph -->
<p>Last month I enjoyed a relaxing holiday in the <a href=""https://horizonofreason.com/vanuatu-sand-drawings-sandroing/"" rel=""noopener"">tropical paradise of Vanuatu</a>. One rainy day I contemplated how to go island hopping across the Pacific ocean visiting as many island nations as possible. The Pacific ocean is a massive body of water between, Asia and the Americas, which covers almost half the surface of the earth. The southern Pacific is strewn with island nations from Australia to Chile. In this post, I describe how to use R to plan your next&nbsp;Pacific island hopping journey. View the latest version of this code on <a href=""https://github.com/pprevos/geography/"" rel=""noopener"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center""} -->
<div class=""wp-block-image""><figure class=""aligncenter""><img src=""https://upload.wikimedia.org/wikipedia/commons/thumb/5/54/Oceania_UN_Geoscheme_Regions.svg/800px-Oceania_UN_Geoscheme_Regions.svg.png"" alt=""Pacific Island hopping"" /><figcaption>The Pacific Ocean.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Listing all airports</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>My first step was to create a list of flight connections between each of the island nations in the Pacific ocean. I am not aware of a publically available data set of international flights so unfortunately, I created the list manually by collecting route maps on <a href=""https://www.pinterest.com.au/HorizonOfReason/pacific-island-hopping/"" target=""_blank"" rel=""noopener noreferrer"">Pinterest</a> (if you do know of a fomal data set with international flights, then please leave a comment).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>My manual research resulted in a list of <a href=""https://github.com/pprevos/geography/blob/master/pacific_flights.csv"" rel=""noopener"">international flights from or to island airports</a>. This list might not be complete, but it is a start. My Pinterest&nbsp;board with Pacific island airline route maps was the information source for this list.</p>
<!-- /wp:paragraph -->

<!-- wp:embed {""url"":""https://www.pinterest.com.au/HorizonOfReason/pacific-island-hopping/""} -->
<figure class=""wp-block-embed""><div class=""wp-block-embed__wrapper"">
https://www.pinterest.com.au/HorizonOfReason/pacific-island-hopping/
</div></figure>
<!-- /wp:embed -->

<!-- wp:paragraph -->
<p>The first code section reads the list of airline routes and uses the ggmap package to extract their coordinates from Google maps. You will need a Google API to enable the <a href=""https://lucidmanager.org/geocoding-with-ggmap/"">geocoding function</a>. The data frame with airport coordinates is saved for future reference to avoid repeatedly pinging Google for the same information.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(ggmap)
library(ggplot2)
library(ggrepel)
library(geosphere)
library(tidyverse)

## Read flight list and airport list
flights &lt;- read_csv(""PacificFlights.csv"")
f &lt;- ""pacific_airports.csv""
if (file.exists(f)) {
airports &lt;- read.csv(f)
} else
airports &lt;- data.frame(airport = NA, lat = NA, lon = NA)

## Lookup coordinates for new airports
all_airports &lt;- unique(c(flights$From, flights$To))
new_airports &lt;- all_airports[!(all_airports %in% airports$airport)]
while (length(new_airports) != 0) {
coords &lt;- geocode(new_airports)
temp_airports &lt;- data.frame(airport = new_airports, coords)
airports &lt;- rbind(airports, temp_airports) %&gt;%
filter(!is.na(lat), !is.na(lon))
new_airports &lt;- all_airports[!(all_airports %in% airports$airport)]
}
write_csv(airports, f)

# Add coordinates to flight list
flights &lt;- merge(flights, airports, by.x = ""From"", by.y = ""airport"")
flights &lt;- merge(flights, airports, by.x = ""To"", by.y = ""airport"")</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Create the map</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To create a map, I modified the code to create <a href=""https://lucidmanager.org/create-air-travel-route-maps/"">flight maps</a> I published in an earlier post. This code had to be changed to centre the map on the Pacific.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Mapping the Pacific ocean is problematic because the -180 and +180 degree meridians meet around the dateline.&nbsp;Longitudes west of the antemeridian are positive, while longitudes east are negative. The world2 data set in the borders function of the ggplot2 package is centred on the Pacific ocean. To enable plotting on this map, all negative longitudes are made positive by adding 360 degrees to them and <a href=""https://lucidmanager.org/mapping-antipodes/"">defining </a>the antipode.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">airports$airport &lt;- as.character(airports$airport)
comma &lt;- regexpr("","", airports$airport) airports$airport[which(comma &gt; 0)] &lt;- substr(airports$airport[which(comma &gt; 0)], 1, comma[comma &gt;; 0] - 1)

# Pacific centric
flights$lon.x[flights$lon.x &lt; 0] &lt;- flights$lon.x[flights$lon.x &lt; 0] + 360
flights$lon.y[flights$lon.y &lt; 0] &lt;- flights$lon.y[flights$lon.y &lt; 0] + 360
airports$lon[airports$lon &lt; 0] &lt;- airports$lon[airports$lon &lt; 0] + 360

# Plot flight routes
worldmap &lt;- borders(""world"", fill = ""grey"") # create a layer of borders
ggplot() + worldmap +
    geom_point(data=airports, aes(x = lon, y = lat), col = ""#970027"") +
    geom_text_repel(data=airports, aes(x = lon, y = lat, label = airport), col = ""black"", size = 2, segment.color = NA) +
    geom_curve(data=flights, aes(x = lon.x, y = lat.x, xend = lon.y, yend = lat.y, col = Airline), size = 1, curvature = .2) +
    xlim(90, 300) + ylim(-50, 50) +
    theme_void()</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":836,""className"":""size-full wp-image-836""} -->
<div class=""wp-block-image size-full wp-image-836""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/08/pacifc_flights.png"" alt=""Pacific island hopping - flight route map."" class=""wp-image-836"" /><figcaption>Pacific island hopping - flight route map.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Pacific Island Hopping</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This visualisation is aesthetic and full of context, but it is not the best visualisation to solve the travel problem. This map can also be expressed as a graph with nodes (airports) and edges (routes). Once the map is represented mathematically, we can generate travel routes and begin our Pacific Island hopping.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The igraph package converts the flight&nbsp;list to a graph that can be analysed and plotted. The <code>shortest_path</code> function can then be used to plan routes. If I would want to travel from Auckland to Saipan in the Northern Mariana Islands, I have to go through Port Vila, Honiara, Port Moresby, Chuuk, Guam and then to Saipan. I am pretty sure there are quicker ways to get there, but this would be an exciting journey through the Pacific.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(igraph)
g &lt;- graph_from_edgelist(as.matrix(flights[,1:2]), directed = FALSE)
par(mar = rep(0, 4))
plot(g, layout = layout.fruchterman.reingold, vertex.size = 0)
shortest_paths(g, ""Auckland"", ""Saipan"")</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":982,""className"":""size-full wp-image-982""} -->
<div class=""wp-block-image size-full wp-image-982""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/08/PacificNetwork.png"" alt=""Pacific island hopping - network model"" class=""wp-image-982"" /><figcaption>Pacific island hopping - network model</figcaption></figure></div>
<!-- /wp:image -->"
840,2017-08-24,Digit fifth powers: Euler Problem 30,https://lucidmanager.org/euler-problem-30/,euler-problem-30,The Devil is in the Data,Numberphile|Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler problem 30 is another number crunching problem that deals with numbers to the power of five. Two other Euler problems dealt with&nbsp;raising numbers to a power. The <a href=""https://lucidmanager.org/euler-problem-29-distinct-powers/"">previous problem</a> looked at permutations of powers and <a href=""https://lucidmanager.org/euler-problem-16-power-digit-sum/"">problem 16</a> asks for the sum of the digits of $latex 2^{1000}$. Euler Problem 24 discusses <a href=""https://lucidmanager.org/euler-problem-24/"">lexicographic permutations</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 30 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Surprisingly there are only three numbers that can be written as the sum of fourth powers of their digits:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex 1634 = 1^4 + 6^4 + 3^4 + 4^4$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex 8208 = 8^4 + 2^4 + 0^4 + 8^4$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex 9474 = 9^4 + 4^4 + 7^4 + 4^4$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>As $latex 1 = 1^4 $ is not a sum, it is not included.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The sum of these numbers is $latex 1634 + 8208 + 9474 = 19316$. <a href=""https://projecteuler.net/problem=30"" target=""_blank"" rel=""noopener noreferrer"">Find the sum</a> of all the numbers that can be written as the sum of the fifth powers of their digits.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Digit Sum</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The mathematics in this problem is about the digit sum, which is the sum of all digits in the relevant number base.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The digit sum of a number $latex x$ in base 10 is given by:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex \sum_{n=0}^{\lfloor \log_{10} x\rfloor} \frac{1}{10^n}(x \bmod 10^{n + 1} - x \bmod 10^n) &amp;s=2$.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Computer scientists use digit sums in cryptography and data validation. You can find the digital sum base-10 numbers in the Online Encyclopedia of Integer&nbsp;Sequences (<a rel=""noopener noreferrer"" href=""http://oeis.org/A007953"" target=""_blank"">A007953</a>).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Checksum algorithms use digit sums as a quality assurance method. For example, the final digit in the ten-digit International Standard Book Numbers (<a rel=""noopener noreferrer"" href=""https://isbn-information.com/check-digit-for-the-13-digit-isbn.html"" target=""_blank"">ISBN</a>) is a check digit. You can compute the check digit by multiplying each digit by its position in the ISBN number (alternating by 3 and 1), and taking the sum of these products. The check digit is 0 when the modules 10 of this modulus is zero, otherwise it is 10 minus the remainder. In R code, determining the check digit for a 13-digit ISBN number works as follows:</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">check_isbn13 &lt;- function(isbn) {
    isbn &lt;- gsub("" |-"", """", isbn)
    check_sum &lt;- 0
    for (i in 1:12) {
        m &lt;- ifelse(i %% 2 == 0, 3, 1)
        check_sum &lt;- check_sum + m * as.numeric(substr(isbn, i, i))
    }
    check_sum &lt;- ifelse(check_sum %% 10 == 0, 0, 10 - check_sum %% 10)
    check_sum == substr(isbn, 13, 13)
}
check_isbn13(""978-0-9875669-4-2"")</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Proposed Solution to Euler Problem 30</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The problem asks for a brute-force solution but we have a halting problem. How far do we need to go before we can be certain there are no sums of fifth power digits? Do we need to search until infinity, which means we can never solve the problem? We can limit the solution space because the solution will have lower and upper limits. The upper bound is a number $latex a \cdot 9^5 $ with $latex a $ digits.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In base ten, the highest digit is $latex 9$ and $latex 9^5=59049$, which has five digits. This implies that&nbsp;the highest possible number which equals the sum of the fifth power of its digits is $latex 5 times 9^5=295245$. The lowest possible number is $latex 2 times 2^5 = 64$. All numbers with this property thus must range between these two values.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The code to solve this project first declares the exponent and determines the lower and upper boundaries of the solution space. Change the variable $latex n$ to try other exponents. The loop cycles through the digits of each number and tests whether the sum of the fifth powers equals the number. You can view the code below or download it from&nbsp;<a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem030.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">m &lt;- 5
highest &lt;- round(log10(9^m)) * 9^m
answer &lt;- 0
for (x in 2:highest) {
    n &lt;- 0:log10(x)
    power.sum &lt;- sum(((1/10^n) * (x %% 10^(n + 1) - x %% 10^n))^m)
    if (power.sum == x) {
        print(x)
        answer &lt;- answer + x
    }
}
print(answer)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>With the Fifth Power Comes Great Responsibility</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p><a href=""https://lucidmanager.org/tag/numberphile/"">Numberphile</a> has a nice video about a trick to quickly calculate the fifth root of a number that makes you look like a mathematical wizard. Not quite related to this problem, but nevertheless interesting.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=y8acoaakvPM"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=y8acoaakvPM
</div></figure>
<!-- /wp:core-embed/youtube -->"
938,2017-09-21,Pandigital Products: Euler Problem 32,https://lucidmanager.org/euler-problem-32-pandigital-products/,euler-problem-32-pandigital-products,The Devil is in the Data,Numberphile|Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 32 returns to <a href=""https://lucidmanager.org/euler-problem-29-distinct-powers/"">pandigital numbers</a>, which are numbers that contain one of each digit. Like so many of the Euler Problems, these numbers serve no practical purpose whatsoever. Just like <a href=""https://lucidmanager.org/euler-problem-4/"">palindromic products</a>, other than some entertainment value and increasing your understanding of numbers.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>You can find all pandigital numbers in base-10 in the Online Encyclopedia of Integers (<a href=""https://oeis.org/A050278"" rel=""noopener"">A050278</a>). The Numberphile video explains everything you ever wanted to know about pandigital numbers but were afraid to ask.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=gaVMrqzb91w\u0026t=9s"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=gaVMrqzb91w&amp;t=9s
</div><figcaption>Why 381,654,729 is awesome - Numberphile.</figcaption></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Euler Problem 32 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>We shall say that an <em>n</em>-digit number is pandigital if it makes use of all the digits 1 to <em>n</em> exactly once; for example, the 5-digit number, 15234, is 1 through 5 pandigital.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The product 7254 is unusual, as the identity, 39 × 186 = 7254, containing multiplicand, multiplier, and product is 1 through 9 pandigital.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Find the sum of all products whose multiplicand/multiplier/product identity can be written as a 1 through 9 pandigital.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>HINT: Some products can be obtained in more than one way so be sure to only include it once in your sum.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Proposed Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The <code>pandigital.9</code> function tests whether a string classifies as a pandigital number. The <code>pandigital.prod</code><br>
vector stores the multiplication.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The only way to solve this problem is by brute force and try all multiplications. We can limit the solution space to a manageable number. The multiplication needs to have ten digits. For example, when the starting number has two digits, the second number should have three digits so that the total has four digits, e.g.: 39 × 186 = 7254. When the first number only has one digit, the second number needs to have four digits.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>You can view the code below or download the most recent version from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem032.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">pandigital.9 &lt;- function(x) # Test if string is 9-pandigital
    (length(x)==9 &amp; sum(duplicated(x))==0 &amp; sum(x==0)==0)

pandigital.prod &lt;- vector()
i &lt;- 1
for (m in 2:100) {
    if (m &lt; 10) 
        n_start &lt;- 1234 
    else 
        n_start &lt;- 123
    for (n in n_start:round(10000 / m)) {
        # List of digits
        digs &lt;- as.numeric(unlist(strsplit(paste0(m, n, m * n), """")))
        # is Pandigital?
        if (pandigital.9(digs)) {
            pandigital.prod[i] &lt;- m * n
            i &lt;- i + 1
            print(paste(m, ""*"", n, ""="", m * n))
        }
    }
}
answer &lt;- sum(unique(pandigital.prod))
print(answer)

largest &lt;- 6 * 9^5
answer &lt;- 0
for (n in 2:largest) {
    power.sum &lt;- 0
    i &lt;- n
    while (i > 0) {
        d &lt;- i %% 10
        i &lt;- floor(i / 10)
        power.sum &lt;- power.sum + d^5
    }
    if (power.sum == n) {
        answer &lt;- answer + n
    }
}
print(answer)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->"
1049,2018-01-31,Simulating Water Consumption to Develop Analysis and Reporting,https://lucidmanager.org/simulating-water-consumption/,simulating-water-consumption,The Devil is in the Data,Hydroinformatics|R Language,"<!-- wp:paragraph -->
<p>I am currently working on developing analytics for a digital water metering project. Over the next five years, we are enabling 70,000 customer water meters with digital readers and transmitters.&nbsp;The data is not yet available but we don't want to wait to build reporting systems until after the data is live. The R language comes to the rescue as it has magnificent capabilities to simulate&nbsp;data. Simulating data is a useful technique to progress a project when data is being collected. Simulated data also helps because the outcomes of the analysis are known, which helps to validate the outcomes.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The raw data that we will eventually receive from the digital customer meters has the following basic structure:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><em>DevEUI</em>: Unique device identifier.</li><li><em>Timestamp</em>: Date and time in (UTC) of the transmission.</li><li><em>Cumulative count</em>: The number of revolutions the water meter&nbsp;makes. Each revolution&nbsp;is a pulse which equates to five litres of water.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Every device will send an hourly data burst which contains the cumulative meter read in pulse counts. The transmitters are set at a random offset from the whole our, to minimise the risk of congestion at the receivers. The time stamp for each read is set in the <a href=""https://en.wikipedia.org/wiki/Coordinated_Universal_Time"">Coordinated Universal Time</a> (UTC). Using this time zone prevents issues with daylight savings. All analysis will be undertaken in the Australian Eastern (Daylight) Time zone.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This article explains how we simulated test data to assist with developing reporting and analysis. The analysis of digital metering data follows in a future post. The code and the data can be found on <a href=""https://github.com/pprevos/hydroinformatics/tree/master/WaterFlow/PhuTho"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>. I have recently converted to using the <a href=""https://www.tidyverse.org/"" target=""_blank"" rel=""noopener noreferrer"">Tidyverse</a> for all my R coding. It has made my working life much easier and I will use it for all future posts.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Simulating water consumption</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For simplicity, this simulation assumes a standard domestic diurnal curve (average daily usage pattern) for indoor water use. Diurnal curves are an important piece of information in water management. The curve shows water consumption over the course of a day, averaged over a fixed period. The example below is sourced from a journal article.&nbsp;This generic diurnal curve consists of 24 data points based on measured indoor water consumption, shown in the graph below.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center""} -->
<div class=""wp-block-image""><figure class=""aligncenter""><a href=""http://www.sciencedirect.com/science/article/pii/S0921344914001347""><img src=""https://ars.els-cdn.com/content/image/1-s2.0-S0921344914001347-gr8.jpg"" alt=""Simulating water consumption: diurnal curve example""/></a><figcaption>Source: Gurung et al. (2014)&nbsp;Smart meters for enhanced water supply network modelling and infrastructure planning.&nbsp;Resources, Conservation and Recycling (90), 34-50.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>This diurnal curve only includes indoor water consumption and is assumed to be independent of seasonal variation. This is not a realistic assumption, but the purpose of this simulation is not to accurately model water consumption but to provide a data set to validate the reporting and analyses.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Simulating water consumption in R</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The first code snippet sets the parameters used in this simulation. The unique device identifiers (DevEUI) are simulated as six-digit random numbers. The timestamps vector consists of hourly date-time variables in UTC. For each individual transmitter, this timestamp is offset by a random time. Each transmitter is also associated with the number of people living in each house. This number is based on a Poisson distribution.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(tidyverse)
## Boundary conditions
n &lt;- 100 # Number of simulated meters
d &lt;- 100 # Number of days to simulate
s &lt;- as.POSIXct(""2020-01-01"", tz = ""UTC"") # Start of simulation

set.seed(1969) # Seed random number generator for reproducibility
rtu &lt;- sample(1E6:2E6, n, replace = FALSE) # 6-digit id
offset &lt;- sample(0:3599, n, replace = TRUE) # Unique Random offset for each RTU

## Number of occupants per connection
occupants &lt;- rpois(n, 1.5) + 1
as.data.frame(occupants) %&gt;%
    ggplot(aes(occupants)) + 
        geom_bar(fill = ""dodgerblue2"", alpha = 0.5) +
        xlab(""Occupants"") + 
        ylab(""Connections"") + 
        ggtitle(""Occupants per connection"")</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":1112,""width"":502,""height"":323,""className"":""size-full wp-image-1112""} -->
<div class=""wp-block-image size-full wp-image-1112""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/01/occupants-1.png"" alt=""Simulated number of occupants per connection."" class=""wp-image-1112"" width=""502"" height=""323""/><figcaption>Simulated number of occupants per connection.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>The diurnal curve is based on actual data which includes leaks as the night time use shows a consistent flow of about one litre per hour. For that reason, the figures are rounded and reduced by one litre per hour, to show a zero flow when people are usually asleep. The curve is also shifted by eleven hours because the raw data is stored in UTC.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">diurnal &lt;- round(c(1.36, 1.085, 0.98, 1.05, 1.58, 3.87, 9.37, 13.3, 12.1, 10.3, 8.44, 7.04, 6.11, 5.68, 5.58, 6.67, 8.32, 10.0, 9.37, 7.73, 6.59, 5.18, 3.55, 2.11)) - 1

data.frame(TimeUTC = 0:23, Flow = diurnal) %&gt;%
    ggplot(aes(x = TimeUTC, y = Flow)) +
        geom_area(fill = ""dodgerblue2"", alpha = 0.5) +
        scale_x_continuous(breaks = 0:23) + ylab(""Flow [L/h/p]"") +
        ggtitle(""Idealised diurnal curve for households"")

tdiff &lt;- 11
diurnal &lt;- c(diurnal[(tdiff + 1): 24], diurnal[1:tdiff])</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>This simulation only aims to simulate a realistic data set and not to present an accurate depiction of reality. This simulation could be enhanced by using different diurnal curves for various customer segments and to include outdoor watering, temperature dependencies and so on.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Simulating Water Consumption</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>A leak is defined by a constant flow through the meter, in addition to the idealised diurnal curve. A weighted binomial distribution (θ = 0.1) models approximately one in ten properties with a leak. The size of the leak is derived from a random number between 10 and 50 litres per hour.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The data is stored in a matrix through a loop that cycles through each connection. The DevEUI is repeated over the simulated time period (24 times the number of days). The second variable is the timestamp plus the predetermined offset for each RTU. The meter count is defined by the cumulative sum of the diurnal flow, multiplied by the number of occupants. Each point in the diurnal deviates from the model curve by ±10%. Any predetermined leakage is added to each meter read over the whole period of 100 days. The hourly volumes are summed cumulatively to simulate meter reads. The flow is divided by five as each meter revolution indicate five litres.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The next code snippet simulates the digital metering data using the assumptions and parameters outlined above.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">leaks &lt;- rbinom(n, 1, prob = .1) * sample(10:50, n, replace = TRUE) data.frame(DevEUI = rtu, Leak = leaks) %&gt;%
subset(Leak &gt; 0)

## Digital metering data simulation
meter_reads &lt;- matrix(ncol = 3, nrow = 24 * n * d)
colnames(meter_reads) &lt;- c(""DevEUI"", ""TimeStampUTC"" , ""Count"")

for (i in 1:n) {
    r &lt;- ((i - 1) * 24 * d + 1):(i * 24 * d)
    meter_reads[r, 1] &lt;- rep(rtu[i], each = (24 * d))
    meter_reads[r, 2] &lt;- seq.POSIXt(s, by = ""hour"", length.out = 24 * d) + offset[i]
    meter_reads[r, 3] &lt;- round(cumsum((rep(diurnal * occupants[i], d) + leaks[i]) *
        runif(24 * d, 0.9, 1.1))/5)
}

meter_reads &lt;- meter_reads %&gt;%
    as_data_frame() %&gt;%
    mutate(TimeStampUTC = as.POSIXct(TimeStampUTC, origin = ""1970-01-01"", tz = ""UTC""))</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Missing Data Points</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The data transmission process is not 100% reliable and the base station will not receive some reads. This simulation identifies reads to be removed from the data through the temporary variable remove. This simulation includes two types of failures:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Faulty RTUs (2% of RTUs with missing 95% of data)</li><li>Randomly missing data points (1% of data)</li></ul>
<!-- /wp:list -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">meter_reads &lt;- mutate(meter_reads, remove = 0)
## Define faulty RTUs (2% of fleet)
faulty &lt;- rtu[rbinom(n, 1, prob = 0.02) == 1]
meter_reads$remove[meter_reads$DevEUI %in% faulty] &lt;- rbinom(sum(meter_reads$DevEUI %in% faulty), 1, prob = .95)

## Data loss
missing &lt;- sample(1:(nrow(meter_reads) - 5), 0.005 * nrow(meter_reads))
for (m in missing){
    meter_reads[m:(m + sample(1:5, 1)), ""remove""] &lt;- 1
}

# Remove data points
meter_reads &lt;- filter(meter_reads, remove == 0) %&gt;%
    select(-remove)

#Visualise
filter(meter_reads, DevEUI %in% rtu[2]) %&gt;%
    mutate(TimeStampAEST = as.POSIXct(format(TimeStampUTC,
           tz = ""Australia/Melbourne""))) %&gt;%
    filter(TimeStampAEST &gt;= as.POSIXct(""2020-02-06"") &amp;
           TimeStampAEST &lt;= as.POSIXct(""2020-02-08"")) %&gt;%
    arrange(DevEUI, TimeStampAEST) %&gt;%
    ggplot(aes(x = TimeStampAEST, y = Count, colour = factor(DevEUI))) +
        geom_line() + 
        geom_point()</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>The graph shows an example of the cumulative reads and some missing data points.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":1117,""className"":""size-full wp-image-1117""} -->
<div class=""wp-block-image size-full wp-image-1117""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/01/consumption.png"" alt=""Simulated water consumption"" class=""wp-image-1117""/><figcaption>Simulated water consumption (red: measured points, blue: interpolated points.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p><span style=""color: #666666;font-size: 1.25rem"">Analysing Digital Metering Data</span></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Data simulation is a good way to develop your analysis algorithms before you have real data. I have also used this technique when I was waiting for survey results during my dissertation. When the data finally arrived, I simply had to plug it into the code and finetune the code. R has great capabilities to simulate reality to help you understand the data. The ggplot package provides excellent functionality to <a href=""https://lucidmanager.org/geographic-bubble-chart/"">visualise water consumption</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In <a href=""https://lucidmanager.org/digital-water-meter-data/"">next week's article</a>, I will outline how I used R and the Tidyverse package to develop libraries to analyse digital metering data.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380""/></a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->"
1107,2018-05-17,Laser Beams and Elliptical Billiards: Euler Problem 144,https://lucidmanager.org/euler-problem-144/,euler-problem-144,The Devil is in the Data,Numberphile|Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler problem 144 has been one of the most fun to solve. The underlying problem is the pathway of the reflection of a laser inside an ellipse-shaped mirror. Before I delve into this problem, I like to share this delightful video from <a href=""http://www.numberphile.com/"" rel=""noopener"">Numberphile</a> in which Alex Bellos demonstrates an elliptical billiards table. The billiards problem is mathematically equivalent to the laser problem. The reflection rule optics is the same as the bouncing rule in mechanics, but instead of using light, we use a billiard ball.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https:\/\/www.youtube.com\/watch?v=4KHCuXN2F3I"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=4KHCuXN2F3I
</div><figcaption>Elliptical Pool Table - Numberphile.</figcaption></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>This article outlines my solution to Euler problem 104 and simulates the elliptical pool table in the R language. You can find the code on the <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem144.R"" rel=""noopener"">GitHub repository</a> for this website.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 144 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In laser physics, a “white cell” is a mirror system that acts as a delay line for the laser beam. The beam enters the cell, bounces around on the mirrors, and eventually works its way back out.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The specific white cell we will be considering is an ellipse with the equation $latex 4x^2 + y^2= 100$.&nbsp;The section corresponding to $latex -0.01 \leq \times \leq +0.01$ at the top is missing, allowing the light to enter and exit through the hole.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center""} -->
<div class=""wp-block-image""><figure class=""aligncenter""><img src=""https://projecteuler.net/project/images/p144_1.png"" alt=""Euler Problem 144"" /><figcaption>White cell.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>The light beam in this problem starts at the point (0.0,10.1) just outside the white cell, and the beam first impacts the mirror at (1.4,-9.6). Each time the laser beam hits the surface of the ellipse, it follows the usual law of reflection ""angle of incidence equals the angle of reflection."" That is, both the incident and reflected beams make the same angle with the normal line at the point of incidence. In the figure on the left, the red line shows the first two points of contact between the laser beam and the wall of the white cell; the blue line shows the line tangent to the ellipse at the point of incidence of the first bounce. The slope $latex m$ of the tangent line at any point $latex (x,y)$ of the given ellipse is&nbsp;$latex m = -4x/y$. The normal line is perpendicular to this tangent line at the point of incidence.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>How many times does the beam hit the internal surface of the white cell before exiting?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Proposed Solution to Euler Problem 144</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The first step was to rewrite the equation to use functions to generalise the problem. The general Cartesian equation for an ellipse is:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex \frac{x^2}{a^2} + \frac{y^2}{b^2} = 1, a &lt; b$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The length of the axes for this problem is $latex a =5$ and $latex b = 10$. While the Project Euler description gives the formula for the slope of the tangent to the ellipse, I have generalised the code to reuse it for the elliptical billiards table. The slope of the tangent to an ellipse at point $latex (x,y)$ is:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex m=-\frac{b^2x}{a^2y}$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This first code snippet defines functions to draw an ellipse and calculate the bouncing angle. The last part of the code bounces the laser inside the cell until it exits through the top.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>I sourced the formula to find the intersection between a line and an ellipse from <a href=""http://www.ambrsoft.com/TrigoCalc/Circles2/Ellipse/EllipseLine.htm"" rel=""noopener"">Ambrsoft</a>. The equation has two possible solutions, one of which is the same as the original point.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">plot_ellipse &lt;- function(a, b, colour = NA, line = ""black"") {
    plot.new()
    plot.window(xlim = c(-a, a), ylim = c(-b, b), asp = 1)
    par(mar = rep(0,4))
    x &lt;- seq(-a, a, length = 200)
    y &lt;- sqrt(b^2 - (b^2 / a^2) * x^2)
    lines(x, y, col = line)
    lines(x, -y, col = line)
    polygon(x, y, col = colour, border = NA)
    polygon(x, -y, col = colour, border = NA)
}

bounce &lt;- function(coords) {
    x &lt;- coords$x
    y &lt;- coords$y
    ## Tangent to ellipse
    t &lt;- -(b^2 / a^2) * (x[2] / y[2])
    ## Deflection on sloping mirror y = mx + c
    dydx &lt;- diff(y) / diff(x)
    m &lt;- tan(pi - atan(dydx) + 2 * atan(t))
    c &lt;- y[2] - m * x[2]
    ## Determine intersection point
    ## Source: http://www.ambrsoft.com/TrigoCalc/Circles2/Ellipse/EllipseLine.htm
    x[1] &lt;- x[2]
    y[1] &lt;- y[2]
    x2 &lt;- (-a^2 * m * c + c(-1, 1) * (a * b * sqrt(a^2 * m^2 + b^2 - c^2))) /
          (a^2 * m^2 + b^2)
    x[2] &lt;- ifelse(round(x[1] / x2[1], 6) == 1, x2[2], x2[1])
    y[2] &lt;- m * x[2] + c
    return(data.frame(x, y))
}

# Initial conditions
a &lt;- 5
b &lt;- 10
x1 &lt;- 0
y1 &lt;- 10.1
x2 &lt;- 1.4
y2 &lt;- -9.6
answer &lt;- 0
plot_ellipse(a, b)
points(c(0,0), c(-c, c), pch = 19)
## Bounce laser breams
laser &lt;- data.frame(x = c(x1, x2), y = c(y1, y2))
while((laser$x[2] &lt; -0.01 | laser$x[2] &gt; 0.01) | laser$y[2] &lt; 0) { ## Escape?
    lines(laser$x, laser$y, col = ""red"", lwd = .5)
    laser &lt;- bounce(laser)
    answer &lt;- answer + 1
}
print(answer)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>The result of this code is a pretty image of all the laser beams that have bounced around the mirror, which looks like the evil <a href=""http://lotr.wikia.com/wiki/Eye_of_Sauron"" rel=""noopener"">Eye of Sauron</a> in Lord of the Rings.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":1245,""className"":""wp-image-1245 size-full""} -->
<div class=""wp-block-image wp-image-1245 size-full""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/05/problem144-e1527980101662.png"" alt=""Graphical solution to Euler problem 144"" class=""wp-image-1245"" /><figcaption>Graphical solution to Euler problem 144.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Elliptical Pool Table</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>We can use the solution to Euler problem 144 to play billiards on an elliptical billiards table. To close the article, we return to the elliptical pool table demonstrated by Alex Bellos. This code draws the pool table to the dimensions mentioned in the video. We know that the table has an eccentricity of $latex e = 0.43$ and a long axis of $latex a = 130$ cm. The code defines the short axis ($latex b$) and the distance of the focal points from the centre.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The code selects a random starting point and angle of the shot. The code first determines whether the line passes through the pocket. If this is not the case, the algorithm then finds the place where the ball hits and keeps bouncing it until it falls into the pocket or the ball bounces 100 times.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Elliptical billiard tables have four possible outcomes. Any ball the pass through a focal point will fall into the pocket, ending the simulation. Any ball that passes outside the focal points will bounce around, and the combined trajectories form an ellipse. When the ball moves between the foci, the result is a hyperbola. Lastly, there are some unique circumstances which result in a regular polygon.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If simulations are not enough for you, then head over to the <a href=""http://www.instructables.com/id/Elliptical-Pool-Table/"" rel=""noopener"">Instructables</a> website to find out how you can construct an&nbsp;elliptical billiards table. There is even a patent for an <a href=""https://patents.google.com/patent/US5226644"" rel=""noopener"">elliptical pocket billiard table</a>, with the pockets at the edge.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":1290,""className"":""size-full wp-image-1290""} -->
<div class=""wp-block-image size-full wp-image-1290""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/05/epilliptical_billiards.png"" alt=""Elliptical billiards: Three simulations."" class=""wp-image-1290"" /><figcaption>Elliptical billiards: Three simulations.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">## https://www.youtube.com/watch?time_continue=54&amp;v=4KHCuXN2F3I
e &lt;- 0.43
a &lt;- 130
b &lt;- a * sqrt((1 + e) * (1 - e)) # a &gt; b
f &lt;- sqrt(a^2 - b^2)
plot_ellipse(a, b, ""darkgreen"", NA)
points(-f, 0, pch = 19, cex = 2)
points(f, 0, pch = 19, col = ""grey"")

## Simulate random shot
angle &lt;- runif(1, 0, 2 * pi)
x1 &lt;- runif(1, -a, a)
ymax &lt;- sqrt(b^2 - (b^2 / a^2) * x1^2)
y1 &lt;- runif(1, -ymax, ymax)

## First shot
m &lt;- tan(angle)
c &lt;- y1 - m * x1
x2 &lt;- (-a^2 * m * c + c(-1, 1) * (a * b * sqrt(a^2 * m^2 + b^2 - c^2))) / (a^2 * m^2 + b^2)
y2 &lt;- m * x2 + c
x2 &lt;- x2[which(((x2 - x1) &lt; 0) == (cos(angle) &lt; 0))]
y2 &lt;- y2[which(((y2 - y1) &lt; 0) == (sin(angle) &lt; 0))]
shot &lt;- (data.frame(x = c(x1, x2), y = c(y1, y2)))

## Bounce ball
for (i in 1:100){
    dydx &lt;- diff(shot$y) / diff(shot$x)
    if (all.equal(dydx, (shot$y[1] - 0) / (shot$x[1] - -f)) == TRUE) {
        shot[2, ] &lt;- c(-f, 0)
    }
    lines(shot$x, shot$y, col = ""yellow"", lwd = 1)
    if (shot[2,2] == 0) break
    shot &lt;- bounce(shot)
}
points(x1, y1, pch = 19, col = ""blue"", cex = 1.8)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380"" /></a><figcaption> <strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong> </figcaption></figure>
<!-- /wp:image -->"
1125,2018-02-07,Analysing Digital Water Meter Data using the Tidyverse,https://lucidmanager.org/digital-water-meter-data/,digital-water-meter-data,The Devil is in the Data,Hydroinformatics|R Language,"<!-- wp:paragraph -->
<p>In <a href=""https://lucidmanager.org/simulating-water-consumption/"">last week's article</a>, I discussed how to simulate water consumption data to help develop analytics and reporting. This post describes how to create a diurnal curve from standard digital metering data. The code for this article is available on <a href=""https://github.com/pprevos/hydroinformatics/tree/master/WaterFlow/PhuTho"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Data Source</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The simulated data consists&nbsp; of three fields:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><em>DevEUI</em>: Unique identifier of the digital water meter.</li><li><em>Timestamp</em>&nbsp;in <a href=""https://en.wikipedia.org/wiki/Coordinated_Universal_Time"" target=""_blank"" rel=""noopener noreferrer"">Coordinated Universal Time</a></li><li>Cumulative <em>count</em> of pulses.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>All analysis is undertaken in the local Australian Eastern Standard Time (AEST). The input to all functions is thus in AEST.&nbsp;The digital water meters send an hourly pulse at a random time within the hour. Each transmitter (RTU) uses a random offset to avoid network congestion. The digital meter counts each time the impeller makes a full turn, and for this analysis, we assume that this equates to a five-litre volume. The ratio between volume and count depends on the meter brand and type. The image below shows a typical data set for an RTU, including some missing data points.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":1117,""className"":""size-full wp-image-1117""} -->
<div class=""wp-block-image size-full wp-image-1117""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/01/consumption.png"" alt=""Simulated water consumption"" class=""wp-image-1117""/><figcaption>Simulated water consumption (red: measured points, blue: interpolated points.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>To analyse the data we need two auxiliary functions: one to slice the data we need and one to interpolate data for the times we need it. The <a href=""https://www.tidyverse.org/"" target=""_blank"" rel=""noopener noreferrer"">Tidyverse</a> heavily influences the code in this article. I like the Tidyverse way of doing things because it leads to elegant code that is easy to understand.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(tidyverse)
library(lubridate)
library(magrittr)
meter_reads &lt;- read.csv(""meter_reads.csv"")
rtu &lt;- unique(meter_reads$DevEUI)
meter_reads$TimeStampUTC &lt;- as.POSIXct(meter_reads$TimeStampUTC, tz = ""UTC"")</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Slicing Digital Water Metering Data</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Data analysis is undertaken on slices of the complete data set. This function slices the available data by a vector of RTU ids and a timestamp&nbsp;range in AEST. This function adds a new timestamp variable in AEST. If no date range is provided, all available data for the selected RTUs is provided. The output of this function is a data frame (a Tibble in Tydiverse language).</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">slice_reads &lt;- function(rtus, dates = range(meter_reads$TimeStampUTC)) {
    filter(meter_reads, DevEUI %in% rtus) %&gt;%
    mutate(TimeStampAEST = as.POSIXct(format(TimeStampUTC, tz = ""Australia/Melbourne""))) %&gt;%
    filter(TimeStampAEST &gt;= as.POSIXct(dates[1]) &amp;
           TimeStampAEST &lt;= as.POSIXct(dates[2])) %&gt;%
    arrange(DevEUI, TimeStampAEST)
}</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Interpolation of Meter Reads</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This function interpolates the cumulative counts for a series of RTUs over a vector of timestamps in AEST. The function creates a list to store the results for each RTU, interpolates the data using the <a href=""https://stat.ethz.ch/R-manual/R-devel/library/stats/html/approxfun.html"" target=""_blank"" rel=""noopener noreferrer"">approx function</a> and then flattens the list back to a data frame. The interpolation function contains a different type of pipe because of the approx for interpolation function does not take a data argument. The <code>%$%</code> pipe from the Magrittr<a href=""https://cran.r-project.org/web/packages/magrittr/README.html"" target=""_blank"" rel=""noopener noreferrer""> package</a> solves that problem.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The output is a data frame with DevEUI, the timestamp in AEST and the interpolated cumulative count. The image above shows the counts for two meters over two days an the graph superimposes an interpolated point over the raw data. Although the actual data consists of integer counts, interpolated values are numeric values. The decimals are retained to distinguish them from real reads.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">interpolate_count &lt;- function(rtus, timestamps) {
    timestamps &lt;- as.POSIXct(timestamps, tz = ""Australia/Melbourne"")
    results &lt;- vector(""list"", length(rtus))
    for (r in seq_along(rtus)) {
        interp &lt;- slice_reads(rtus[r]) %$%
        approx(TimeStampAEST, Count, timestamps)
        results[[r]] &lt;- data_frame(DevEUI = rep(rtus[r], length(timestamps)),
                                   TimeStampAEST = timestamps, Count = interp$y)
    }
    return(do.call(rbind, results))
}

interpolate_count(rtu[2:3], seq.POSIXt(as.POSIXct(""2020-02-01""), as.POSIXct(""2020-02-2""), by = ""day""))

slice_reads(rtu[2], c(""2020-02-06"", ""2020-02-08"")) %&gt;%
    ggplot(aes(x = TimeStampAEST, y = Count)) +
        geom_line(col = ""grey"", size = 1) +
        geom_point(col = ""red"") +
        geom_point(data = interpolate_count(rtu[2],
                   as.POSIXct(""2020-02-06"") + (0:2) * 24 * 3600), colour = ""blue"") +
        ggtitle(paste(""DevEUI"", rtu[2]))</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>With these two auxiliary functions, we can start analysing the data.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Daily Consumption</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Daily consumption for each connection is a critical metric in managing water resources and billing customers.&nbsp;The daily consumption of any water connection is defined by the difference between the cumulative counts at midnight. The interpolation function makes it easy to determine daily consumption. This function interpolates the midnight reads for each of the RTUs over the period, starting the previous day. The output of the function is a data frame that can be piped into the plotting function to visualise the data. When you group the data by date, you can also determine the total consumption over a group of services.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">daily_consumption &lt;- function(rtus, dates) {
    timestamps &lt;- seq.POSIXt(as.POSIXct(min(dates)) - 24 * 3600, as.POSIXct(max(dates)), by = ""day"")
    interpolate_count(rtus, timestamps) %&gt;%
        group_by(DevEUI) %&gt;%
        mutate(Consumption = c(0, diff(Count)) * 5,
               Date = format(TimeStampAEST, ""%F"")) %&gt;%
        filter(TimeStampAEST != timestamps[1]) %&gt;%
        select(DevEUI, Date, Consumption)
}

daily_consumption(rtu[32:33], c(""2020-02-01"", ""2020-02-7"")) %&gt;%
    ggplot(aes(x = Date, y = Consumption)) + geom_col() +
        facet_wrap(~DevEUI) +
        theme(axis.text.x = element_text(angle = 90, hjust = 1))</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":1153,""width"":502,""height"":323,""className"":""size-full wp-image-1153""} -->
<div class=""wp-block-image size-full wp-image-1153""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/02/daily-1.png"" alt=""Analysing digital water meter data: Daily consumption."" class=""wp-image-1153"" width=""502"" height=""323""/><figcaption>Analysing digital water meter data: Daily consumption.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Diurnal Curves</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The diurnal curve is one of the most important pieces of information used in the design of water supply systems. This curve shows the usage of one or more services for each hour in the day. This curve is a reflection of human behaviour, as we use most water in the morning and the evenings.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This function slices data for a vector of RTUs over a period and then plots the average diurnal curve. The data is obtained by interpolating the cumulative counts for each whole hour in the period. The function then calculates the flow in litres per hour and visualises the minimum, mean and maximum value.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">plot_diurnal_connections &lt;- function(rtus, dates) {
    timestamps &lt;- seq.POSIXt(as.POSIXct(dates[1]), as.POSIXct(dates[2]), by = ""hour"")
    interpolate_count(rtus, timestamps) %&gt;%
        mutate(Rate = c(0, diff(Count * 5)),
               Hour = as.integer(format(TimeStampAEST, ""%H""))) %&gt;%
        filter(Rate &gt;= 0) %&gt;%
        group_by(Hour) %&gt;%
        summarise(min = min(Rate), mean = mean(Rate), max = max(Rate)) %&gt;%
        ggplot(aes(x = Hour, ymin = min, ymax = max)) +
            geom_ribbon(fill = ""lightblue"", alpha = 0.5) +
            geom_line(aes(x = Hour, y = mean), col = ""orange"", size = 1) +
            ggtitle(""Connections Diurnal flow"") +
            ylab(""Flow rate [L/h]"")
}

plot_diurnal_connections(rtu[12:20], c(""2020-02-01"", ""2020-03-01""))</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Boxplots are also an informative way to visualise this curve. This method provides more statistical information on one page, and the ggplot function performs the statistical analysis.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":1151,""width"":512,""height"":330,""className"":""wp-image-1151 size-large""} -->
<div class=""wp-block-image wp-image-1151 size-large""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/02/diurnal_line-1024x659.png"" alt=""Analysing digital water meter data: Diurnal curve."" class=""wp-image-1151"" width=""512"" height=""330""/><figcaption>Analysing digital water meter data: Diurnal curve.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">plot_diurnal_box &lt;- function(rtus, dates) {
    timestamps &lt;- seq.POSIXt(as.POSIXct(dates[1]), as.POSIXct(dates[2]), by = ""hour"")
    interpolate_count(rtus, timestamps) %&gt;%
        mutate(Rate = c(0, diff(Count * 5)),
               Hour = as.integer(format(TimeStampAEST, ""%H""))) %&gt;%
        filter(Rate &gt;= 0) %&gt;%
        group_by(Hour) %&gt;%
        ggplot(aes(x = factor(Hour), y = Rate)) +
            geom_boxplot() +
            ggtitle(""Diurnal flow"") +
            ylab(""Flow rate [L/h]"") +
            xlab(""Time"")
}
plot_diurnal_box(rtu[12:20], c(""2020-02-01"", ""2020-03-01""))</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":1152,""width"":512,""height"":330,""className"":""size-large wp-image-1152""} -->
<div class=""wp-block-image size-large wp-image-1152""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/02/diurnal_box-1024x659.png"" alt=""Analysing digital water meter data: Diurnal curve."" class=""wp-image-1152"" width=""512"" height=""330""/><figcaption>Analysing digital water meter data: Diurnal curve.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Further Analysing Digital Water Metering Data</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>These are only glimpses into what is possible with this type of data.&nbsp;Further algorithms need to be developed to extract additional value from this data. I am working on developing leak detection algorithms and clustering diurnal curves, daily consumption graphs&nbsp;and so on. Any data science enthusiast&nbsp;who is interested in helping me to develop an Open Source R library to analyse digital metering data.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380""/></a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->"
1129,2018-02-21,Topological Tomfoolery in R: Plotting a Möbius Strip and Klein Bottle,https://lucidmanager.org/plotting-mobius-strip/,plotting-mobius-strip,The Devil is in the Data,Numberphile|R Language,"<!-- wp:paragraph -->
<p>Geometry is an entertaining branch of mathematics. Topology is, according to <a href=""http://www.pickover.com/"">Clifford Pickover</a>, the ""silly putty of mathematics"". This branch of maths studies the transformation of shapes, knots and other complex geometry problems.&nbsp; One of the most famous topics in topology is the <a href=""https://en.wikipedia.org/wiki/M%C3%B6bius_strip"" rel=""noopener"">Möbius strip</a>. This shape has some unusual properties which have inspired many artists, inventors, mathematicians and magicians.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>You can make a Möbius strip by taking a strip of paper, giving it one twist and glue the ends together to form a loop. If you now cut this strip lengthwise in half, you don't end-up with two separate strips, but with one long one.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://youtu.be/wKV0GYvR2X8"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://youtu.be/wKV0GYvR2X8
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>The Möbius strip can also be described with the following parametric equations (where $latex 0 \leq u \leq 2\pi $, $latex -1 \leq v \leq 1 $ and $latex R $ is the radius of the loop):</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex x(u,v)= \left(R+\frac{v}{2} \cos \frac{u}{2}\right)\cos u $<br>$latex y(u,v)= \left(R+\frac{v}{2} \cos\frac{u}{2}\right)\sin u $<br>$latex z(u,v)= \frac{v}{2}\sin \frac{u}{2} $</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The <a href=""https://math.stackexchange.com/questions/638225/understanding-the-equation-of-a-m%C3%B6bius-strip"" rel=""noopener"">mathematics of this set of parametric equations</a> is not as complex as it looks. $latex R $ is the radius of the ring, $latex u $ is the polar angle of each point and $latex v $ indicates the width of the strip. The polar angle $latex u/2 $ indicates the number of half twists. To make the ring twist twice, change the angle to $latex u $.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For my data science day job, I have to visualise some three-dimensional spaces, so I thought I best learn how to do this by visualising a Möbius strip, using these three equations.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Plotting a Möbius Strip</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The <a href=""https://cran.r-project.org/web/packages/rgl/vignettes/rgl.html"" rel=""noopener"">RGL package</a> provides the perfect functionality for plotting Möbius strips. This package produces interactive three-dimensional plots that you can zoom and rotate. This package has many options to change lighting, colours, shininess&nbsp;and so on. The code to create for plotting a Möbius strip is straightforward.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The first section defines the parameters and converts the $latex u $ and $latex v $ sequences to a mesh (from the <a href=""https://cran.r-project.org/web/packages/plot3D/index.html"">plot3D package</a>). This function creates two matrices with every possible combination of $latex u $ and $Latex v $ which are used to calculate the $latex x, y, z $ points.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The last three lines define a 3D window with a white background and plot the 3D surface in blue. You can explore the figure with your mouse by zooming and rotating it. Parametric equations can be a bit of fun, play with the formula to change the shape and see what happens. You can view the code below, or find the latest version on <a href=""https://github.com/pprevos/r.prevos.net/blob/master/Miscellaneous/Mathematics/moebius.R"" rel=""noopener"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(rgl)
library(plot3D)

## Define Parameters
R &lt;- 1 # Radius
n &lt;- 1 # Number of twists
u &lt;- seq(0, 2 * pi, length.out = 100)
v &lt;- seq(-1, 1, length.out = 100)
m &lt;- mesh(u, v)
u &lt;- m$x
v &lt;- m$y

## Möbius Strip parametric equations
x &lt;- (R * 2 + v/2 * cos(n * u /2)) * cos(u)
y &lt;- (R + v/2 * cos(n * u /2)) * sin(u)
z &lt;- v/2 * sin(u / 2)

## Visualise
bg3d(color = ""white"")
surface3d(x, y, z, color= ""blue"")</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":7900} -->
<div class=""wp-block-image""><figure class=""aligncenter""><a href=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/02/moebius-strip.jpg""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/02/moebius-strip.jpg"" alt=""Plotting a Möbius Strip in R with RGL"" class=""wp-image-7900"" /></a><figcaption>Plotting a Möbius Strip in R with RGL</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>We can take it to the next level by plotting a three-dimensional Möbius strip, or a <a href=""https://en.wikipedia.org/wiki/Klein_bottle"">Klein Bottle</a>. The parametric equations for the bottle are mind boggling:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex x(u,v) = -\frac{2}{15} \cos u (3 \cos{v}-30 \sin{u}+90 \cos^4{u} \sin{u} -60 \cos^6{u} \sin{u} +5 \cos{u} \cos{v} \sin{u}) $</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex y(u,v) = -\frac{1}{15} \sin u (3 \cos{v}-3 \cos^2{u} \cos{v}-48 \cos^4{u} \cos{v} + 48 \cos^6{u} \cos{v} - 60 \sin{u}+5 \cos{u} \cos{v} \sin{u}-5 \cos^3{u} \cos{v} \sin{u}-80 \cos^5{u} \cos{v} \sin{u}+80 \cos^7{u} \cos{v} \sin{u}) $</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex z(u,v) = \frac{2}{15} (3+5 \cos{u} \sin{u}) \sin{v} $</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Where: $latex 0 \leq u \leq \pi$ and $latex 0 \leq v \leq 2$.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The code to visualise this bottle is essentially the same, just more complex equations.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">## Klein Bottle (3D Möbius Strip)
u &lt;- seq(0, pi, length.out = 100)
v &lt;- seq(0, 2 * pi, length.out = 100)
m &lt;- mesh(u, v)
u &lt;- m$x
v &lt;- m$y
x &lt;- (-2 / 15) * cos(u) * (3 * cos(v) - 30 * sin(u) + 90 * cos(u)^4 * sin(u) - 
     60 * cos(u)^6 * sin(u) + 5 * cos(u) * cos(v) * sin(u))
y &lt;- (-1 / 15) * sin(u) * (3 * cos(v) - 3 * cos(u)^2 * cos(v) - 48 * cos(u)^4 * 
     cos(v) + 48 * cos(u)^6 * cos(v) - 60 * sin(u) + 5 * cos(u) * cos(v) * 
     sin(u) - 5 * cos(u)^3 * cos(v) * sin(u) - 80 * cos(u)^5 * cos(v) * sin(u) + 
     80 * cos(u)^7 * cos(v) * sin(u))
z &lt;- (+2 / 15) * (3 + 5 * cos(u) * sin(u)) * sin(v)

bg3d(color = ""white"")
surface3d(x, y, z, color= ""green"", alpha = 0.5)</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":7898} -->
<div class=""wp-block-image""><figure class=""aligncenter""><a href=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/02/klein-bottle.jpg""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/02/klein-bottle-1024x787.jpg"" alt=""Plotting a Klein bottle in R using RGL"" class=""wp-image-7898"" /></a><figcaption>Plotting a Klein bottle in R using RGL</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>The RGL package has some excellent facilities to visualise&nbsp;three-dimensional objects, far beyond simple strips. I am still learning and am working toward using it to visualise bathymetric surveys of water reservoirs. Möbius strips are, however, a lot more fun.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you are interested in visualising the oddities of mathematics, then feel free to peruse my article about the <a href=""https://lucidmanager.org/sierpinski-triangle/"">Sierpinsi triangle</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Creating Real Möbius Strips</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Even more fun than playing with virtual Möbius strips is to make some paper versions and start cutting. If you like to create a Möbius strip, you can recycle then purchase a large zipper from your local haberdashery shop, add some hook-and-loop fasteners to the ends and start playing. If you like to know more about the mathematics of the topological curiosity, then I can highly recommend <a href=""http://amzn.to/2EeXJgI"" rel=""noopener"">Clifford Pickover's book on the topic</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In the first half of the twentieth century, many magicians used the Möbius strip as a magic trick. The great Harry Blackstone performed it regularly in his show.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://youtu.be/J__QN5XTTv8?t=26s"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-4-3 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-4-3 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://youtu.be/J__QN5XTTv8?t=26s
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>If you are interested in magic tricks and Möbius strips, including how to create a zipper version, then you can read my ebook on the Afghan bands.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""linkDestination"":""custom""} -->
<div class=""wp-block-image""><figure class=""aligncenter""><a href=""https://magicperspectives.net/afghan-bands/"" rel=""noopener""><img src=""https://magicperspectives.net/wp-content/blogs.dir/2/files/sites/2/2018/08/Afghan-Bands-3d.jpg"" alt=""The Möbius Strip in Magic. A Treatise on the Afghan Bands"" /></a></figure></div>
<!-- /wp:image -->"
1194,2018-03-28,Tap Water Sentiment Analysis using Tidytext,https://lucidmanager.org/tap-water-sentiment-analysis/,tap-water-sentiment-analysis,The Devil is in the Data,Digital Humanities|Hydroinformatics|R Language,"<!-- wp:paragraph -->
<p>In developed countries, tap water is safe to drink and available for a meagre price. Despite the fact that high-quality drinking water is almost freely available, the consumption of bottled water is increasing every year. Bottled water companies use sophisticated marketing strategies, while water utilities are mostly passive providers of public service. Australian marketing expert Russell Howcroft even called water utilities ""lazy marketers"". Can we use sentiment analysis to find out more about how people feel about tap water. What can we learn about the reasons behind this loss in trust in the municipal water supply?</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=Cg9YH4bm2Sk"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-4-3 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-4-3 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=Cg9YH4bm2Sk
</div><figcaption>Gruen Transfer (2009).</figcaption></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>This tap water sentiment analysis estimates the attitudes people have towards tap water by analysing tweets. This article explains how to examine tweets about tap water using the R language and the <a rel=""noopener"" href=""https://www.tidytextmining.com/sentiment.html"">Tidytext package</a>. The most recent version of the code and the raw data set can be viewed on my <a rel=""noopener noreferrer"" href=""https://github.com/pprevos/hydroinformatics/tree/master/Customers"" target=""_blank"">GitHub page</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Sentiment Analysis</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Sentiment provides an indication of the perception a group of people has about a certain topic. Traditionally, assessing the sentiment of a group of people requires surveys or interviews. These methods are problematic because it creates an artificial environment where the respondent often answers to meet the perceived expectations of the survey, or customers exaggerate to get their point across. Using sentiment analysis of ego-documents written by consumers can overcome these problems. Ego-documents, i.e. forms of personal writing, are a more direct way to find out what consumers think, but they are not easy to obtain and analyse.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>With the advent of social media, access to ego documents has become much simpler and many tools exist to collect and interpret this data. Using ego-documents brings you closer to the consumer than can be possible with surveys or focus groups. One medium gaining popularity with market researchers is <a title=""Twitter"" href=""http://twitter.com/"">Twitter</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Tap Water Sentiment Analysis</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Each tweet that contains the words ""tap water"" contains a message about the attitude the author has towards that topic. Each text expresses a sentiment about the topic it describes. <a href=""https://en.wikipedia.org/wiki/Sentiment_analysis"" rel=""noopener"">Sentiment analysis</a> is a data science technique that extracts subjective information from a text. The basic method compares a string of words with a set of words with&nbsp;calibrated&nbsp;sentiments. These calibrated sets are created by asking many people how they feel about a certain word. For example, the word ""stink"" expresses a negative sentiment, while the word ""nice"" would be a positive sentiment.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This tap water sentiment analysis consists of three steps. The first step extracts 1000 tweets that contain the words ""tap water"" from Twitter. The second step cleans the data, and the third step undertakes the analysis visualises the results.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The <a rel=""noreferrer noopener"" aria-label="" (opens in a new tab)"" href=""https://sites.google.com/view/watercoinzerocom/home"" target=""_blank"">Water Data Aggregator</a> is a commercial application of sentiment analysis for tap water. This website sells the regional social credit score to interested parties. </p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Extracting tweets using the&nbsp;TwitteR&nbsp;package</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The <a href=""https://cran.r-project.org/web/packages/twitteR/index.html"" rel=""noopener"">TwitteR package</a> by Geoff Gentry makes it very easy to retrieve tweets using search criteria. You will need to create an API on Twitter to receive the keys and tokens. In the code below, the actual values have been removed. Follow the instructions in <a href=""https://www.r-bloggers.com/setting-up-the-twitter-r-package-for-text-analytics/"" rel=""noopener"">this article</a> to obtain these codes for yourself. This code snippet calls a private file to load the API codes, extracts the tweets and creates a data frame with a tweet id number and its text.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">library(tidyverse)
library(tidytext)
library(twitteR)

source(""twitteR_API.R"")
setup_twitter_oauth(api_key, api_secret, token, token_secret)

tapwater_tweets &lt;- searchTwitter(""tap water"", n = 1000, lang = ""en"") %>%
  twListToDF() %>%
  select(id, text)
tapwater_tweets &lt;- subset(tapwater_tweets, !duplicated(tapwater_tweets$text))
tapwater_tweets$text &lt;- gsub(""’"", ""'"", tapwater_tweets$text)

write_csv(tapwater_tweets, ""Hydroinformatics/tapwater_tweets.csv"")</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>When I first extracted these tweets, a tweet by CNN about <a href=""https://edition.cnn.com/2018/03/30/health/kentucky-water-crisis/index.html"" rel=""noopener"">tap water in Kentucky that smells like diesel</a> was retweeted many times, so I removed all duplicate tweets from the set. Unfortunately, this left less than 300 original tweets in the corpus.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/twitter {""url"":""https://twitter.com/CNN/status/979946657101045760"",""type"":""rich"",""providerNameSlug"":""twitter"",""className"":""""} -->
<figure class=""wp-block-embed-twitter wp-block-embed is-type-rich is-provider-twitter""><div class=""wp-block-embed__wrapper"">
https://twitter.com/CNN/status/979946657101045760
</div></figure>
<!-- /wp:core-embed/twitter -->

<!-- wp:heading -->
<h2>Sentiment analysis with Tidytext</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Text analysis can be a powerful tool to help to analyse large amounts of text. The R language has an extensive range of packages to help you undertake such a task.&nbsp;The <a href=""https://www.tidytextmining.com/"">Tidytext</a> package extends the <a href=""http://vita.had.co.nz/papers/tidy-data.html"" rel=""noopener"">Tidy Data</a> logic promoted by Hadley Wickham and his Tidyverse software collection.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":3} -->
<h3>Data Cleaning</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The first step in cleaning the data is to create unigrams, which involves splitting the tweets into individual words that can be analysed. The first step is to look at which words are most commonly used in the tap water tweets and visualise the result. The most common words related to drinking the water and to bottled water, which makes sense. Also the recent issues in Kentucky feature in this list.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":1202,""width"":878,""height"":645,""className"":""size-full wp-image-1202""} -->
<div class=""wp-block-image size-full wp-image-1202""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/04/tapwater_words.png"" alt=""Most common words in tweets about tap water."" class=""wp-image-1202"" width=""878"" height=""645""/><figcaption>Most common words in tweets about tap water.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">tidy_tweets &lt;- tapwater_tweets %>%
  unnest_tokens(word, text)

data(stop_words)
tidy_tweets &lt;- tidy_tweets %>%
  anti_join(stop_words) %>%
    filter(!word %in% c(""tap"", ""water"", ""rt"", ""https"", ""t.co"", ""gt"", ""amp"",
                        as.character(0:9)))

tidy_tweets %>%
  count(word, sort = TRUE) %>%
  filter(n > 5) %>%
  mutate(word = reorder(word, n)) %>%
  ggplot(aes(word, n)) + geom_col(fill = ""dodgerblue4"") +
    xlab(NULL) + coord_flip() +
    ggtitle(""Most common words in tap water tweets"")</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading {""level"":3} -->
<h3>Sentiment Analysis</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The Tidytext package contains three lexicons of thousands of single English words (unigrams) that were manually assessed for their sentiment.&nbsp;The principle of the sentiment analysis is to compare the words in the text with the words in the lexicon and analyse the results. For example, the statement: ""This tap water tastes horrible"" has a sentiment score of -3 in the AFFIN system by&nbsp;<a href=""http://www2.imm.dtu.dk/pubdb/views/publication_details.php?id=6010"">Finn Årup Nielsen</a>&nbsp;due to the word ""horrible"". In this analysis, I have used the ""bing"" method published by <a rel=""noopener noreferrer"" href=""https://www.cs.uic.edu/~liub/FBS/sentiment-analysis.html"" target=""_blank"">Liu et al. in 2005</a>. This method simply assigns a word to either positive, negative or neutral sentiment.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This method is certainly not fool proof as words with the same spelling can mean different things. For example, the phrase: ""This tap water contains too much lead"" will be assess as a positive sentiment because the verb lead is seen as positive. The noun lead has no sentiment as it depends on context.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The other problem with sentiment analysis is that we tend  to only see negative commentary. Very few people ever contact a water utility about the great morning shower or wonderful glass of water. Tap water resides in the background of everyday life and people don't have any opinion about it unless it is not available or does not meet their aesthetic expectations.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This tap water sentiment analysis shows that two-thirds of the words that express a sentiment were negative. The most common negative words were ""smells"" and ""scared"". This&nbsp;analysis is not a positive result for water utilities. Unfortunately, most tweets were not spatially located so I couldn't determine the origin of the sentiment.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":1203,""width"":600,""height"":645,""className"":""size-full wp-image-1203""} -->
<div class=""wp-block-image size-full wp-image-1203""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/04/tapwater_sentiment.png"" alt=""Tap water sentiment analysis."" class=""wp-image-1203"" width=""600"" height=""645""/><figcaption>Tap water sentiment analysis.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">sentiment_bing &lt;- tidy_tweets %>%
  inner_join(get_sentiments(""bing""))
sentiment_bing %>%
  summarise(Negative = sum(sentiment == ""negative""), 
            positive = sum(sentiment == ""positive""))
sentiment_bing %>%
  group_by(sentiment) %>%
  count(word, sort = TRUE) %>%
  filter(n >= 2) %>%
  ggplot(aes(word, n, fill = sentiment)) + geom_col(show.legend = FALSE) + 
    coord_flip() + facet_wrap(~sentiment, scales = ""free_y"") + 
    ggtitle(""Contribution to sentiment"") + xlab(NULL) + ylab(NULL)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Using Tap Water Sentiment Analysis</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Sentiment analysis is an interesting exploration technique, but it is not an absolute truth. This method is not able to detect sarcasm or irony, and words don't always have the same meaning as described in the dictionary. For example, the algorithm interprets the word ""lead"" as positive sentiment in its function as a verb. In water, however, the chemical lead is never a positive sentiment. Interpreting tweets as bags of words is interesting, but can lead to misunderstanding of the context.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The important message for water utilities is that they need to start taking the aesthetic properties of tap water as serious as the health parameters. A lack of trust will drive consumers to bottled water, or less healthy alternatives such as soft drinks are alternative water sources.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If you like to know more about customer perceptions of tap water, then read my book <i>Customer Experience Management for Water Utilities</i> by <a rel=""noopener noreferrer"" href=""https://www.iwapublishing.com/books/9781780408668/customer-experience-management-water-utilities-marketing-urban-water-supply"" target=""_blank"">IWA Publishing</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380""/></a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->"
1219,2018-04-19,Approximations of Pi: A Random Walk though the Beauty of Pi,https://lucidmanager.org/approximations-of-pi/,approximations-of-pi,The Devil is in the Data,Numberphile|R Language,"<!-- wp:paragraph -->
<p>Off all thinkable numbers, Pi has somewhat of celebrity status. It is so famous it even has its holiday. Mathematicians who use the American way to write dates recognise March the 14th as Pi Day. Some authors have even assigned a mystical status to the number of Pi.&nbsp;In the novel <a href=""https://www.bookdepository.com/Contact-Carl-Sagan/9781857235807?a_aid=horizonofreason"" rel=""noopener""><em>Contact</em> by Carl Sagan</a>, the heroine Ellie discovers a hidden message in the base-11 representation of Pi. In the 1998 film <a href=""http://www.imdb.com/title/tt0138704/"" rel=""noopener"">Pi by&nbsp;</a><span class=""itemprop"">Darren Aronofsky, the protagonist is driven mad by the idea that a <a href=""https://horizonofreason.com/pi-approximation-day/"" rel=""noopener"">secret pattern </a>in random numbers. The string of numbers that form the decimals of Pi might seem random, but they are of course perfectly predictable and calculable.&nbsp;</span>Their apparent randomness can create artful visualisations.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This article discusses some approximations of Pi using the R language and visualises the results. The video below is an ode to the aesthetic beauty of the digits of Pi by Numberphile.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=NPoj8lk9Fo4"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=NPoj8lk9Fo4
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Approximations of Pi</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>My favourite approximation of Pi has served me well through the early part of my engineering career. When using calculators that did not have a button for $latex \pi $, I used <code>22/7</code>. It is only accurate to two decimals, but that is more than enough for dredging projects.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The base R language can provide 22 decimals of Pi using <code>options(digits = 22)</code>.&nbsp;If you need more accuracy, then the <a href=""https://cran.r-project.org/web/packages/Rmpfr/index.html"" target=""_blank"" rel=""noopener noreferrer"">MPFR package</a> in R provides a library for multiple-precision floating-point computations. The <code>Const</code> function can compute Pi to a high level of precision with thousands of digits.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(rmpfr)
pi_mpfr &lt;- Const(""pi"", prec = 200000)</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>There are also more creative ways to determine the number Pi using Monte Carlo simulations. Imagine you are terribly bored, sitting inside a room with floorboards. You decide to take a match with length&nbsp;$latex l&amp;s=1$ and the floorboards are $latex t&amp;s=1$ wide. The needle is half the length of the width of the floorboards ($latex t/l = 2&amp;s=1$). You drop the matchstick randomly for about ten million times ($latex n=10,000,000&amp;s=1$) and you record every time the needle crosses the groove of one of the boards ($latex o&amp;s=1$). This thought experiment is known as <a href=""https://en.wikipedia.org/wiki/Buffon%27s_needle"" target=""_blank"" rel=""noopener noreferrer"">Buffon's needle</a>. The number Pi can be approximated by:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex \pi \approx \frac{c \cdot l}{o \cdot t} &amp;s=3$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This bit of code simulates dropping the needle ten million times, which gives an estimated value of $latex \pi \approx 3.143096 &amp;s=1$. You would have to be extremely bored to throw a needle that many times to only achieve ccuracy to two decimals!</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">t &lt;- 2
l &lt;- 1
n &lt;- 10000000

needles &lt;- data_frame(phi = runif(n, 0, 2 * pi),
           x1 = runif(n, 0, (l + 3)), 
           y1 = runif(n, 0, (l + 3)),
           x2 = x1 + l * sin(phi),
           y2 = y1 + l * cos(phi), 
           overlap = (x1 &lt; 1 &amp; x2 &gt; 1) | (x1 &lt; 3 &amp; x2 &gt; 3))

ggplot(needles[1:1000,], aes(x1, y1)) + 
  geom_segment(aes(xend = x2, yend = y2, colour = overlap)) + 
  geom_vline(xintercept = c(1, 3), colour = ""red"") +
  scale_color_manual(values = c(""gray"", ""black"")) + 
  theme_void() 
ggsave(""Misc/buffon.png"", dpi = 300)

pi_buffon &lt;- (n * l) / (sum(needles$overlap) * t)</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":1226,""className"":""size-full wp-image-1226""} -->
<div class=""wp-block-image size-full wp-image-1226""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/04/buffon.png"" alt=""Visualising Buffon's Needle thought experiment."" class=""wp-image-1226"" /><figcaption>Visualising Buffon's Needle thought experiment.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Visualising the approximations of Pi</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In 1888, the John Venn, inventor of the eponymous Venn diagram, wanted to visualise the apparent randomness of the digits of Pi.&nbsp;He obtained the first 707 digits of Pi from amateur mathematician William Shanks. Unfortunately, only the first 527 decimals of Pi were correct but this was only discovered in 1944. Venn assigned a compass point to the digits 0 to 7 and then drew lines to show the path indicated by each digit, ignoring the digits 8 and 9.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Running through the values of Pi this way produces a line that snakes its way through the graph. When you use random numbers with the same method, the graph looks very similar. In this case, I have downloaded the digits of Pi from the <em>On-Line Encyclopedia of Integer Sequences</em> (Nr. <a href=""http://oeis.org/A000796"" rel=""noopener"">A000796</a>).</p>
<!-- /wp:paragraph -->

<!-- wp:html -->
<div class=""mceTemp"">&nbsp;</div>
<!-- /wp:html -->

<!-- wp:image {""align"":""center"",""id"":4229,""className"":""size-full wp-image-4229""} -->
<div class=""wp-block-image size-full wp-image-4229""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/04/venn_pi_walk.png"" alt=""A random walk through the digits of Pi - The Venn method."" class=""wp-image-4229"" /><figcaption>A random walk through the digits of Pi - The Venn method.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>The Numberphile video shows some beautiful visualisations of Pi, one of which I like to share with you to close this article.&nbsp;<a href=""http://mkweb.bcgsc.ca/pi/"">Martin Krzywinski</a>&nbsp;created this, and many other, visualisations of Pi.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":1230,""className"":""size-full wp-image-1230""} -->
<div class=""wp-block-image size-full wp-image-1230""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/04/pi_dots.png"" alt=""Approximations of Pi: Art work that visualises the random nature of the decimals of Pi"" class=""wp-image-1230"" /><figcaption>Approximations of Pi: Art work that visualises the random nature of the decimals of Pi</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>As always, you can find the latest version of this code on <a href=""https://github.com/pprevos/r.prevos.net/blob/master/Miscellaneous/Mathematics/VennPi.R"" rel=""noopener"">GitHub</a>. Feel free to subscribe to this blog if you like to receive articles in your mailbox.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">## Download Pi Digits
pi_digits &lt;- read.csv(""http://oeis.org/A000796/b000796.txt"", header = FALSE, sep = "" "", skip = 1) %&gt;%
  select(digit = V2)

## Venn walk
venn_walk &lt;- function(digits) {
  digits &lt;- digits[digits != 8 &amp; digits != 9]
  l &lt;- length(digits) - 1
  x &lt;- rep(0, l)
  y &lt;- x
  for (i in 1:l) {
    a &lt;- digits[i + 1] * pi / 4
    dx &lt;- round(sin(a))
    dy &lt;- round(cos(a))
    x[i + 1] &lt;- x[i] + dx 
    y[i + 1] &lt;- y[i] + dy
  }
  coords &lt;- data_frame(x = x, y = y)
  ggplot(coords, aes(x, y)) + 
    geom_path() + 
    geom_point(data = coords[c(1, l + 1), ], aes(x, y), colour = ""red"", size = 2) + 
    theme_void()
}
venn_walk(pi_digits)

data_frame(x = rep(1:20, 20),
           y = unlist(lapply(1:20, function(x) rep(x, 20))),
           d = pi_digits$digit[1:400]) %&gt;%
  mutate(d = factor(d)) %&gt;%
  ggplot(aes(x, y, colour = d)) + geom_point(size = 3) +
  theme_void() + 
  theme(plot.background = element_rect(fill = ""black""),
        panel.background = element_rect(fill = ""black""),
        legend.position=""none"")</pre>
<!-- /wp:preformatted -->"
1342,2018-05-31,Defining Marketing with the Rvest and Tidytext Packages,https://lucidmanager.org/marketing-wordcloud/,marketing-wordcloud,The Devil is in the Data,Digital Humanities|Marketing|R Language,"<!-- wp:paragraph -->
<p>I am preparing to facilitate another session of the marketing course for the <a href=""https://www.latrobe.edu.au/courses/mba"" rel=""noopener"">La Trobe University MBA</a>. The first lecture delves into the definition of marketing. Like most other social phenomena, marketing is tough to define. Definitions of social constructs often rely on the perspective taken by the person or group writing the definition. As such, definitions also change over time. While a few decades ago, definitions of marketing revolved around sales and advertising, <a href=""https://web.archive.org/web/20190201101014/https://www.ama.org/AboutAMA/Pages/Definition-of-Marketing.aspx"" rel=""noopener"">contemporary definitions</a> are more holistic and reference creating value.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Heidi Cohen wrote a blog post where she collated <a href=""https://heidicohen.com/marketing-definition/"" rel=""noopener"">72 definitions of marketing</a>. So rather than arguing over which definition is the best, why not use all definitions simultaneously? This article attempts to define a new definition of marketing, using a data science approach. We can use the R language to scrape the 72 definitions from Heidi's website and attempt text analysis to extract the essence of marketing from this data set.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>I have mentioned in a previous post about <a href=""https://lucidmanager.org/qualitative-data-science/"">qualitative data science</a> that automated text analysis is not always a&nbsp;useful&nbsp;method to extract meaning from a text. I decided to delve a little deeper into automated text analysis to see if we find out anything useful about marketing using the rvest and tidytext packages.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The code and analyses are shown below the slideshow. You can download the most recent version of the code from my <a rel=""noopener"" href=""https://github.com/pprevos/Marketing"">GitHub</a> Repository.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Scraping text with Rvest</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Web scraping is a technique to download data from websites where this data is not available as a clean data source. Web scraping starts with downloading the HTML code from the website and the filtering the wanted text from this file. The <a href=""https://cran.r-project.org/web/packages/rvest/"" rel=""noopener"">rvest package</a> makes this process very easy.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The code for this article uses a pipe (<code>%&gt;%</code>) with three rvest commands. The first step is to download the wanted html code from the web using the <code>read_html</code> function. The output of this function is piped to the <code>html_nodes</code> function, which does all the hard work. In this case, the code picks all lines of text that are embedded in an ordered list. You can use the <a href=""http://selectorgadget.com/"" rel=""noopener"">SelectorGadget</a> to target the text you like to scrape. The last scraping step cleans the text by piping the output of the previous commands to the <code>html_text</code> function.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The result of the scraping process is converted to a <a href=""https://tibble.tidyverse.org/"" rel=""noopener"">Tibble</a>, which is a type of data frame used in the Tidyverse. The definition number is added to the data, and the Tibble is converted to the format required by the Tidytext package. The resulting data frame is much longer than the 72 definitions because there are other lists on the page. Unfortunately, I could not find a way to filter only the 72 definitions.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(tidyverse)
library(rvest)
library(tidytext)
library(wordcloud)
library(RColorBrewer)
library(topicmodels)
lm_palette &lt;- c(""#f7881f"", ""#55ace1"",  ""#5f6c36"")

## Scrape definitions from website
definitions &lt;- read_html(""https://heidicohen.com/marketing-definition/"") %&gt;%
    html_nodes(""ol li"") %&gt;%
    html_text() %&gt;%
    as_data_frame() %&gt;%
    mutate(No = 1:nrow(.)) %&gt;%
    select(No, Definition = value)</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Tidying the Text</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The <a href=""https://www.tidytextmining.com/"" rel=""noopener"">Tidytext</a> package extends the <a href=""http://vita.had.co.nz/papers/tidy-data.html"" rel=""noopener"">tidy data</a> philosophy to a text. In this approach to text analysis, a corpus consists of a data frame where each word is a separate item. The code snippet below takes the first 72 rows, and the <code>unnest_tokens</code> function extracts each word from the 72 definitions. This function can also extract ngrams and other word groups from the text. The Tidytext package is an extremely versatile piece of software which goes far beyond the scope of this article. Julia Silge and David Robinson have written a book about <a href=""https://www.tidytextmining.com/"" rel=""noopener"">text mining</a> using this package, which provides a very clear introduction to the craft of analysing text.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The last section of the pipe removes the trailing ""s"" from each word to convert plurals into single words. The mutate function in the Tidyverse creates or recreates a new variable in a data frame.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">## bag of words
def_words &lt;- definitions[1:72, ] %&gt;%
    unnest_tokens(word, Definition) %&gt;%
    mutate(word = gsub(""s$"", """", word))</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>This section creates a data frame with two variables. The No variable indicates the definition number (1–72) and the word variable is a word within the definition. The order of the words is preserved in the row name. To check the data frame you can run <code>unique(def_words$No[which(def_words$word == ""marketing"")])</code>. This line finds all definition numbers with the word ""marketing"", wich results, as expected, in the number 1 to 72.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":7943} -->
<figure class=""wp-block-image""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2018/08/marketing-definition.png"" alt=""Defining Marketing with the Rvest and Tidytext Packages"" class=""wp-image-7943"" /></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Using Rvest and Tidytext to define marketing</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>We can now proceed to analyse the definitions scraped from the website with Rvest and cleaned with Tidytext. The first step is to create a word cloud, which is a popular way to visualise word frequencies. This code creates a data frame for each unique word, excluding the word marketing itself, and uses the wordcloud package to visualise the fifty most common words.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">word_freq &lt;- def_words %&gt;%
    anti_join(stop_words) %&gt;%
    count(word) %&gt;%
    filter(!(word %in%
             c(""marketing"", ""vice"", ""president"", ""chief"", ""executive"", ""’"")))

pdf(""marketingcloud.pdf"")
word_freq %&gt;%
    with(wordcloud(word, n, max.words = 50, rot.per = .5,
                   colors = rev(lm_palette)))
dev.off()

word_freq %&gt;%
    top_n(10) %&gt;%
    mutate(word = reorder(word, n)) %&gt;%
    ggplot(aes(word, n)) + geom_col(fill = lm_palette[2]) +
    coord_flip() +
    theme(text = element_text(size=20))</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>While a word cloud is indeed a pretty way to visualise the bag of words in a text, it is not the most useful way to get the reader to understand the data. The words are jumbled, and the reader needs to search for meaning. A better way to visualise word frequencies is a bar chart. This code takes the data frame created in the previous snippet, determines the top ten occurring words. The mutate statement reorders to factor levels so that the words are plotted in order.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":6796,""className"":""size-full wp-image-6796""} -->
<div class=""wp-block-image size-full wp-image-6796""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/05/marketingtop10words.png"" alt=""Top ten words in marketing definitions."" class=""wp-image-6796"" /><figcaption>Top ten words in marketing definitions.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>A first look at the word cloud and bar chart suggests that marketing is about customers and products and services. Marketing is a process that includes branding and communication. This definition is simplistic but functional.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Topic Modeling using Tidytext</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Word frequencies are a weak method to analyse text because it interprets each word as a solitary unit. Topic modelling is a more advanced method that examines the relationships between words, i.e. the distance between them. The first step is to create a <a href=""https://en.wikipedia.org/wiki/Document-term_matrix"" rel=""noopener"">Document-Term Matrix</a>, which is a matrix that indicates how often a word appears in a text.&nbsp; As each of the 72 texts are very short, I decided to treat the collection of definitions as one text about marketing. The cast_dtm function converts the data frame to a Document-Term Matrix.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The following pipe determines the top words in the topics. Just like k-means clustering, the analyst needs to choose the number of topics before analysing the text. In this case, I have opted for four topics. The code determines the contribution of each word to the four topics and selects the five most common words in each topic. The faceted bar chart shows each of the words in the four topics.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":6797,""className"":""size-full wp-image-6797""} -->
<div class=""wp-block-image size-full wp-image-6797""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/05/MarketingTopics.png"" alt=""Topic modelling 72 definitions of marketing"" class=""wp-image-6797"" /><figcaption>Topic modelling 72 definitions of marketing</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">marketing_dtm &lt;- word_freq %&gt;%
    mutate(doc = 1) %&gt;%
    cast_dtm(doc, word, n)

marketing_lda &lt;- LDA(marketing_dtm, k = 4) %&gt;%
    tidy(matrix = ""beta"") %&gt;%
    group_by(topic) %&gt;%
    top_n(5, beta) %&gt;%
    ungroup() %&gt;%
    arrange(topic, -beta)

marketing_lda %&gt;%
    mutate(term = reorder(term, beta)) %&gt;%
    ggplot(aes(term, beta, fill = factor(topic))) +
    geom_col(show.legend = FALSE) +
    scale_fill_manual(values = lm_palette[-1:-2]) + 
       facet_wrap(~topic, scales = ""free"") +
       coord_flip() +
       theme(text = element_text(size = 20))</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>This example also does not tell me much more about what marketing is, other than giving a slightly more sophisticated version of the word frequency charts. This chart shows me that marketing is about customers that enjoy a service and a product. Perhaps the original definitions are not distinctive enough to be separated from each other.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This article is only a weak summary of the great work by Julia Silge who co-authored the Tidytext package. The video below provides a comprehensive introduction to topic modelling.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https:\/\/www.youtube.com\/watch?v=evTuL-RcRpc"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=evTuL-RcRpc
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>What have we learnt?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This excursion into text analysis using rvest and Tidytext shows that data science can help us to make some sense out of an unread text. If I did not know what this page was about, then perhaps this analysis would enlighten me. This kind of analysis can assist us in wading through to large amounts of text to select the ones we want to read. I am still not convinced that this type of analysis will provide any knowledge beyond what can be obtained from actually reading and engaging with a text.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Although I am a data scientist and want to maximise the use of code in analysing data, I am very much in favour of developing human intelligence before we worry about the artificial kind.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380"" /></a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->"
4239,2017-04-27,Euler Problem 18 and 67: Maximum Path Sums,https://lucidmanager.org/euler-problem-18-67-maximum-path-sum/,euler-problem-18-67-maximum-path-sum,The Devil is in the Data,Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 18 and 67 are exactly the same besides that the data set in the second version is larger than in the first one. In this post, I kill two Eulers with one code. These two problems are logically similar to <a href=""https://lucidmanager.org/euler-problem-15-lattice-paths/"">Euler problem 15</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>These two problems concern <a href=""https://en.wikipedia.org/wiki/Binary_tree"" target=""_blank"" rel=""noopener noreferrer"">binary trees</a>, which is a data structure where each node has two children. A practical example of a binary tree is a <a href=""https://en.wikipedia.org/wiki/Pedigree_chart"" target=""_blank"" rel=""noopener noreferrer"">pedigree chart</a>, where each person or animal has two parents, four grandparents and so on. In this Project Euler problem we need to navigate through the tree.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Euler Problem 18 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>By starting at the top of the triangle below and moving to adjacent numbers on the row below, the maximum total from top to bottom is 23.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=""wp-block-preformatted""><span style=""color: #ff0000;"">3</span><br><span style=""color: #ff0000;"">7</span> 4<br>2 <span style=""color: #ff0000;"">4</span> 6<br>8 5 <span style=""color: #ff0000;"">9</span> 3</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>That is, 3 + 7 + 4 + 9 = 23. <a href=""https://projecteuler.net/problem=18"" target=""_blank"" rel=""noopener noreferrer"">Find the maximum total from top to bottom of the triangle below</a>:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=""wp-block-preformatted"">75<br>95 64<br>17 47 82<br>18 35 87 10<br>20 04 82 47 65<br>19 01 23 75 03 34<br>88 02 77 73 07 63 67<br>99 65 04 28 06 16 70 92<br>41 41 26 56 83 40 80 70 33<br>41 48 72 33 47 32 37 16 94 29<br>53 71 44 65 25 43 91 52 97 51 14<br>70 11 33 28 77 73 17 78 39 68 17 57<br>91 71 52 38 17 14 91 43 58 50 27 29 48<br>63 66 04 68 89 53 67 30 73 16 69 87 40 31<br>04 62 98 27 23 09 70 98 73 93 38 53 60 04 23</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>As there are only 16,384 routes, it is possible to solve this problem by trying every route. However, <a href=""https://projecteuler.net/problem=67"" target=""_blank"" rel=""noopener noreferrer"">Problem 67</a>, is the same challenge with a triangle containing one-hundred rows; it cannot be solved by brute force, and requires a clever method! ;o)</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This problem seeks a <a href=""http://www.geeksforgeeks.org/find-maximum-path-sum-in-a-binary-tree/"" target=""_blank"" rel=""noopener noreferrer"">maximum path sum in a binary tree.</a>&nbsp;The brute force method, as indicated in the problem definition, is a very inefficient way to solve this problem. The video visualises the quest for the maximum&nbsp;path, which takes eleven minutes of&nbsp;hypnotic&nbsp;animation.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=z-AOWBztnpI"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-4-3 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-4-3 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=z-AOWBztnpI
</div><figcaption>Maximum path sum.</figcaption></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>A more efficient method is to define the maximum path layer by layer, starting at the bottom. The maximum sum of 2+8 or 2+5 is 10, the maximum sum of 4+5 or 4+9 is 13 and the last maximum sum is 15. These numbers are now placed in the next row. This process cycles until only one number is left. This algorithm solves the sample triangle in four steps:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Step 1:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=""wp-block-preformatted"">3<br>7 4<br>2 4 6<br>8 5 9 3</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Step 2:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=""wp-block-preformatted"">3<br>7 4<br>10 13 15</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Step 3:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=""wp-block-preformatted"">3<br>20&nbsp;19</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>Step 4:</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted -->
<pre class=""wp-block-preformatted"">23</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>In the code below, the data is triangle matrix.&nbsp;The variables <em>rij</em> (row) and <em>kol</em>&nbsp;(column) drive the search for the maximum path. The triangle for Euler Problem 18 is manually created and the triangle for Euler Problem 67 is read from the website.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">path.sum &lt;- function(triangle) {
    for (rij in nrow(triangle):2) {
        for (kol in 1:(ncol(triangle)-1)) {
            triangle[rij - 1,kol] &lt;- max(triangle[rij,kol:(kol + 1)]) + triangle[rij - 1, kol]
        }
        triangle[rij,] &lt;- NA
    }
return(max(triangle, na.rm = TRUE))
}

triangle &lt;- matrix(ncol = 15, nrow = 15)
triangle[1,1] &lt;- 75
triangle[2,1:2] &lt;- c(95, 64)
triangle[3,1:3] &lt;- c(17, 47, 82)
triangle[4,1:4] &lt;- c(18, 35, 87, 10)
triangle[5,1:5] &lt;- c(20, 04, 82, 47, 65)
triangle[6,1:6] &lt;- c(19, 01, 23, 75, 03, 34)
triangle[7,1:7] &lt;- c(88, 02, 77, 73, 07, 63, 67)
triangle[8,1:8] &lt;- c(99, 65, 04, 28, 06, 16, 70, 92)
triangle[9,1:9] &lt;- c(41, 41, 26, 56, 83, 40, 80, 70, 33)
triangle[10,1:10] &lt;- c(41, 48, 72, 33, 47, 32, 37, 16, 94, 29)
triangle[11,1:11] &lt;- c(53, 71, 44, 65, 25, 43, 91, 52, 97, 51, 14)
triangle[12,1:12] &lt;- c(70, 11, 33, 28, 77, 73, 17, 78, 39, 68, 17, 57)
triangle[13,1:13] &lt;- c(91, 71, 52, 38, 17, 14, 91, 43, 58, 50, 27, 29, 48)
triangle[14,1:14] &lt;- c(63, 66, 04, 68, 89, 53, 67, 30, 73, 16, 69, 87, 40, 31)
triangle[15,1:15] &lt;- c(04, 62, 98, 27, 23, 09, 70, 98, 73, 93, 38, 53, 60, 04, 23)

answer &lt;- path.sum(triangle)
print(answer)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Euler Problem 67</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The solution for problem&nbsp;number 67 is exactly the same. The data is read directly from the Project Euler website.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">triangle.file &lt;- read.delim(""https://projecteuler.net/project/resources/p067_triangle.txt"",
                            stringsAsFactors = FALSE, header = FALSE)
triangle.67 &lt;- matrix(nrow = 100, ncol = 100)
for (i in 1:100) {
    triangle.67[i,1:i] &lt;- as.numeric(unlist(strsplit(triangle.file[i,], "" "")))
}
answer &lt;- path.sum(triangle.67)
print(answer)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>You can download the latest version of this code from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem018.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->"
4240,2017-03-29,Data Pseudo-Science: Developing a Biorhythm Calculator,https://lucidmanager.org/data-pseudo-science-calculating-biorhythm/,data-pseudo-science-calculating-biorhythm,The Devil is in the Data,Machine Learning|R Language,"<!-- wp:paragraph -->
<p>Data science is a serious occupation. Just like any other science, however, it can also be used for spurious topics, such as calculating your biorhythm. This article provides an example of data&nbsp;Pseudo-Science though a function that calculates and visualises your <a href=""https://en.wikipedia.org/wiki/Biorhythm"">biorhythm</a>. Based on the graph, I must be having a great day right now.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The broader and more pertinent message in this post is that data pseudo-science is more common than you would think. Is our belief in machine learning justified or are some of these models also a pseudo-science with not much more reliability than a biorhythm?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Biorhythm Theory</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The idea that our physical states follow a predetermined rhythm has been around as long as mathematics. The basic concept of biorhythm&nbsp;is that a regular sinusoid cycle accurately describes our physical, emotional and intellectual states.&nbsp;Each of these three cycles has a different wavelength ($latex w$):</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>physical: $latex w = 23$ days</li><li>emotional: $latex w = 28$ days</li><li>intellectual: $latex w = 33$ days</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>The cycle is calculated with $latex \sin (2 \pi t / w)$, where $latex t$ indicates the number of days since birth. This idea was developed by German surgeon Wilhelm Fliess in the late 19<sup>th</sup> century&nbsp;and was popularised in the United States in the&nbsp;late 1970s. There is no scientific evidence of the validity of this theory, but it is an entertaining way to play with data.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The combination of the 23- and 28-day cycles repeats every 644 days, while the triple combination of 23-, 28-, and 33-day cycles repeat every 21,252 days, 58 years, two months and three weeks. You can, by the way, never reach a point where all cycles are maximised. The best you can achieve is 299.7 out of a maximum 300 which occurs when you are 17,003 days old.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Calculating your Biorhythm</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>When I was a teenager in the 1980s, several books and <a href=""http://www.atarimagazines.com/v6n9/Biorhythms.html"" rel=""noopener"">magazines</a> described computer code to calculate your biorhythm. I used to play with these functions on my <a href=""https://en.wikipedia.org/wiki/Atari_8-bit_family"" rel=""noopener"">Atari 130XE</a> computer.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Building a biorhythm calculator in R is easy. This function takes two dates as input and plots the biorhythm for the two weeks before and after the date. To calculate your biorhythm, run the function with your date of birth and target date: <code>biorhythm(""yyyy-mm-dd"")</code>. The default version uses today as the target. You can download the latest version of this code on <a href=""https://github.com/pprevos/r.prevos.net/blob/master/Miscellaneous/biorhythm.R"" rel=""noopener"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(ggplot2)
library(reshape2)
biorhythm &lt;- function(dob, target = Sys.Date()) {
    dob &lt;- as.Date(dob)
    target &lt;- as.Date(target)
    t &lt;- round(as.numeric(difftime(target, dob)))
    days &lt;- (t - 14) : (t + 14)
    period &lt;- data.frame(Date = seq.Date(from = target - 15, by = 1, length.out = 29),
                         Physical = sin (2 * pi * days / 23) * 100,
                         Emotional = sin (2 * pi * days / 28) * 100,
                         Intellectual = sin (2 * pi * days / 33) * 100)
period &lt;- melt(period, id.vars = ""Date"", variable.name = ""Biorhythm"", value.name = ""Percentage"")
ggplot(period, aes(x = Date, y = Percentage, col = Biorhythm)) + geom_line() +
    ggtitle(paste(""DoB:"", format(dob, ""%d %B %Y""))) +
    geom_vline(xintercept = as.numeric(target))
}
biorhythm(""1969-09-12"", ""2017-03-30"")</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""id"":515,""align"":""center""} -->
<div class=""wp-block-image""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/03/biorhythm.png"" alt=""biorhythm: data pseudo-science"" class=""wp-image-515""/></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Data Pseudo-Science</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Biorhythms are an early attempt for human beings to predict the future. Although there is no relationship between this algorithm and reality, many people believed in its efficacy. Does the same hold true for the hyped capabilities of machine learning?</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Data pseudo-science is not only an issue&nbsp;when people use spurious mathematical relationships such as biorhythms or astrology. This post is also written as a warning not to solely rely on numerical models to predict qualitative aspects of life.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The recent failures in predicting the results of elections, even days before the event, are a case in point. There are many <a href=""https://www.analyticsvidhya.com/blog/2016/05/8-reasons-analytics-machine-learning-models-fail-deployed/"">reasons machine learning methods can go wrong</a>. When machine learning algorithms&nbsp;fail, they are often just as useful as a biorhythm. It would be fun to write a predictive analysis package for R using only pseudoscientific approaches such as I-Ching, astrology or biorhythm.</p>
<!-- /wp:paragraph -->"
4241,2017-06-01,Euler Problem 23: Finding Non-Abundant Sums,https://lucidmanager.org/euler-problem-23-non-abundant-sums/,euler-problem-23-non-abundant-sums,The Devil is in the Data,Numberphile|Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler problem 23 asks us to solve a problem with&nbsp;<a href=""https://en.wikipedia.org/wiki/Abundant_number"" target=""_blank"" rel=""noopener noreferrer"">abundant or excessive numbers</a>. These are numbers for which the sum of its proper divisors is greater than the number itself.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Twelve is an abundant number because the sum of its proper divisors (the aliquot sum) is larger than 12: (1 + 2 + 3 + 4 + 6 = 16). All <a rel=""noopener noreferrer"" href=""https://en.wikipedia.org/wiki/Highly_composite_number"" target=""_blank"">highly composite numbers</a> or anti-primes greater than six are abundant numbers. These numbers have so many divisors that they are the opposite of primes, as explained in the Numberphile video below.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=2JM2oImb9Qg"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=2JM2oImb9Qg
</div><figcaption>5040 and other Anti-Prime Numbers - Numberphile.</figcaption></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Euler Problem 23 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>A perfect number is a number for which the sum of its proper divisors is exactly equal to the number. For example, the sum of the proper divisors of 28 would be 1 + 2 + 4 + 7 + 14 = 28, which means that 28 is a perfect number. A number <em>n</em> is called deficient if the sum of its proper divisors is less than n and it is called abundant if this sum exceeds <em>n</em>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>As 12 is the smallest abundant number, 1 + 2 + 3 + 4 + 6 = 16, the smallest number that can be written as the sum of two abundant numbers is 24. By mathematical analysis, it can be shown that all integers greater than 28123 can be written as the sum of two abundant numbers. However, this upper limit cannot be reduced any further by analysis, even though it is known that the greatest number that cannot be expressed as the sum of two abundant numbers is less than this limit.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a href=""https://projecteuler.net/problem=23"" target=""_blank"" rel=""noopener noreferrer"">Find the sum</a> of all the positive integers which cannot be written as the sum of two abundant numbers.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Solution</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This solution repurposes the <em>divisors</em>&nbsp;function that determines the proper divisors for a number, introduced for <a href=""https://lucidmanager.org/euler-problem-21-amicable-numbers/"">Euler Problem 21</a>. The first code snippet creates the sequence of all abundant numbers up to 28123 (sequence <a href=""https://oeis.org/A005101"" target=""_blank"" rel=""noopener noreferrer"">A005101</a> in the OEIS).&nbsp;An abundant number is one where its <a href=""https://en.wikipedia.org/wiki/Aliquot_sum"" target=""_blank"" rel=""noopener noreferrer"">aliquot sum</a> is larger than <em>n</em>.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">A005101 &lt;- function(x){
    abundant &lt;- vector()
    a &lt;- 1
    for (n in 1:x) {
        aliquot.sum &lt;- sum(proper.divisors(n)) - n
        if (aliquot.sum > n) {
            abundant[a] &lt;- n
            a &lt;- a + 1
        }
    }
return(abundant)
}

abundant &lt;- A005101(28123)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>The solution to this problem is also a sequence in the Online Encyclopedia of Integer Sequences (OEIS <a href=""http://oeis.org/A048242"" target=""_blank"" rel=""noopener noreferrer"">A048242</a>). This page states that the highest number in this sequence is 20161, not 28123 as stated in the problem definition.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The second section of code creates a list of all potential numbers not the sum of two abundant numbers. The next bit of code sieves any sum of two abundant numbers from the list. You find the answer by adding the remaining numbers in the sequence.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">A048242 &lt;- 1:20161

for (i in 1:length(abundant)) {
    for (j in i:length(abundant)) {
        if (abundant[i] + abundant[j] &lt;= 20161) {
            A048242[abundant[i] + abundant[j]] &lt;- NA
        }
    }
}
A048242 &lt;- A048242[!is.na(A048242)]
answer &lt;- sum(A048242)
print(answer)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>You can download the latest version of this code from <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem023.R"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a>.</p>
<!-- /wp:paragraph -->"
4242,2017-10-04,Writing Academic Articles using R Sweave and LaTeX,https://lucidmanager.org/r-sweave-and-latex/,r-sweave-and-latex,The Devil is in the Data,Productivity|R Language,"<!-- wp:paragraph -->
<p>One of my favourite activities in R is using Markdown to create business reports. Most of my work I export to MS Word to communicate analytical results with my colleagues. For my academic work&nbsp;and eBooks, I prefer LaTeX to produce great typography.&nbsp;This article explains how to write academic articles and essays combining R Sweave and LaTeX. The article is formatted in accordance with the&nbsp;APA (American Psychological Association) requirements.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To illustrate the principles of using R Sweave and LaTeX, I recycled an essay about problems with body image that I wrote for a psychology course many years ago. You can find the completed paper and all the necessary files on my <a href=""https://github.com/pprevos/r.prevos.net/tree/master/Miscellaneous/BodyImage"" rel=""noopener"">GitHub repository</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In another post, I have outlined how to achieve the same result using <a href=""https://lucidmanager.org/using-r-with-emacs/"">Emacs and Org Mode</a> to write academic articles.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Body Image</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Body image describes the way we feel about the shape of our body. The literature on this topic demonstrates that many people, especially young women, struggle with their body image.&nbsp;A negative body image has been strongly associated with eating disorders. Psychologists measure body image using a special scale, shown in the image below.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>My paper measures the current and ideal body shape of the subject and the body shape of the most attractive other sex. The results confirm previous research which found that body dissatisfaction for females is significantly higher than for men. The research also found a mild positive correlation between age and ideal body shape for women and between age and the female body shape found most attractive by men. You can read the full paper on my other <a href=""https://prevos.net/humanities/psychology/body-image/"" rel=""noopener"">website</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""none"",""id"":6429,""className"":""size-full wp-image-6429""} -->
<figure class=""wp-block-image alignnone size-full wp-image-6429""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/10/BodyScale.png"" alt=""Body shape measurement scale."" class=""wp-image-6429"" /><figcaption>Body shape measurement scale.</figcaption></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>R Sweave and LaTeX</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The R file for this essay uses the Sweave package to integrate R code with LaTeX. The first two code chunks create&nbsp;a table to summarise the respondents using the <a href=""https://cran.r-project.org/web/packages/xtable/index.html"" rel=""noopener"">xtable</a> package. This package creates LaTeX or HTML tables from data generated by R code.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The first lines of the code read and prepare the data, while the second set of lines creates a table in LaTeX code. The code chunk uses <code>results=tex</code> to ensure the output is interpreted as LaTeX. This approach is used in most of the other chunks.&nbsp;The image is created within the document and saved as a pdf file and back integrated into the document as an image with an appropriate label and caption.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>View the <a href=""https://github.com/pprevos/r.prevos.net/blob/master/Miscellaneous/BodyImage/BodyImage.Rnw"" rel=""noopener"">Rnw file</a> on my GitHub repository to see the full code.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Configuration</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>I created this file in R Studio, using the <a href=""https://support.rstudio.com/hc/en-us/articles/200552056-Using-Sweave-and-knitr"" rel=""noopener"">Sweave and </a>knitr&nbsp;functionality.&nbsp;To knit the R Sweave file for this paper you will need to install the <a href=""https://ctan.org/pkg/apa6"" rel=""noopener"">apa6</a>&nbsp;and <a href=""https://ctan.org/pkg/ccicons?lang=en"" rel=""noopener"">ccicons</a> packages in your LaTeX distribution. The apa6 package provides macros to format papers in accordance with the requirements of the American Psychological Association.</p>
<!-- /wp:paragraph -->"
4243,2017-09-07,Analysing soil moisture data in NetCDF format with the ncdf4 library,https://lucidmanager.org/ncdf4-library/,ncdf4-library,The Devil is in the Data,Hydroinformatics|Map Porn|R Language,"<!-- wp:paragraph -->
<p>The <a rel=""noopener noreferrer"" href=""http://www.unidata.ucar.edu/software/netcdf/"" target=""_blank"">netCDF</a>&nbsp;format is popular&nbsp;in sciences that analyse sequential spatial data. It is a&nbsp;self-describing, machine-independent data format for creating, accessing and sharing array-oriented information. The&nbsp;netCDF format provides spatial time-series such as meteorological or environmental data. This article shows how to load this type of data with the ncdf4 library. This article also shows how to visualise and analyse this data format by reviewing soil moisture data published by the Australian Bureau of Statistics. The latest version of this code is available on my <a rel=""noopener noreferrer"" href=""https://github.com/pprevos/hydroinformatics/tree/master/Catchment/SoilMoisture"" target=""_blank"">GitHub repository</a>. This article is one of a series on using the R language for analysing water data, or <a href=""https://lucidmanager.org/hydroinformatics/"">hydroinformatics</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Soil Moisture data</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The <a rel=""noopener noreferrer"" href=""http://www.bom.gov.au/water/landscape"" target=""_blank"">Australian Bureau of Meteorology</a> publishes hydrological&nbsp;data in both a simple map grid and in the NetCDF format. The map grid consists of a flat text file that requires a bit of data jujitsu before you can use it. The NetCDF format is much easier to deploy as it provides a three-dimensional matrix of spatial data over time.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>We are looking at the possible relationship between sewer main blockages and deep soil moisture levels. You will need to manually download this dataset from the Bureau of Meteorology website. I have not been able to scrape the website automatically. For this analysis,&nbsp;I use the actual <a href=""http://www.bom.gov.au/water/landscape/#/sd_pct/Actual/Day/-39.00/130.40/4/Point/Separate/0/0/2017/8/21"" target=""_blank"" rel=""noopener noreferrer"">deep soil moisture </a>level, aggregated monthly in NetCDF 4 format.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":1077,""width"":407,""height"":350,""className"":""size-full wp-image-1077""} -->
<div class=""wp-block-image size-full wp-image-1077""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/12/sd_avg.png"" alt=""Australian Landscape Water Balance"" class=""wp-image-1077"" width=""407"" height=""350"" /><figcaption>Australian Landscape Water Balance (Bureau of Meteorology).</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Reading, Extracting and Transforming the netCDF format with ncdf4</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The ncdf4 library, developed by&nbsp;David W. Pierce, provides the necessary&nbsp;functionality to manage this data. The first step is to load the data, extract the relevant&nbsp;information and transform the data for visualisation and analysis. When the data is read, it essentially forms a complex list that contains the metadata and the measurements.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The <code>ncvar_get</code> function extracts the data from the list. The lon, lat and dates variables are the dimensions of the moisture data. The time data is stored as the number of days since 1 January 1900. The spatial coordinates are stored in decimal degrees with 0.05-decimal degree intervals. The moisture data is a three-dimensional matrix with longitue, latitude and time as dimensions. Storing this data in this way will make it very easy to use.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">library(ncdf4)
bom &lt;- nc_open(""SoilMoisture/sd_pct_Actual_month.nc"")
print(bom) # Inspect the data
lon &lt;- ncvar_get(bom, ""longitude"")
lat &lt;- ncvar_get(bom, ""latitude"")
t &lt;- as.Date(""1900-01-01"") + ncvar_get(bom, ""time"")
moisture &lt;- ncvar_get(bom, ""sd_pct"")
dimnames(moisture) &lt;- list(lon, lat, t)
</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Visualising the data with ggplot</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The first step is to check the overall data. This first code snippet extracts a matrix from the cube for 31 July 2017 and plots it. This code pipe extracts the date for the end of July 2017 and creates a data frame. Although I use the Tidyverse, I still need reshape2 because the gather function does not like matrices.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">library(tidyverse)
library(RColorBrewer)
library(reshape2)

d &lt;- ""2017-07-31""
m &lt;- moisture[, , which(t == d)] %&gt;%
    melt(varnames = c(""lon"", ""lat"")) %&gt;%
    subset(!is.na(value))

ggplot(m, aes(x = lon, y = lat, fill = value)) + 
    borders(""world"") +
    geom_tile() +
    scale_fill_gradientn(colors = brewer.pal(9, ""Blues"")) +
    labs(title = ""Total moisture in deep soil layer (100-500 cm)"",
         subtitle = format(as.Date(d), ""%d %B %Y"")) +
    xlim(range(lon)) + 
    ylim(range(lat)) + 
    coord_fixed()</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:image {""align"":""center"",""id"":986,""width"":624,""height"":435,""className"":""size-full wp-image-986""} -->
<div class=""wp-block-image size-full wp-image-986""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/08/Moisture_Australia.png"" alt=""Deep soil moisture: Source Bureau of Meteorology, Australia. Loaded with the ncdf4 library and visualised with ggplot."" class=""wp-image-986"" width=""624"" height=""435"" /><figcaption>Deep soil moisture: Source Bureau of Meteorology, Australia</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>With the ggmap package we can create a nice map of a local area.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">library(ggmap)
loc &lt;- round(geocode(""Bendigo"") / 0.05) * 0.05 
get_map(loc, zoom = 12) %&gt;%
    ggmap() +
        geom_tile(data = m, aes(x = lon, y = lat, fill = value), alpha = 0.5) +
        scale_fill_gradientn(colors = brewer.pal(9, ""Blues"")) +
        labs(title = ""Total moisture in deep soil layer (100-500 cm)"",
             subtitle = format(as.Date(d), ""%d %B %Y""))</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:image {""align"":""center"",""id"":987,""width"":650,""height"":435} -->
<div class=""wp-block-image""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/08/Bendigo_July2017.png"" alt=""Soil Moisture aroud Bendigo. Loaded with the ncdf4 library and visualised with ggplot."" class=""wp-image-987"" width=""650"" height=""435"" /></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Analysing the data</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For my analysis, I am interested in the time series of moisture data for a specific point on the map. The previous code slices the data horizontally over time. To create a time series we can pierce through the data for a specific coordinate. The purpose of this time series is to investigate the relationship between sewer main blockages and deep soil data, which can be a topic for a future post.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":994,""width"":568,""height"":292,""className"":""size-full wp-image-994""} -->
<div class=""wp-block-image size-full wp-image-994""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/09/Bendigo_TimeSeries.png"" alt=""Deep soil moisture time series. Loaded with the ncdf4 library and visualised with ggplot."" class=""wp-image-994"" width=""568"" height=""292"" /><figcaption>Soil moisture time series for Bendigo.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">mt &lt;- data.frame(date = t,
dp = moisture[as.character(loc$lon), as.character(loc$lat), ])
ggplot(mt, aes(x = t, y = dp)) + geom_line() +
    labs(x = ""Month"",
         y = ""Moisture"",
         title = ""Total moisture in deep soil layer (100-500 cm)"",
         subtitle = paste(as.character(loc), collapse = "", ""))</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380"" /></a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->"
4245,2018-06-14,Using R with Emacs and ESS - A Multifunctional Environment,https://lucidmanager.org/using-r-with-emacs/,using-r-with-emacs,The Devil is in the Data,Productivity|R Language,"<!-- wp:paragraph -->
<p>A few years ago I ditched the spreadsheet in favour of writing code in R. During the process I learnt a valuable lesson: The steeper the learning curve, the larger the reward. My time invested in learning R has paid off in spades, and I now use the R language for all my numerical and <a href=""https://lucidmanager.org/qualitative-data-science/"">qualitative analysis</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Most data scientists solve data problems with the R language using the <a rel=""noopener"" href=""https://www.rstudio.com/"">RStudio</a> IDE, a free and open-source Integrated Development Environment. Although RStudio is a great product, like all other software products, it's functionality is limited to doing one thing well. My major problem with Studio is that it has limited editing functions, which makes writing complex documents in RMarkdown problematic. The editing functions in Emacs are amazing and will allow you to become a much more efficient writer.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Since last year I use <a rel=""noopener"" href=""https://www.gnu.org/software/emacs/"">Emacs</a> and once again the rule that a steep learning curve has a valuable reward has come true. Emacs is the Swiss army chainsaw of productivity, the ultimate killer app and also one of the <a rel=""noopener"" href=""https://www.emacswiki.org/emacs/EmacsHistory"">oldest</a> active pieces of software. Although it might seem that newer is better when it comes to software, Emacs has continuously evolved. The power of Emacs is its extensive functionality and virtually infinite customisability. Almost ninety per cent of all my computing activity now takes place within Emacs. I use it to write notes, manage my action lists, write e-mails, articles, books. The <a rel=""noopener"" href=""https://orgmode.org/"">Org mode</a> package in Emacs is the working horse that undertakes many of these functions. Since recently also to write R code in Emacs and ESS.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To master Emacs to the level, I am at now has taken me a couple of months. Initially, the bewildering amount of keyboard shortcuts is a challenge, but your muscle memory will soon kick in, and your fingers will glide across the keyboard like an eagle.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""none"",""id"":1411} -->
<figure class=""wp-block-image alignnone""><a href=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/06/emacs.png""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/06/emacs-1024x580.png"" alt=""Using R with Emacs and ESS: Org Mode with embeded R code to write an academic paper in APA format."" class=""wp-image-1411""/></a><figcaption>Using R with Emacs and ESS: Org Mode with embedded R code to write an academic paper in APA format.</figcaption></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Using R with Emacs and ESS</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The advantage of using Emacs over RStudio is that I can seamlessly switch between my notes, to-do lists, calendars and so on, while also developing code. There is no need to install, maintain and master multiple applications as Emacs cover almost all my computing needs. Just like R, Emacs includes thousands of packages that extend its functionality far beyond what one would expect from a text editor.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The disadvantage of Emacs compared to RStudio is that it is not as pretty and the screen more resembles an angry fruit salad than a slick material design. The image above shows my screen when I translated a paper about body image research into Org Mode with embedded R code. A temporary disadvantage is that there is a bit of preparation is required to enable coding in Emacs, but that is only a temporary hurdle and adds to the learning curve.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This article explains how to start Using R with Emacs and ESS (<a href=""https://ess.r-project.org/"" rel=""noopener"">Emacs Speaks Statistics</a>). The first section of this article provides links to resources on how to install Emacs on various platforms and how to enable it to start writing code in R with the ESS package. The second sections show how to use the R console and source files. The last section introduces literate programming by combining Org Mode and R and exporting the results to PDF, HTML etc.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Getting Started with Emacs</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Installing Emacs depends on your operating system. A simple Google search will tell you what to do. The video playlist below shows how to install Emacs on Ubuntu, OS X or Windows 10. You will also need to install the <a rel=""noopener"" href=""https://www.r-project.org/"">R language</a> on your machine, and if you like to create publication-quality output, the also include <a rel=""noopener"" href=""https://www.latex-project.org/"">LaTeX</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=NRWbEc-Jd30\u0026amp;list=PLGx4TR_jvOQAmztGFrV7SO6vTjSaiXTUo"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=NRWbEc-Jd30&amp;list=PLGx4TR_jvOQAmztGFrV7SO6vTjSaiXTUo
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>Emacs needs an <a rel=""noopener"" href=""https://www.gnu.org/software/emacs/manual/html_node/emacs/Init-File.html"">init file</a> to make the software behave the way you want it to.. You can download a minimal-working init file (<code>init.el</code>) from my <a rel=""noopener"" href=""https://github.com/pprevos/r.prevos.net/tree/master/Miscellaneous/BodyImage"">GitHub repository</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To install packages, type <code>M-x list-packages</code>. This function displays all available packages. In Emacs-speak this means pressing the Alt (modify) key and the lowercase 'x' key, followed by 'list-packages' and return. You can find ESS by pressing 'f' and search for the package. Type 'i' to mark it for installation and press 'x' to install the selected packages. The example init file loads the following packages that need to be manually installed:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><a rel=""noopener"" href=""https://ess.r-project.org/"">ESS</a>: Emacs Speaks Statistics.</li><li><a rel=""noopener"" href=""https://github.com/mattfidler/ess-smart-underscore.el"">ESS Smart Underscore</a>: <span class=""col-11 text-gray-dark mr-2"">Smarter underscore for Emacs Speaks Statistics.</span></li><li><a rel=""noopener"" href=""https://github.com/jkitchin/org-ref"">Org-Ref</a>: <span class=""col-11 text-gray-dark mr-2"">org-mode modules for citations, cross-references, bibliographies in org-mode and useful BibTeX tools to go with it. </span></li><li><a rel=""noopener"" href=""https://github.com/auto-complete/auto-complete"">auto-complete</a>: Auto-completion for GNU Emacs.</li></ul>
<!-- /wp:list -->

<!-- wp:heading -->
<h2>Using R with Emacs and ESS</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To start using R with Emacs type <code>M-x R RET</code>. ESS will ask to nominate a working directory and opens a new buffer with the name <code>*R*</code>. You can now use the R console to write code. You can open multiple instances of the R console with different working directories and environment, just like projects in RStudio.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Emacs recognises any file with the .R extension as the R language. This functionality is a so-called Emacs major mode, which is the essential functionality of Emacs. A <a rel=""noopener"" href=""https://www.gnu.org/software/emacs/manual/html_node/emacs/Modes.html"">major mode</a> defines how Emacs manages buffers, whether it is an R file, an Org Mode file and so on. Each mode has its own specialised functions that enhance the basic functionality.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>One bit of useful information is that the underscore key is mapped to the <code>&lt;-</code> assignment operator. If you need an underscore, you need to type it twice in a row. This functionality can be annoying when you are an avid user of ggplot. The <a href=""https://github.com/mattfidler/ess-smart-underscore.el"" rel=""noopener"">ess-smart-underscore</a> package solves this issue by extending the functionality of ESS. You can install this package in the same way you installed ESS itself. To enable it, add <code>(require 'ess-smart-underscore)</code> to your init file.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To write in a source file, you can create a .R file by typing <code>C-x C-f</code> (<a rel=""noopener"" href=""https://www.gnu.org/software/emacs/manual/html_node/emacs/Visiting.html"">find-file</a> function). Type the filename to create a new file, or when it already exists, open the file. You can now start writing R code as you would in any other editor. As soon as you evaluate code for the first time in a session, ESS will ask you what the starting project directory is. The default folder is the one that your .R file is in. To evaluate the whole buffer, use <code>C-c B</code>, to evaluate a section use <code>C-c c</code> and to evaluate a line press <code>M-RET</code>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>To show the source file and the R console next to each other, type <code>C-x 3</code> to <a href=""https://www.gnu.org/software/emacs/manual/html_node/emacs/Split-Window.html"" rel=""noopener"">split your window</a> to show two buffers. You can then use <code>C-x b</code> to select the other buffer.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>A disadvantage of using R in ESS is that there is no simple way to integrate plot outputs into the Emacs window. When I am iteratively working on visualisation, I save it to a file and open it in a separate buffer, as shown in the screendump.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Using R with Emacs and ESS to Write an Academic Paper</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Org Mode is the most popular extension of Emacs which comes precompiled with current versions of the software. Org Mode is an extremely versatile text editing extension. I use it to manage my projects using a calendar and To-Do lists, I write notes, write books and articles. I have translated an article I previously wrote <a href=""https://lucidmanager.org/r-sweave-and-latex/"">LaTeX and Sweave</a> to Org mode.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Org Mode works very well with <a rel=""noopener"" href=""https://orgmode.org/manual/LaTeX-Export.html#LaTeX-Export"">LaTeX</a>. You will need to write some code into your init file to set a template, after which writing LaTeX code is a breeze. The <a rel=""noopener"" href=""https://orgmode.org/worg/org-contrib/babel/"">Org Babel</a> package functions as an interface between Org mode and R. Perhaps explaining this file in detail is a topic for a future post. You can view the most recent version of the Org File and the associated setting in the init file on my <a rel=""noopener"" href=""https://github.com/pprevos/r.prevos.net/tree/master/Miscellaneous/BodyImage"">GitHub page</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""none"",""id"":6426,""className"":""size-full wp-image-6426""} -->
<figure class=""wp-block-image alignnone size-full wp-image-6426""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/06/openbook_1000x647.jpg"" alt=""Using R with Emacs and ESS: Org Mode with embedded R code to write an academic paper in APA format."" class=""wp-image-6426""/><figcaption>Using R with Emacs and ESS: Org Mode with embedded R code to write an academic paper in APA format.</figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->"
4290,2014-02-01,Defining a Water Quality Index to Communicate System Performance,https://lucidmanager.org/water-quality-index/,water-quality-index,The Devil is in the Data,Hydroinformatics|R Language|Water Quality,"<!-- wp:paragraph -->
<p>Reporting water quality performance to senior management or customers can be problematic as it requires a myriad of numbers and trying to pronounce parameters—impossible words such as clostridium perfringens, polydiallyldimethylammonium or bromochloroacetonitrile are not part of the vocabulary of most people. These terms appear in the <a href=""https://nhmrc.gov.au/about-us/publications/australian-drinking-water-guidelines"">Australian Drinking Water Guidelines</a> (2011). Directors and customers of utilities are generally not water quality specialists and that need to be provided with easy to digest information for them to be able to assess how drinking water supply systems perform. A water quality index is currently in development to achieve this goal.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The index is aimed at reducing complex data matrices to a single number, combining information from various sources. The index provides an overview of water quality performance, without mentioning technical details. The overall index consists of five parameters: treatment effectiveness, network protection, regulatory compliance and customer perception.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Given the broad nature of these parameters—from subjective assessments by customers to objective laboratory data—a certain level of subjectivity is unavoidable. The different aspects of the index will not contribute equally to the overall performance of water supply: How should we view customer complaints about laboratory data?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Methodology</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>A crowd-sourcing tactic was employed in the form of a survey to seek the collective opinion of water quality experts. A total of 36 responses were received from Australia, New Zealand, the USA&nbsp;and Europe. The survey was closed on 31 January 2014.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Respondents were asked about their involvement in water quality (such as level of education and amount of experience in the field). The primary survey consisted of two question banks regarding the relative importance of each of the proposed index factors and network sub-factors. Data was analysed using the using statistical package <em>R</em>. Responses can be considered reliable as the average standard error is less than 5%. The complete survey results and detailed analysis can be viewed on <a title=""Easy web publishing from R"" href=""http://rpubs.com/pprevos/wqindex"">Rpubs</a>. The raw scores on the main questions are presented in the diagrams below. The levels on the Y-axis are the relative importance (0–100) given to each of the parameters by respondents.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":1337,""width"":768,""height"":576} -->
<div class=""wp-block-image""><figure class=""aligncenter is-resized""><a href=""https://lucidmanager.org/water-quality-index/""><img src=""http://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2014/02/wqindex-1024x768.png"" alt=""Water Quality Index survey results (n=36). Click on diagram for high resolution image."" class=""wp-image-1337"" width=""768"" height=""576""/></a><figcaption>Water Quality Index survey results (n=36).</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Water Quality Index Analysis</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The individual results regarding the relative importance of the different factors and sub-factors are self-explanatory. These survey results will weight the final index scores. Additionally, some meta-analysis has been undertaken to obtain insight into the complexities of assessing water quality performance. Factor analysis with varimax rotation revealed that a one-factor solution is capable of explaining 49% of the variance. This is an indication that questions were answered consistently among respondents and that item scores can be interpreted as originating from one <a title=""Wikipedia"" href=""http://en.wikipedia.org/wiki/Latent_variable"">latent variable</a>, i.e. water quality performance.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Ten respondents also provided additional comments regarding the water quality index. Some respondents mentioned that the questions were “simplistic”, “ambiguous“ and “inaccurate”. This problem is, however, inherent to the data reduction and simplicity objectives of the water quality index. The index's ambiguity and inaccuracy are a reflection of the fact that information is sourced from paradigmatically different sources such as customer feedback and laboratory results.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Due to the reduction in data complexity, the index, its factors and sub-factors cannot be used for quantitative analysis. The index is, in essence, a qualitative expression of water quality performance only suitable for communication and not for analysis.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>One respondent also commented on the relationship between physical and biological water quality parameters and customer's perception of these:</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class=""wp-block-quote""><p>Focus on water safety sometimes gets clouded by issues associated with customer aesthetic opinion.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>This statement is an expression of the <a title=""Safe Water versus Good Water"" href=""https://lucidmanager.org/safe-water-versus-good-water/"">water quality paradox</a>. Even if the quality of the water meets regulations, customers might still not be satisfied. Providing safe water is a <a title=""Necessity and sufficiency"" href=""http://en.wikipedia.org/wiki/Necessity_and_sufficiency"">necessary condition, but not a sufficient condition</a> to achieve customer satisfaction.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Conclusion</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The survey has been successful and will aid in completing a water quality index that reflects the relative importance of the different aspects of water quality. The comments made by water quality experts are a typical expression of the difference in thought worlds between <a href=""https://lucidmanager.org/engineering-marketing-interface/"">scientists and customer service professionals</a> and aid in further developing a theoretical model for organisational culture in water utilities.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380""/></a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->"
4995,2018-07-19,Call Centre Workforce Planning Using Erlang C in R language,https://lucidmanager.org/call-centre-workforce-planning-erlang-c-in-r/,call-centre-workforce-planning-erlang-c-in-r,The Devil is in the Data,Customer Focus|Marketing|R Language,"<!-- wp:paragraph -->
<p>We all hate the experience of calling a service provider and being placed on hold for a very long time. Organisations that take their level of service seriously plan their call centres. Good planning ensures that waiting times for customers are within acceptable limits. Having said this, <a href=""https://lucidmanager.org/scarcity-marketing/"">making people wait</a> for something can in some instances increase the level of perceived value. This article shows how to implement call centre workforce planning with the R language.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Contact centre workforce planning involves an interesting mix of rational production management and the soft skills of providing <a href=""https://lucidmanager.org/service-with-a-smile-mirror-neurons/"">service with a smile</a>. The mathematics of managing a call centre ensures customers have a great experience by limiting waiting times.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Call centre performance can be numerically expressed by the Grade of Service. This KPI is the percentage of calls that are answered within a specific time. For example, 90% of calls are answered within 30 seconds. This Grade of Service depends on:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li> The volume of calls made to the centre.</li><li>The number of available agents</li><li>The time it takes to service a customer.&nbsp;</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Working in a call centre can be chaotic so we need some maths to make sense of it. The <a rel=""noopener"" href=""https://www.callcentrehelper.com/erlang-c-formula-example-121281.htm"">Erlang C&nbsp;formula</a> describes the relationship between the Grade of Service and various variables to bring some order to the chaos.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Call centre workforce planning is a complex activity that is a perfect problem to solve in R code. This article explains how to use the Erlang C formula in the R language to manage a contact centre. The presented code calculates the number of agents needed to meet a required Grade of Service. This approach is extended with a Monte Carlo situation to understand the stochastic nature of the real world better.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>The Erlang C Formula</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The Erlang C formula describes the probability that a customer needs to queue instead of being immediately serviced $latex (P_w)$. This formula is closely related to the <a rel=""noopener"" href=""https://en.wikipedia.org/wiki/Poisson_distribution"">Poisson distribution</a> which describes queues such as traffic lights or hospital waiting lists.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {""align"":""center""} -->
<p class=""has-text-align-center"">$latex P_w = \frac{\frac{A^N}{N!}\frac{N}{N-A}}{\Big( \sum_{i=0}^{N-1} \frac{A^i}{i!} \Big)+\frac{A^N}{N!}\frac{N}{N-A}}&amp;s=2$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The intensity of traffic $latex A$ is the number of calls per hour multiplied by the average duration of a call. Traffic intensity is measured in dimensionless Erlang units which expresses the time it would take to manage all calls if they arrived sequentially. The intensity is a measure of the amount of effort that needs to be undertaken in an hour. In reality, calls arrive at random times during the hour, which is where the Poisson distribution comes in. The waiting time is also influenced by the number of available operators $latex N$. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Both common sense and the formula show that increasing the number of calls or decreasing the number of operators increases the likelihood that customers are placed in a queue. The more staff, the higher the level of service, but precisely how many people do you need to achieve your desired grade of service efficiently?</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The Grade of Service $latex S$ is a function of the outcome of the Erlang C formula ($latex P_w$), the number of agents ($latex N$), the call intensity ($latex A$), call duration ($latex \lambda$) and lastly the target answering time $latex (t$).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {""align"":""center""} -->
<p class=""has-text-align-center"">$latex S = 1 - \Large[ P_w e^ {-[(N-A](t/ \lambda)]} \large]&amp;s=2$</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The Erlang C formula can be reworked to provide that answer. I sourced this solution from&nbsp;<a rel=""noopener"" href=""https://www.callcentrehelper.com/erlang-c-formula-example-121281.htm"">callcenterhelper.com</a>. We now have a toolset for call centre planning which we can implement in the R language.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Erlang C in R</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The Erlang C formula contains some factorials and powers, which become problematic when dealing with large call volumes or a large number of agents. The Multiple Precision Arithmetic library enables working with <a href=""https://lucidmanager.org/euler-problem-20/"">large integer factorials</a>, but there is no need to wield such strong computing powers.&nbsp;To make life easier, the Erlang C formula includes the <a href=""https://en.wikipedia.org/wiki/Erlang_(unit)#Erlang_B_formula"">Erlang B formula</a>, the inverse of which can be calculated using a small loop.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This implementation is very similar to an unpublished R package by <a href=""https://github.com/phubers/erlang"" rel=""noopener"">Patrick Hubers</a>, enhanced with work from <a href=""https://www.callcentrehelper.com/erlang-c-formula-example-121281.htm"" rel=""noopener"">callcenterhelper.com</a>.&nbsp;This code contains four functions:</p>
<!-- /wp:paragraph -->

<!-- wp:list {""ordered"":true} -->
<ol><li><code>intensity</code>: Determines intensity in <a rel=""noreferrer noopener"" aria-label=""Erlangs (opens in a new tab)"" href=""https://en.wikipedia.org/wiki/Erlang_(unit)"" target=""_blank"">Erlangs</a> based on the rate of calls per interval, the total call handling time and the interval time in minutes. All functions default to an interval time of sixty minutes. Erlangs are a dimensionless unit as a measure of the offered load.</li><li><code>erlang_c</code>: Processes the Erlang C formula, using the number of agents and the variables that determine intensity (call rate and call handling time). The output is the probability that a customer has to wait for service.</li><li><code>service_level</code>: Calculates the service level. The inputs are the same as above plus the period for the Grade of Service in seconds.</li><li><code>resource</code>: Seeks the number of agents needed to meet a Grade of Service. This function starts with the minimum number of agents (the intensity plus one agent) and keeps searching until it finds the number of agents that achieve the desired Grade of Service.</li></ol>
<!-- /wp:list -->

<!-- wp:heading {""level"":3} -->
<h3>Erlang C Code</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>You can view the code below or download the most recent version from <a rel=""noopener"" href=""https://github.com/pprevos/hydroinformatics/tree/master/Customers"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">intensity &lt;- function(rate, duration, interval = 60) {
    (rate / interval) * duration
}

erlang_c &lt;- function(agents, rate, duration, interval = 60) {
    int &lt;- intensity(rate, duration, interval)
    erlang_b_inv &lt;- 1
    for (i in 1:agents) {
        erlang_b_inv &lt;- 1 + erlang_b_inv * i / int
    }
    erlang_b &lt;- 1 / erlang_b_inv
    agents * erlang_b / (agents - int * (1 - erlang_b))
}

service_level &lt;- function(agents, rate, duration, target, interval = 60) {
    pw &lt;- erlang_c(agents, rate, duration, interval)
    int &lt;- intensity(rate, duration, interval)
    1 - (pw * exp(-(agents - int) * (target / duration)))
}

resource &lt;- function(rate, duration, target, gos_target, interval = 60) {
    agents &lt;- round(intensity(rate, duration, interval) + 1)
    gos &lt;- service_level(agents, rate, duration, target, interval)
    while (gos &lt; gos_target * (gos_target > 1) / 100) {
        agents &lt;- agents + 1
        gos &lt;- service_level(agents, rate, duration, target, interval)
    }
    return(c(agents, gos))
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Call centre workforce planning using R</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For example, you are managing a call centre with 100 calls every 30 minutes and an average handling time of 3 minutes. These numbers result in an intensity of <code>intensity(100, 3, 30)</code> 10 Erlangs or 10 calls hours of traffic per hour. This result means that we need at least 10 agents, assuming all calls arrive neatly after each other. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The reality of a contact centre is not that ordered as calls arrive at random times so there is a great chance that an operator will be busy if we only use 10 agents. You can enter this data into the Erlang C in R function to find the chance that a customer needs to wait. With 10 agents, the chance is 100%, with 11 agents it is 68%. The <code>sapply</code> function helps to view the impact of adding more customer service agents.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">erlang_c(11, 100, 3, 30)

sapply(10:20, erlang_c, rate = 100, duration = 3, interval = 30)
[1] 1.000000000 0.682118205 0.449388224 0.285270453 0.174131934 0.102042367
[7] 0.057340331 0.030876110 0.015928277 0.007873558 0.003731126</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>The likelihood of a customer having to wait is the main target for any service that involves queueing. We need to set a target service level or Grade of Service.  The service_level function calculates the Grade of Service, using the previous parameters plus the target in seconds. Let's make some assumptions:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>Required Grade of Service 80% </li><li>Target answer time: 20 seconds</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Using the function, we can quickly see that with 11 agents, we only have a Grade of Service of 39%, which is much less than the required 80%.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">service_level(11, 100, 3, 20/60, 30)
sapply(10:20, service_level, rate = 100, duration = 3, target = 20/60, interval = 30)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>The last function adds everything together and seeks for the number of agents needed to meet the required grade of service. We need at least 14 available agents to answer 80% of calls within 20 seconds.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">resource(100, 3, 20/60, 80, 30)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Call Centre Workforce Planning with Erlang C Monte Carlo Simulation</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>I have used the Erlang C model to recommend staffing levels in a contact centre some years ago. What this taught me is that the mathematical model is only the first step towards call centre workforce planning. There are several other metrics that can be built on the Erlang C model, such as average occupancy of agents and average handling time.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The Erlang C formula is, like all mathematical models, an idealised version of reality. Agents are not always available; they need breaks, toilet stops and might even go on leave. Employers call this loss of labour shrinkage, which is a somewhat negative term to describe something positive for the employee. The Erlang C model provides you with the number of 'bums on seats'.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The Erlang C formula is, like every model, not a perfect representation of reality. The formula tends to overestimate the required resources because it assumes that people will stay on hold indefinitely, while the queue will automatically shorten as people lose patience.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The number of employees needed to provide this capacity depends on the working conditions at the call centre. For example, if employees are only available to take calls 70% of their contracted time, you will need $latex 1/0.7=1.4$ staff members for each live agent to meet the Grade of Service.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Another problem is the stochastic nature of call volumes and handling times. The Erlang C model requires a manager to estimate call volume and handling time (intensity) as a static variable, while in reality, it is stochastic and subject to variation. Time series analysis can help to predict call volumes, but every prediction has a degree of uncertainty. We can manage this uncertainty by using a Monte Carlo simulation.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>All the functions listed above can be rewritten so that they provide a vector of possible answers based on the average call volume and duration and their standard deviation. This simulation assumes a normal distribution for both call volume and the length of each call. The outcome of this simulation is a distribution of service levels.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":3} -->
<h3>Monte Carlo Simulation</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For example, a call centre receives on average 100 calls per half hour with a standard deviation of 10 calls. The average time to manage a call, including wrap-up time after the call, is 180 seconds with a standard deviation of 20 seconds. The centre needs to answer 80% of calls within 20 seconds. What is the likelihood of achieving this level of service?</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The average intensity of this scenario is 10 Erlangs. Using the resource formula suggests that we need 14 agents to meet the Grade of Service. Simulating the intensity of the scenario 1000 times suggests we need between 6 and 16 agents to manage this workload.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">resource(100, 180, 20, 80, 30)
[1] 14.0000000 0.88835
intensity_mc(100, 10, 180, 20) %>% summary()
Min. 1st Qu. Median Mean 3rd Qu. Max.
5.480 8.975 9.939 10.025 10.993 15.932
</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>The next step is to simulate the expected service level for this scenario. The plot visualises the outcome of the Monte Carlo simulation and shows that 95% of situations the Grade of Service is more than 77% and half the time it is more than 94%.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">service_level_mc(15, 100, 10, 180, 20, 20, 30, sims = 1000) %>%
+ quantile(c(.05, .5, .95))
5% 50% 95%
0.7261052 0.9427592 0.9914338
</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>This article shows that Using Erlang C in R helps managers with call centre workforce planning. Perhaps we need a Shiny application to develop a tool to manage the complexity of these functions. I would love to hear from people with practical experience in managing call centres in how they analyse data.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":6894,""width"":524,""height"":524,""className"":""size-full wp-image-6894""} -->
<div class=""wp-block-image size-full wp-image-6894""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/07/service_levels.png"" alt=""Simulated service levels using Erlang C in R and Monte Carlo simulation."" class=""wp-image-6894"" width=""524"" height=""524""/><figcaption>Simulated service levels using Erlang C in R and Monte Carlo simulation.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading {""level"":3} -->
<h3>Monte Carlo Simulation Code </h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>You can view the code below or download it from <a rel=""noopener noreferrer"" href=""https://github.com/pprevos/hydroinformatics/tree/master/Customers"" target=""_blank"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">library(tidyverse)

intensity_mc &lt;- function(rate_m, rate_sd, duration_m, duration_sd, interval = 60, sims = 1000) {
    (rnorm(sims, rate_m, rate_sd) / (60 * interval)) * rnorm(sims, duration_m, duration_sd)
}

intensity_mc(100, 10, 180, 20, interval = 30) %>%
    summary

erlang_c_mc &lt;- function(agents, rate_m, rate_sd, duration_m, duration_sd, interval = 60) {
    int &lt;- intensity_mc(rate_m, rate_sd, duration_m, duration_sd, interval)
    erlang_b_inv &lt;- 1
    for (i in 1:agents) {
        erlang_b_inv &lt;- 1 + erlang_b_inv * i / int
    }
    erlang_b &lt;- 1 / erlang_b_inv
    agents * erlang_b / (agents - int * (1 - erlang_b))
}

service_level_mc &lt;- function(agents, rate_m, rate_sd, duration_m, duration_sd, target, interval = 60, sims = 1000) {
    pw &lt;- erlang_c_mc(agents, rate_m, rate_sd, duration_m, duration_sd, interval)
    int &lt;- intensity_mc(rate_m, rate_sd, duration_m, duration_sd, interval, sims)
    1 - (pw * exp(-(agents - int) * (target / rnorm(sims, duration_m, duration_sd))))
}

data_frame(ServiceLevel = service_level_mc(agents = 12,
                                           rate_m = 100,
                                           rate_sd = 10,
                                           duration_m = 180,
                                           duration_sd = 20,
                                           target = 20,
                                           interval = 30,
                                           sims = 1000)) %>%
    ggplot(aes(ServiceLevel)) +
        geom_histogram(binwidth = 0.1, fill = ""#008da1"")
ggsave(""service_levels.png"", dpi = 300)

service_level_mc(15, 100, 10, 180, 20, 20, 30, sims = 1000) %>%
    quantile(c(.05, .5, .95))</pre>
<!-- /wp:enlighter/codeblock -->"
6228,2018-09-02,Flat Earth Mathematics with examples in the R Language,https://lucidmanager.org/flat-earth-mathematics/,flat-earth-mathematics,The Devil is in the Data,geocode|Map Porn|R Language,"<!-- wp:paragraph -->
<p>In September 2018 I embarked on a trip around the world to speak at the <a rel=""noopener"" href=""http://worldwatercongress.org/"">World Water Congress</a> in Tokyo. I also visited family and friends in the Netherlands and did some tourism in San Francisco. One of the workshops I speak at is about Fake News in the water industry. There are many fake stories about <a href=""https://lucidmanager.org/invisible-water-utility/"">tap water</a> in circulation on the web. Most of those relate to the use chlorine fluoride and most recently smart meters. The internet provides humanity with almost unlimited knowledge, but instead, they use it to spread conspiracy theories. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>One of the craziest fake news trends is the flat earth conspiracy. Some of you might ask whether my trip actually <em>around</em> the world or am I travelling across a <em>flat disk</em>? This article discusses flat earth mathematics, and how to convert and visualise map projections in R. This article uses the code I published earlier in articles about <a href=""https://lucidmanager.org/pacific-island-hopping/"">creating flight maps</a> and <a href=""https://lucidmanager.org/pacific-island-hopping/"">Pacific island hopping</a>. You can view the code below or download the full version from <a rel=""noopener"" href=""https://github.com/pprevos/geography/blob/master/flatearth.R"">GitHub</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>The Flat Earth</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>YouTube contains thousands of videos from people that claim the earth is flat. These people pontificate that science as we know it is a ""globalist conspiracy"". The claims about a flat earth are hilarious and entertaining. People who believe our planet is flat even conduct simple experiments and engage in naive flat earth mathematics. Needless to say that these experiments are not very convincing, but I respect their entrepreneurial attitude.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Adherents to the idea that the world is flat often propose <a rel=""noopener"" href=""https://amzn.to/2Pxh3I7"">Gleason's Map</a> as their version of the correct representation of our planet. Every printed map of the earth is flat, but somehow this one seems to have a special status.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The Gleason map is not a map of a flat earth but a polar <a rel=""noopener"" href=""https://en.wikipedia.org/wiki/Azimuthal_equidistant_projection"">azimuthal equidistant projection</a> of the globe. Even though the map itself states that it is a <em>projection</em> of the world, flat earth believers nevertheless see it as a literal representation of the world they live on.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":7614} -->
<div class=""wp-block-image""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/09/gleasons_map.jpg"" alt=""Gleason's Map is often touted as a map of the flat earth."" class=""wp-image-7614""/></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Their belief is based on an appeal to common sense as the world appears to be flat when we look at the horizon. The second ingredient is a deep distrust in science, often inspired by religious motives.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This article shows two different ways to look at the earth and show that the spherical model better fits the reality of my trip around the world.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Projecting the spherical earth on a flat surface is a complex task. Maps require compromise as it is impossible to truthfully draw the surface of the globe on a piece of paper without distortion. The video below provides a practical introduction to map projections and shows how maps are stretched to display them on a flat surface.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=kIID5FDi2JQ"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=kIID5FDi2JQ
</div><figcaption>Practical map projections.</figcaption></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>The Azimuthal equidistant method is popularised in the flag of the United Nations. Antarctica is in this projection displayed as a ring around the world because the south pole projects to infinity. Flat earth evangelists believe that the South Pole a ring of ice that prevents us from proceeding beyond the disc. The edge of this disc cannot be shown because this method projects the south pole at an infinite distance from the centre of the map. We can recreate Gleason's map with <a href=""https://ggplot2.tidyverse.org/reference/coord_map.html"">ggplot</a>, which incorporates the <a href=""https://cran.r-project.org/web/packages/mapproj/index.html"">mapproj package</a> to show maps in various projections. </p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">library(tidyverse)
world &lt;- map_data(""world"")
worldmap &lt;- ggplot(world) +
    geom_path(aes(x = long, y = lat, group = group), size = .2) +
    theme(axis.text = element_blank(),
          axis.ticks = element_blank()) +
    labs(x = """", y = """")
worldmap + 
    coord_map(""azequidistant"", orientation = c(90, 0, 270))</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>The <a href=""https://ggplot2.tidyverse.org/reference/coord_map.html"" rel=""noopener"">coord_map</a> function allows you to change projections. The orientation argument defines the centre point of the projection. The most common location is the North Pole (90, 0). The third value gives the clockwise rotation in degrees. Gleason's map uses a rotation of 270 degrees.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":6851,""className"":""size-full wp-image-6851""} -->
<div class=""wp-block-image size-full wp-image-6851""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/09/azequidistant.png"" alt=""Polar azimuthal equidistant projection with ggmap."" class=""wp-image-6851""/><figcaption>Polar azimuthal equidistant projection with ggmap.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>My Round-the-World Itinerary</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>My trip started in Australia, onward to Japan, from where I go to the Netherlands. The last two legs will bring me back to Australia via San Francisco. The itinerary is stored in a data frame. The ggmap package geocodes the longitude and latitude of each of the locations on my trip. You will need a Google API to enable the <a href=""https://lucidmanager.org/geocoding-with-ggmap/"">geocoding function</a>. As the earth is a sphere, an intermediate point needs to be added for trips that pass the dateline, as I explained in my article about <a href=""https://lucidmanager.org/create-air-travel-route-maps/"">flight maps</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The geosphere package helps to estimate the total travel distance. The travel distance is approximately 38,995 km, slightly less than a trip around the equator. This distance is the <a rel=""noopener"" href=""https://en.wikipedia.org/wiki/Great-circle_distance"">great circle distance</a>, which is the shortest distance between two points on a sphere. The flight paths on this map are curved because of the inevitable distortions when projecting a sphere on a flat surface.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":3} -->
<h3>Round the World Itinerary</h3>
<!-- /wp:heading -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">library(ggmap)
api &lt;- readLines(""google.api"") # Text file with the secret API key
register_google(key = api)
airports &lt;- c(""Melbourne"", ""Tokyo"", ""Amsterdam"", ""San Francisco"")
itinerary &lt;- geocode(airports)
itinerary &lt;- rbind(itinerary, itinerary[1, ]) %>%
    mutate(location = c(airports, airports[1]))

## Split travel past dateline
dl &lt;- which(diff(itinerary$lon) > 180)
dr &lt;- ifelse(itinerary$lon[dl] &lt; 0, -180, 180)
dateline &lt;- tibble(lon = c(dr, -dr),
                   lat = rep(mean(itinerary$lat[dl:(dl + 1)]), 2),
                   location = ""dateline"")
itinerary &lt;- rbind(itinerary[1:dl, ], dateline,
                   itinerary[(dl + 1):nrow(itinerary), ])
itinerary

## Visualise
worldmap +
    geom_point(data = itinerary, aes(lon, lat), colour = ""red"", size = 4) +
    geom_path(data = itinerary, aes(lon, lat), colour = ""red"", size = 1) +
    coord_map(""azequidistant"", orientation = c(90, 0, 270))

## Great Circle Distance
library(geosphere)
sapply(1:(nrow(itinerary) - 1), function(l)
    distVincentyEllipsoid(itinerary[l, 1:2], itinerary[(l + 1), 1:2]) / 1000) %>%
    sum()</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:image {""align"":""center"",""id"":6852,""className"":""size-full wp-image-6852""} -->
<div class=""wp-block-image size-full wp-image-6852""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/09/rtw.png"" alt=""Round the world trip in polar Azimuthal equidistant projection."" class=""wp-image-6852""/><figcaption>Round the world trip in polar Azimuthal equidistant projection.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Flat Earth Mathematics</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If the Gleason map were an actual map of the flat earth, then the flight paths on the map would show as straight lines.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The <a href=""https://cran.r-project.org/web/packages/mapproj/index.html"" rel=""noopener"">mapproj package</a> contains the mapproject function that calculates the projected coordinates based on longitude and latitude. The output of this function is a grid with limits from $latex -\pi$ to $latex \pi$. The first part of the code converts the longitude and latitude from the world data frame to projected coordinates.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>A line from the lon/lat 0,0 to the north pole has a projected distance of $latex \pi/2$, which in the spherical world is $latex \pi / 2 * 6378.137 = 10018.75$ km. We need to multiply the Euclidean distances with the radius of the Earth to derive the Gleason map coordinates.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This last code snippet converts the world map to flat earth coordinates. It calculates the Euclidean distance between the points on the itinerary and multiplies this with the Earth's diameter.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The best way to show that Gleason's map is not a map of a flat earth is best demonstrated with a flight between Australia and Chili because the distortions are huge in the Southern hemisphere. This last code snippet shows why the Gleason map is not a map of a flat earth. On this map, the shortest distance between Sydney and Santiago de Chili is about 25,000 km, more than twice the real value. The <a rel=""noopener"" href=""https://www.travelmath.com/from/Sydney,+Australia/to/Santiago,+Chile"">actual travel time</a> is about 14 hours, which implies that passenger jets break the sound barrier. This problem exists for all journeys along the lines of latitude in the Southern hemisphere.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This map looks like the first one, but the coordinate system is now Euclidean instead of polar (longitudes and latitudes), as indicated by the square grid. On a projected map, the shortest distance is a curved line, parallel to Antarctica, which is how ships and aeroplanes move between these cities.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":6853,""className"":""size-full wp-image-6853""} -->
<div class=""wp-block-image size-full wp-image-6853""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/09/flatearth.png"" alt=""Sydney to Santiago de Chili on a flat earth map."" class=""wp-image-6853""/><figcaption>Sydney to Santiago de Chili on a flat earth map.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Conclusion</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This article proves that the Gleason map is not a representation of a flat earth. Aeroplanes would have to break the sound barrier to fly these distances in the time it takes to travel. Whichever way you project the globe on a flat map will lead to inevitable distortions. The Gleason map itself mentions that it is a projection and not a flat earth. However, these facts will not dissuade people from believing in a flat earth. I am after all an engineer and thus part of the globalist science conspiracy.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>The Flat Earth Mathematics Code</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>You can view the complete code on my <a href=""https://github.com/pprevos/geography/blob/master/flatearth.R"" rel=""noopener"">GitHub</a> repository.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">library(mapproj)
flatearth.coords &lt;- mapproject(world$long, world$lat,
                        ""azequidistant"", orientation = c(90, 0, 270))
r &lt;- 6378.137
flatearth.coords &lt;- mutate(world,
                x = flatearth.coords$x * r,
                y = flatearth.coords$y * r) %>%
    select(x, y, group, order, region, subregion)

flatearth &lt;- ggplot(flatearth.coords) +
    geom_path(aes(x, y, group = group), size = .2) +
    theme(axis.text = element_blank(),
          axis.ticks = element_blank()) +
    labs(x = """", y = """")

## Australia - South America
airports &lt;- tibble(city = c(""Sydney"", ""Santiago de Chili""))
itinerary &lt;- geocode(airports$city) %>%
    mutate(location = airports$city)
itinerary
coords &lt;- mapproject(itinerary$lon, itinerary$lat, ""azequidistant"",
                     orientation = c(90, 0, 270))
coords &lt;- tibble(x = coords$x * r, y = coords$y * r)
sum(sqrt(diff(coords$x)^2 + diff(coords$y)^2))

flatearth + 
    geom_point(data = coords, aes(x, y), colour = ""red"", size = 4) +
    geom_path(data = coords, aes(x, y), colour = ""red"", size = 1)</pre>
<!-- /wp:enlighter/codeblock -->"
6272,2018-11-15,Discourse Network Analysis: Undertaking Literature Reviews in R,https://lucidmanager.org/discourse-network-analysis-literature-review/,discourse-network-analysis-literature-review,The Devil is in the Data,Digital Humanities|R Language,"<!-- wp:paragraph -->
<p>Literature reviews are the cornerstone of science. Keeping abreast of developments within any given field of enquiry has become increasingly difficult given the enormous amounts of new research. Databases and search technology have made finding relevant literature easy but, keeping a coherent overview of the discourse within a field of enquiry is an ever more encompassing task.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Scholars have proposed many approaches to analysing literature, which can be placed along a continuum from traditional narrative methods to systematic analytic syntheses of text using machine learning. Traditional reviews are biased because they rely entirely on the interpretation of the researcher. Analytical approaches follow a process that is more like scientific experimentation. These systematic methods are reproducible in the way literature is searched and collated but still rely on subjective interpretation.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Machine learning provides new methods to analyse large swaths of text. Although these methods sound exciting, these methods are incapable of providing insight. Machine learning cannot interpret a text; it can only summarise and structure a corpus. Machine learning still requires human interpretation to make sense of the information.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This article introduces a mixed-method technique for reviewing literature, combining qualitative and quantitative methods. I used this method to analyse literature published by the International Water Association as part of my dissertation into <a href=""https://lucidmanager.org/invisible-water-utility/"">water utility marketing</a>. You can read the code below, or download it from <a href=""https://github.com/pprevos/qds/tree/master/LiteratureReview"" rel=""noopener"">GitHub</a>. Detailed infromation about the methodology is available through <a href=""https://doi.org/10.26181/5bd90ca36da85"" target=""_blank"" rel=""noopener noreferrer"">FigShare</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>A literature review with RQDA</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The purpose of this review was to ascertain the relevance of marketing theory to the discourse of literature in water management. This analysis uses a sample of 244 journal abstracts, each of which was coded with the <a href=""http://rqda.r-forge.r-project.org/"" rel=""noopener"">RQDA</a> library. This library provides functionality for <a href=""https://lucidmanager.org/qualitative-data-science/"">qualitative data analysis</a>. RQDA provides a graphical user interface to mark sections of text and assign them to a code, as shown below.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":7442} -->
<div class=""wp-block-image""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/11/rqda_abstract.png"" alt=""Literature Review with RQDA"" class=""wp-image-7442"" /><figcaption>Marking topics in an abstract with RQDA.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p><p>You can load a corpus of text into RQDA and mark each of the texts with a series of codes. The texts and the codes are stored in an SQLite database, which can be easily queried for further analysis.</p>
<p>https://www.youtube.com/watch?v=TodbCCbV6Wc</p></p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>I used a marketing dictionary to assess the abstracts from journals published by the International Water Association from the perspective of marketing. This phase resulted in a database with 244 abstracts and their associated coding.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Discourse Network Analysis</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Once all abstracts are coded, we can start analysing the internal structure of the IWA literature. First, let's have a look at the occurrence of the topics identified for the corpus of abstracts.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The first lines in this snippet call the tidyverse and RQDA libraries and open the abstracts database. The <code>getCodingTable</code> function provides a data frame with each of the marked topics and their location.&nbsp; This function allows us to visualise the occurrence of the topics in the literature.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(tidyverse)
library(RQDA)
## Open project
openProject(""IWA_Abstracts.rqda"", updateGUI = TRUE)

## Visualise codes
getCodingTable() %&gt;%
    group_by(codename) %&gt;%
    count() %&gt;%
    arrange(n) %&gt;%
    ungroup() %&gt;%
    mutate(codename = factor(codename, levels = codename)) %&gt;%
    ggplot(aes(codename, n)) +
        geom_col() +
        coord_flip() +
        xlab(""Code name"") + ylab(""Occurence"")</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":7443,""width"":524,""height"":524,""className"":""size-full wp-image-7443""} -->
<div class=""wp-block-image size-full wp-image-7443""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/11/code_frequencies.png"" alt=""Frequencies of topics in IWA literature."" class=""wp-image-7443"" width=""524"" height=""524"" /><figcaption>Frequencies of topics in IWA literature.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>This bar chart tells us that the literature is preoccupied with asset management and the quality of the product (water) or the service (customer perception). This insight is interesting, but not very enlightening information. We can use discourse network analysis to find a deeper structure in the literature.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Discourse Network Analysis</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>We can view each abstract with two or more topics as a network where each topic is connected. The example below shows four abstracts with two or more codes and their internal networks.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":7444,""width"":498,""height"":165,""className"":""size-full wp-image-7444""} -->
<div class=""wp-block-image size-full wp-image-7444""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/11/complete_graphs.png"" alt=""Examples of complete networks for four abstracts."" class=""wp-image-7444"" width=""498"" height=""165"" /><figcaption>Examples of complete networks for four abstracts.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>The union of these four networks forms a more extensive network that allows us to analyse the structure of the corpus of literature, shown below.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":7445,""width"":500,""height"":425,""className"":""wp-image-7445""} -->
<div class=""wp-block-image wp-image-7445""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/11/mix_example.communities.png"" alt=""Union of networks and community detection."" class=""wp-image-7445"" width=""500"" height=""425"" /><figcaption>Union of networks and community detection.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>We can create a network of topics with the <a href=""http://igraph.org/r/"" rel=""noopener"">igraph package</a>. The first step is to create a <a href=""https://en.wikipedia.org/wiki/Document-term_matrix"" rel=""noopener"">Document-Term-Matrix</a>. This matrix counts how often a topic occurs within each abstract. From this matrix, we can create a graph by transforming it into an <a href=""https://en.wikipedia.org/wiki/Adjacency_matrix"" rel=""noopener"">Adjacency Matrix</a>. This matrix describes the graph which can be visualised and analysed. For more detailed information about this method, refer to <a href=""http://hdl.handle.net/1959.9/561679"" rel=""noopener"">my dissertation</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(igraph)
library(reshape2)
dtm &lt;- getCodingTable()[,c(5, 4)] %&gt;%
    mutate(freq = 1) %&gt;%
    acast(filename ~ codename, sum)
adj &lt;- crossprod(dtm)
g &lt;- graph.adjacency(adj, weighted = T, mode = ""undirected"")
g &lt;- simplify(g)
## Network Graphs
V(g)$name &lt;- gsub("" "", ""\n"", V(g)$name)
par(mar = rep(0, 4))
plot(g,
     layout = layout.fruchterman.reingold,
     vertex.label.cex = 1,
     vertex.size = degree(g),
     vertex.label.color = ""black"",
     vertex.frame.color = ""white"",
     vertex.color = ""Dodgerblue"",
     edge.width = E(g)$weight * 1,
     edge.color = ""darkgray""
)</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":7448,""className"":""size-full wp-image-7448""} -->
<div class=""wp-block-image size-full wp-image-7448""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/11/iwa_network.png"" alt=""Network of topics in IWA literature."" class=""wp-image-7448"" /><figcaption>The network of topics in IWA literature.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>In this graph, each node is a topic in the literature, and each edge implies that a topic is used in the same abstract. This graph uses the Fruchterman-Reingold algorithm to position each of the nodes, with the most connected topic in the centre.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The last step is to identify the structure of this graph using community detection. A community is a group of nodes that are more connected with each other than with nodes outside the community.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">set.seed(123)
comms &lt;- spinglass.community(g, spins = 100)
par(mar = rep(0, 4))
plot(comms, g,
     layout = layout.fruchterman.reingold,
     vertex.label.cex = .7,
     vertex.size = degree(g),
     vertex.label.color = ""black"",
     vertex.frame.color = NA,
     edge.color = ""black"",
     vertex.label.family = ""sanserif"",
     mark.border = NA
)</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""align"":""center"",""id"":7449,""className"":""size-full wp-image-7449""} -->
<div class=""wp-block-image size-full wp-image-7449""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/11/iwa_communities.png"" alt=""Community detection in IWA literature"" class=""wp-image-7449"" /><figcaption>Community detection in IWA literature.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>We have now succeeded to convert a corpus of 244 journal abstracts to a parsimonious overview of four communities of topics. This analysis resulted in greater insight into how marketing theory applies to water management, which was used to structure a book about <a rel=""noopener"" href=""https://www.iwapublishing.com/books/9781780408668/customer-experience-management-water-utilities-marketing-urban-water-supply"">water utility marketing</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380"" /></a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->"
6842,2018-10-09,Geocoding with ggmap and the Google API,https://lucidmanager.org/geocoding-with-ggmap/,geocoding-with-ggmap,The Devil is in the Data,Map Porn|R Language,"<!-- wp:paragraph -->
<p>Some of the most popular articles on the <a href=""https://lucidmanager.org/the-devil-is-in-the-data/"">Devil is in the Data</a> show how to visualise spatial data creatively. In the old days, obtaining latitude and longitude required a physical survey and lots of mathematics. Google Maps has made this task much easier. This article describes how to use the Google Maps API with the <a href=""https://cran.r-project.org/web/packages/ggmap/index.html"" target=""_blank"" rel=""noreferrer noopener"" aria-label=""ggmap library (opens in a new tab)"">ggmap library</a>. Geocoding with ggmap is a convenient way to create meaningful spatial visualisations.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>The ggmap package</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Several R libraries exist to visualise spatial information. ggmap by David Kahle which aligns with the ggplot philosophy of layered visualisations.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The geocode function from the ggmap package extracts longitude and latitude from Google maps, based on a location query. The example below shows the result of a simple geocoding call for the White House and Uluru. The geocode function essentially constructs a URL to obtain the data. However, when you run this code you see an error:</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">library(ggmap)
geocode(c(""White House"", ""Uluru""))

Error: Google now requires an API key.
       See ?register_google for details.</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>In the middle of 2018, Google tightened access to the database, which means you need to register an API for it to work. This article explains how to use the latest version of ggmap and a Google account to continue using this function.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>The Google API</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Before we can start geocoding, we need to obtain an <a href=""https://developers.google.com/maps/documentation/geocoding/get-api-key"" rel=""noopener"">API key from Google</a>. Go to the <a href=""https://cloud.google.com/maps-platform/#get-started"">registration page</a>, and follow the instructions (select all mapping options). The geocoding API is a free service, but you nevertheless need to associate a credit card with the account.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Please note that the Google Maps API is <a href=""https://developers.google.com/maps/documentation/geocoding/usage-and-billing"" rel=""noopener"">not a free service</a>. There is a free allowance of 40,000 calls to the geocoding API per month, and beyond that calls are $0.005 each.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Geocoding with ggmap</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>You will need to ensure that you have the latest version of ggmap installed on your system. The current version on CRAN is 3.0.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The code snippet below shows a minimum-working-example of how you can map coordinates using ggplot. The <code>register_google</code> function stores the API key. I have stored the key itself in a private text file. The <code>getOption(""ggmap"")</code> function summarises the Google credentials to check how you are connected.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The geocode function converts the request into a URL and captures the output into a data frame. The plot shows the places I have lived, projected orthogonally on the globe. The mapproj library provides the orthogonal projection.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">api &lt;- readLines(""google.api"") # Text file with the API key
register_google(key = api)
getOption(""ggmap"")

locations &lt;- c(""Hoensbroek"", ""Johannesburg"", ""Barrow-in-Furness"",                
               ""Hong Kong"", ""Singapore"", ""Tangail"", ""Maastricht"", ""Bendigo"") %&gt;%
     geocode()

library(ggplot2)
library(mapproj)

world &lt;- map_data(""world"")
ggplot() +
     geom_polygon(data = world,  aes(long, lat, group = group),
                  fill = ""grey"") +
     geom_point(data = locations, aes(lon, lat),
                colour = ""red"", size = 5) + 
     coord_map(""ortho"", orientation = c(30, 80, 0)) +
     theme_void()</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:image -->
<figure class=""wp-block-image""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2018/10/wordhomes.png"" alt="""" /><figcaption>Places where I have worked and lived.</figcaption></figure>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Other articles that use ggmap</h2>
<!-- /wp:heading -->

<!-- wp:uagb/post-carousel {""block_id"":""e02d140d-520e-4be6-98d8-718217c662ba"",""categories"":""7"",""taxonomyType"":""post_tag"",""displayPostDate"":false,""displayPostExcerpt"":false,""displayPostAuthor"":false,""displayPostComment"":false,""displayPostLink"":false,""columns"":2,""orderBy"":""rand""} /-->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380"" /></a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->"
7400,2018-10-28,Celebrate Halloween with Creepy Computer Games in R,https://lucidmanager.org/creepy-computer-games-in-r/,creepy-computer-games-in-r,The Devil is in the Data,R Games|R Language,"<!-- wp:paragraph -->
<p>Halloween is upon us once more and who ever said that data science can't be scare. This article translates the&nbsp;<em>Gravedigger</em> game from the 1983 <a rel=""noopener"" href=""https://usborne.com/browse-books/features/computer-and-coding-books/"">Creepy Computer Games</a> book to celebrate Halloween. This article is part of my series on <a href=""https://lucidmanager.org/tag/r-games/"">gaming with the R language</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In the 1980s I spent my time writing code on my 8-bit ZX81 and Atari computers. I learnt everything I know about programming from copying and modifying printed code listings from books with computer games. The games in these books are mostly simple text-based games. The authors gave them enticing names, often imaginatively illustrated to visualise the virtual world they represent. A <a href=""https://lucidmanager.org/pong/"">line and a dot</a> become a game of tennis, and a computer that was able to play <a href=""https://lucidmanager.org/tic-tac-toe-war-games/"">Tic Tac Toe</a> seemed like your machine had come alive.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Let's step into the creepy world of computer games as imagined by Usborne Publishing.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":8278} -->
<div class=""wp-block-image""><figure class=""aligncenter""><a href=""https://usborne.com/browse-books/features/computer-and-coding-books/"" rel=""noopener""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2018/10/Creepy_Computer_Games-1024x856.jpg"" alt=""Reynold, Colin and McCaig, Rob, Creepy Computer Games (Usborne, London)."" class=""wp-image-8278"" /></a><figcaption>Reynold, Colin and McCaig, Rob, Creepy Computer Games (Usborne, London).</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Gravedigger</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Alan Ramsey's <em>Gravedigger</em> is a typical example of the games of the early days of home computing. You can download the original book for free from the <a rel=""noopener noreferrer"" href=""https://drive.google.com/file/d/0Bxv0SsvibDMTRUl3SFRONGN0MFk/view"" target=""_blank"">publisher 's Google drive</a>. The <em>Gravedigger</em> listing starts on page 10. The lyrical description of the game provides the instructions:</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class=""wp-block-quote""><p>It's dark and windy—not the kind of night to be lost in a graveyard, but that's where you are. You have until midnight to find your way out. Skeletons lurk in the shadows waiting to scare you to death should you come to close. You can dig holes to help keep them away but digging is tiring work and you cannot manage more than five in one game.&nbsp; You have to be careful not to fall down the holes you have dug. Grave stones (marked <code>+</code>) and&nbsp; the walls of the graveyard (marked <code>:</code>) block your way. The holes you digs are marked <code>O</code>, you are <code>*</code> and the skeletons are <code>X</code>. See if you can escape.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:image {""align"":""center"",""id"":8281,""className"":""size-full wp-image-7437""} -->
<div class=""wp-block-image size-full wp-image-7437""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2018/10/gravedigger.png"" alt=""Gravedigger screenshot (Emacs ESS)."" class=""wp-image-8281"" /><figcaption>Gravedigger screenshot (Emacs ESS).</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>The Gravedigger code</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>I translated the BASIC code as close to the original as possible. I changed some of the variable names because, in BASIC, single variables and vectors can have the same name and names of character vectors end in a $ character.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The game is quite tricky, and I have only managed to escape the graveyard once. It looks like the likelihood of success very much depends on the random distribution of the graves. Perhaps we need some machine learning to optimise strategy.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>I leave it up to you to deconstruct the program and safely work your way through the graveyard.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Happy Halloween!</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":8279,""className"":""size-full wp-image-7423""} -->
<div class=""wp-block-image size-full wp-image-7423""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2018/10/graveyard-1024x614.jpg"" alt=""Partial page of the Gravedigger game in BASIC."" class=""wp-image-8279"" /><figcaption>Partial page of the Gravedigger game in BASIC. The markings indicate different versions for various dialects of the BASIC language.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:uagb/marketing-button {""block_id"":""511ba405-29c5-40b6-804c-fedc235140a1"",""link"":""https:\/\/github.com\/pprevos\/RGames"",""linkTarget"":true,""icon"":""github""} -->
<div class=""wp-block-uagb-marketing-button uagb-marketing-btn__outer-wrap uagb-marketing-btn__align-center uagb-marketing-btn__align-text-center uagb-marketing-btn__icon-before"" id=""uagb-marketing-btn-511ba405-29c5-40b6-804c-fedc235140a1""><div class=""uagb-marketing-btn__wrap""><a href=""https://github.com/pprevos/RGames"" class=""uagb-marketing-btn__link"" target=""_blank"" rel=""noopener noreferrer""><div class=""uagb-marketing-btn__title-wrap""><div class=""uagb-marketing-btn__icon-wrap""></div><h6 class=""uagb-marketing-btn__title"">Download code</h6></div><div class=""uagb-marketing-btn__prefix-wrap""><p class=""uagb-marketing-btn__prefix"">Read the code below or download it from GitHub.</p></div></a></div></div>
<!-- /wp:uagb/marketing-button -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">## Creepy Computer Games
## Reynold, Colin and McCaig, Rob, Creepy Computer Games (Usborne, London).
## https://archive.org/details/Creepy_Computer_Games_1983_Usborne_Publishing/
## Gravedigger by Alan Ramsey

## Initiate board
A &lt;- matrix(ncol = 20, nrow = 10)
A[, ] &lt;- "" ""

## Starting variables
W &lt;- 0 # Move number
X &lt;- 5 # Remaining holes
death &lt;- 0 # Game over?

## Initiate pieces
Y &lt;- ""*""
B &lt;- ""+""
C &lt;- ""O"" 
D &lt;- "":""
E &lt;- ""X""
Z &lt;- "" ""

## Draw board
## Add borders
A[c(1, 10), ] &lt;- D
A[, 1] &lt;- D
A[1:8, 20] &lt;- D
## Add graves
for (i in 1:20){
    A[floor(runif(1) * 7 + 2), floor(runif(1) * 15 + 3)] &lt;- B
}

## Starting positions
## Player
M &lt;- 2
N &lt;- 2
A[N, M] &lt;- Y
## Skeletons
S &lt;- c(4, 19, 3, 19, 2, 19)

## Game play
repeat{    
    ## Position skeletons
    for (J in seq(1, 5, by = 2)) {
        A[S[J], S[J + 1]] &lt;- E
    }
    W &lt;- W + 1 ## Move counter
    if (W &gt; 60) {
        print(""The clock's struck midnight"")
        print(""Aghhhhh!!!!"")
        break
    }
    ## Print board
    v &lt;- paste(as.vector(t(A)), collapse = """")        
    for (i in 1:10)
        print(substr(v, (i - 1) * 20 + 1, (i - 1) * 20 + 20))
    ## Enter move
    A1 &lt;- toupper(readline(paste0(""Enter move "", W, "" (You can go N, S, E or W): "")))
    ## Move player
    T &lt;- N
    U &lt;- M
    if (A1 == ""N"") {
        T &lt;- N - 1
    }
    if (A1 == ""E"") {
        U &lt;- M + 1
    }
    if (A1 == ""S"") {
        T &lt;- N + 1
    }
    if (A1 == ""W"") {
        U &lt;- M - 1
    }
    ## Collission detection
    if (A[T, U] == D | A[T, U] == B) { # Edge or grave
        print(""That way's blocked"")
    }
    if (A[T, U] == C) { # Hole
        print(""You've fallen into one of your own holes"")
        break
    }
    if (A[T, U] == E) { # Skeleton
        death &lt;- 1
    }
    if (T == 9 &amp; U == 20) { # Escaped
        print(""You're free!"")
        print(paste0(""Your performance rating is "",
                    floor((60 - W) / 60 * (96 + X)), ""%""))
        break
    }
    if (death == 1) {
        print(""Urk! You've been scared to death by a skeleton."")
        break
    }
    if (A[T, U] == Z) { # Player can move
        ## Move player and dig hole
        A [N, M] &lt;- Z
        if (X != 0) {
            B1 &lt;- toupper(readline(""Would you like to dig a hole (Y or N): ""))
            if (B1 == ""Y"") {
                X &lt;- X - 1
                A[N, M] &lt;- C
            }
        }
        N &lt;- T
        M &lt;- U
        A[T, U] &lt;- Y
        ## Move skeletons
        for (J in seq(1, 5, by = 2)) {
            ## Store skeleton position in temp variable
            P &lt;- S[J]
            Q &lt;- S[J + 1]
            if (any(c(A[P + 1, Q], A[P - 1 , Q], A[P, Q - 1], A[P, Q + 1]) == Y)) {
                death &lt;- 1
            } else
            {
                ## Move skeletons
                if (A1 == ""S"" &amp; A[P + 1, Q] == Z){
                    S[J] &lt;- S[J] + 1 # Follow player
                    A[P, Q] &lt;- Z
                }
                if (A1 == ""N"" &amp; A[P - 1, Q] == Z){
                    S[J] &lt;- S[J] - 1 # Follow player
                    A[P, Q] &lt;- Z
                }
                if (A1 == ""E"" &amp; A[P, Q - 1] == Z &amp; M &lt; Q){
                    S[J + 1] &lt;- S[J + 1] - 1 # Move towards player
                    A[P, Q] &lt;- Z
                }
                if (A1 == ""E"" &amp; A[P, Q + 1] == Z &amp; M &gt; Q) {
                    S[J + 1] &lt;- S[J + 1] + 1 # Reverse direction
                    A[P, Q] &lt;- Z
                }
            }
        }
    }
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:uagb/post-carousel {""block_id"":""6ca20c46-4401-4796-a06e-ff8c2c25456d"",""categories"":""9"",""taxonomyType"":""post_tag"",""displayPostDate"":false,""displayPostExcerpt"":false,""displayPostAuthor"":false,""displayPostComment"":false,""displayPostLink"":false,""columns"":2,""bgColor"":""#d3d0d9""} /-->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380"" /></a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->"
7477,2018-12-10,5½ Reasons to Ditch Spreadsheets for Data Science: Code is Poetry,https://lucidmanager.org/spreadsheets-for-data-science/,spreadsheets-for-data-science,The Devil is in the Data,Data Science Strategy,"<!-- wp:paragraph -->
<p>When I studied civil engineering some decades ago, we solved all our computing problems by writing code. Writing in BASIC or PASCAL, I could quickly perform fundamental engineering analysis, such as reinforced concrete beams, with my home-brew software library. Soon after I started my career, spreadsheets became widely available, and I fully embraced this fantastic business tool, first Lotus 123 and later grudgingly moved to MS Excel. This article describes why you should ditch spreadsheets for data science and start writing code in R or Python instead. Computer code is Poetry, spreadsheets are chaos.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":9054,""className"":""wp-image-7627""} -->
<div class=""wp-block-image wp-image-7627""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2018/12/wapening-1024x614.jpg"" alt=""Screendump of Atari BASIC program to estimate concrete reinforcement surface area."" class=""wp-image-9054"" /><figcaption>Screendump of Atari BASIC program to estimate concrete reinforcement surface area.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Spreadsheets were excellent in those early days because data, code, visualisations and tabular output are all stored in one convenient file. Creating graphs with computer code was a bit of a nightmare in those days, so spreadsheets were a minor miracle. The next twenty years, I must have created thousands of spreadsheets of varying complexity. I even developed a ‘jungle’ of interlinked spreadsheets to manage progress reporting.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In the pioneering days of spreadsheets, they provided enormous convenience for engineers and other professionals to quickly develop analytical tools. But after using this tool for a few years, cracks started to appear.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https:\/\/www.youtube.com\/watch?v=YDvbDiJZpy0"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=YDvbDiJZpy0
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Spreadsheets are Chaos</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Throughout my career, I had many nightmarish experiences trying to reverse engineer spreadsheets, even the ones I wrote myself. The combination of data, code and output that I loved at the start of my career had reached its limits. Spreadsheets use incomprehensible names for variables (<code>AZ346</code>, <code>XC89</code> and so on) and the formulas are impossible to read because all code is cramped on one line with deeply nested logic. The multiple parentheses make Excel formulas are even harder to read than LISP expressions.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Furthermore, spreadsheets hide the formulas behind the results, which renders spreadsheets notoriously hard to understand. My love affair with the spreadsheet came to an end when I started writing my dissertation about <a href=""https://lucidmanager.org/invisible-water-utility/"">customer service for water utilities</a>. Excel was incapable of helping my need for solving complex mathematical problems. A colleague suggested I look into this new thing called 'Data Science' and this advice changed my career.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>My focus is to implement <a href=""https://lucidmanager.org/strategic-data-science/"">strategic data science</a> to help organisations to create value from data. One of the ways to achieve this goal is to ditch the spreadsheet and start writing code instead.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Code is Poetry</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>I decided to learn how to write code in the R language for statistical analysis. The R language is like a Swiss army chainsaw for engineers with capabilities that far exceed anything a spreadsheet can do. Writing in code, such as R or Python, is like writing an instruction manual on how to analyse data. Anyone who understands the language will be able to know how you derived your conclusions. Modern data science languages can generate print-quality visualisations and can output results in many formats, including a spreadsheet. In my job as a <a href=""https://lucidmanager.org/strategic-data-science/"">data science manager for a water utility</a>, I use R code for everything. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The awesome power of being able to easily combine large data sets, visualise data and undertake complex analysis. Now that I have rediscovered the poetry of writing computer code, I advocate learning to use R or perhaps Python and ditch the spreadsheet. On my <a href=""https://lucidmanager.org/the-devil-is-in-the-data/"">data science blog</a>, I share examples of creating value and having fun with the R language. Computer code is poetry in the sense that you can read it like a poem. Computer code consists of a sequential logic that is easy to follow. A spreadsheet is a chaotic jumble of formulas in a geometrical pattern. Each spreadsheet has a different pattern. The only purpose I still have for spreadsheets is an interface for small data sets.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":9056,""width"":512,""height"":384} -->
<div class=""wp-block-image""><figure class=""aligncenter is-resized""><a href=""https://lucidmanager.org/geographic-bubble-chart/""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2018/12/VietTri-1024x768.png"" alt=""Geographic Bubble Chart: Visualising Water Consumption in Vietnam."" class=""wp-image-9056"" width=""512"" height=""384"" /></a><figcaption>Geographic Bubble Chart: Visualising Water Consumption in Vietnam.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>5½ Reasons to Ditch the Spreadsheet</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>If you are still using spreadsheets, or you are trying to convince a colleague to ditch this tool, here are 5½ reasons to start using code to analyse data:</p>
<!-- /wp:paragraph -->

<!-- wp:list {""ordered"":true} -->
<ol><li>Good analysis is reproducible and can be peer-reviewed. Spreadsheets are hard to understand because of non-sequential references. Computer code is like an instruction book that can be read step-by-step.</li><li>Spreadsheet variables are hard to understand (e.g. <code>ZX81:ZX99</code>). In computer code, you give them meaningful names (e.g. <code>sales[81:99]</code>).</li><li>Best practice in data management is to separate data, code and output. In spreadsheets, it is not immediately clear which cell is the result of another cell and which ones are raw data. Computer code separates the data from the code and the output.</li><li>You can only share spreadsheet output with people who have access to the relevant software package. Computer code can produce output in <a href=""https://lucidmanager.org/r-sweave-and-latex/"">multiple formats, such as HTML, PDF</a> or even Excel, including <a href=""https://shiny.rstudio.com/"" target=""_blank"" rel=""noopener noreferrer"">interactive dashboards</a> you can publish on the web.</li><li>Functionality in spreadsheets is limited to what is made available by Microsoft. The R and Python languages are extendable and have extensive libraries to solve complex problems.</li></ol>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>The bonus reason to ditch the spreadsheet is that the best data science software, such as R and Python, is Open Source and freely available on the web. No license fees and it comes with terrific community support. Feel free to leave a comment if you like to defend the spreadsheet. If you have additional reasons to ditch this venerable but largely obsolete tool. Subscribe to this monthly blog if you are interested in using the R language for practical data science and some fun.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O"">Learn more about using the R language to solve water problems.</a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->"
7657,2019-01-19,Factor Analysis in R with the Psych Package: Measuring Consumer Involvement,https://lucidmanager.org/measuring-consumer-involvement/,measuring-consumer-involvement,The Devil is in the Data,Hydroinformatics|Marketing|R Language,"<!-- wp:paragraph -->
<p>The first step for anyone who wants to promote or sell something is to understand the psychology of potential customers. Getting into the minds of consumers is often problematic because measuring psychological traits is a complex task. Consumer involvement is a measure of the attitude people have towards a product or service. This article introduces the concept of consumer involvement. An example using data from tap water consumers illustrates the  theory. This article analyses the data collected from these consumers with factor  analysis in R, using the <a href=""https://personality-project.org/r/"">psych package</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The most common method to measure psychological traits is to ask people a battery of questions. Analysing this data is complicated because it is difficult to determine how the survey responses relate to the software of the mind. While the answers given by survey respondents are the directly measured variables, we like to know the hidden (latent) states in their mind. Factor Analysis is a technique identifies latent variables within a responses set of data, such as a customer survey.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The basic principle of measuring consumer attitudes is that their state of mind causes them to respond in a certain way. Factor analysis reverses this causality by analysing patterns in the responses that are indicative of the consumer's state of mind. Using a computing analogy, factor analysis is a technique to reverse-engineer the source code by analysing the input and output.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>What is Consumer Involvement?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Involvement is a marketing metric that describes the relevance of a product or service in somebody’s life. <a href=""http://www.sfu.ca/~zaichkow/research.html"" rel=""noopener"">Judy Zaichkowsky</a> defines consumer involvement formally as “a person’s perceived relevance of the object based on inherent needs, values, and interests”. People who own a car will most likely be highly involved with purchasing and driving the vehicle due to the money involved and the social role it plays in <a href=""https://horizonofreason.com/first-law-of-consumer-behaviour/"" rel=""noopener"">developing their public self</a>. Consumers will most likely have a much lower level of involvement with the instant coffee they drink than with the clothes they wear.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":3} -->
<h3>Managerial Relevance</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The level of consumer involvement depends on a complex array of factors. These  factors are related to psychology, situational factors and the marketing mix of the service provider. The lowest level of involvement is considered a state of inertia which occurs when people habitually purchase a product without comparing alternatives.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>From a managerial point of view, involvement is crucial because it is causally related to willingness to pay and perceptions of quality.&nbsp; Consumers with a higher level of involvement are willing to pay more for a service and have a more favourable perception of quality. Understanding <a href=""https://lucidmanager.org/tap-water-involvement/"">involvement in the context of urban water supply</a> is also important because sustainably managing water as a common pool resource requires the active involvement of all users.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Cult products have the highest possible level of involvement as customers are fully devoted to a particular product or brand. Commercial organisations use this knowledge to their advantage by maximising the level of consumer involvement through branding and advertising. This strategy is used effectively by the <a href=""https://lucidmanager.org/bottled-water-marketing/"">bottled water industry</a>. Manufacturers focus on enhancing the emotional aspects of their product rather than on improving the cognitive elements. Water utilities tend to use a reversed strategy and emphasise the cognitive aspects of tap water, the pipes, plants and pumps, rather than trying to create an emotional relationship with their consumers.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Measuring Consumer Involvement</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Asking consumers directly about their level of involvement would not lead to a stable answer because each respondent will interpret the question differently. The best way to measure psychological states or psychometrics is to ask a series of questions that are linguistically related to the topic of interest.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The most cited method to measure consumer involvement in the Personal Involvement Index, developed by Judy Zaichowsky. This index is a two-dimensional scale consisting of:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>cognitive involvement (importance, relevance, meaning, value and need)</li><li>affective involvement (involvement, fascination, appeal, excitement and interest).</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>The survey instrument consists of ten semantic-differential items. A Semantic Differential is a type of a rating scale designed to measure the meaning of objects, events or concepts. The researcher translates the concept, such as involvement, into a list of synonyms and their associated antonyms.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In the involvement survey, participants position their views between two extremes, such as Worthless and Valuable or Boring and Interesting. The level of involvement is the sum of all answers, which is a number between 10 and 70. In more detailed analysis, each item in the scale can be of a different strength.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":1355,""className"":""wp-image-1355 size-full""} -->
<div class=""wp-block-image wp-image-1355 size-full""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2013/01/PII.jpg"" alt=""Measuring Consumer Invovement using the Personal Involvement Inventory (Zaichowsky 1994)."" class=""wp-image-1355""/><figcaption>Personal Involvement Inventory (Zaichowsky 1994).</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Exploratory Analysis</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For my dissertation about c<a href=""https://lucidmanager.org/invisible-water-utility/"">ustomer service in water utilities</a>, I measured the level of involvement that consumers have with tap water. 832 tap water consumers completed this survey in Australia and the United States.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This data set contains other information, and the code selects only those variable names starting with ""<em>p</em>"" (for Personal Involvement Inventory). Before we analyse any data, we remove customers who provided the same answers to all items, or did not respond to all questions. These responses are most likely invalid, which leaves 757 rows of data.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>A boxplot is a convenient way to view the responses to multiple survey items in one visualisation. This plot immediately shows an interesting pattern in the answers. It seems that responses to the first five items were generally higher than those for the last five items. This result seems to indicate a demarcation between cognitive and affective involvement.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":7664,""width"":512,""height"":512,""className"":""wp-image-7664 size-large""} -->
<div class=""wp-block-image wp-image-7664 size-large""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2019/01/involvement_explore-1024x1024.png"" alt=""Responses to Personal Involvement Index by tap water consumers."" class=""wp-image-7664"" width=""512"" height=""512""/><figcaption>Responses to Personal Involvement Index by tap water consumers.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Next step in the exploratory analysis is to investigate how these factors correlate with each other. The correlation plot below shows that all items strongly correlate with each other. In correspondence with the boxplots above, the first five and the last five items correlate more strongly with each other. This plot suggests that the two dimensions of the involvement index correlate with each other. The next section shows how to use factor analysis in R to check the significance of these correlation patterns.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":7669,""width"":512,""height"":512,""className"":""size-full wp-image-7669""} -->
<div class=""wp-block-image size-full wp-image-7669""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2019/01/involvement_correlation.png"" alt=""Correlation matrix for Personal Involvement Index"" class=""wp-image-7669"" width=""512"" height=""512""/><figcaption>Correlation matrix for the Personal Involvement Index</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Factor Analysis in R</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Researchers often confuse Factor Analysis with Principal Component Analysis. The outcomes of are very similar when applied to the same data set. Both methods are similar but have a different purpose. Principal Component Analysis is a data-reduction technique that serves to reduce the number of variables in a problem. The specific purpose of Factor Analysis is to uncover latent variables. The mathematical principles for both techniques are similar, but not the same and should not be confused.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>One of the most important decisions in factor analysis is to decide how to rotate the factors. There are two types: orthogonal or oblique. In simple terms, orthogonal rotations seek to reduce the correlation between dimensions and oblique rotation allow for dimensions to relate to each other. Because of the strong correlations in the correlation plot and the fact that both dimensions measure involvement, this analysis uses oblique rotation. The visualisation below shows how each of the items how, and the two dimensions relate to each other.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":7670,""width"":419,""height"":439,""className"":""wp-image-7670 size-full""} -->
<div class=""wp-block-image wp-image-7670 size-full""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2019/01/involvement_factors.png"" alt=""Factor analysis in R with Psych package."" class=""wp-image-7670"" width=""419"" height=""439""/><figcaption>Factor analysis in R with Psych package.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>This simple factor analysis in R shows the basic principle of how to analyse psychometric data. The psych package has a lot more specialised tools to dig deeper into the information. This article has not assessed the validity of this construct, or evaluated the reliability of the factors. Perhaps that is for a future article.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>The R Code</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>You can view the code below. Go to my <a href=""https://github.com/pprevos/Marketing"">Github Repository</a> to see the code and the data source.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">## ConsumerInvolvement.R
library(tidyverse)
library(psych)
consumers &lt;- read_csv(""customers_quan.csv"") %>%
    select(starts_with(""p""))
dim(consumers)

## Data cleansing
sdevs &lt;- apply(consumers, 1, sd, na.rm = TRUE)
incomplete &lt;- apply(consumers, 1, function(i) any(is.na(i)))
consumers &lt;- consumers[sdevs != 0 &amp; !incomplete, ]
dim(consumers)

## Exploratory Analysis
consumers %>%
    rownames_to_column(var = ""Subject"") %>%
    gather(Item, Response, -Subject) %>%    
    ggplot(aes(Item, Response)) + geom_boxplot(fill = ""#f7941d"") +
    ggtitle(""personal Involvement Index"",
            subtitle = paste(""Tap Water Consumers USA and Australia (n ="",
                             nrow(consumers), "")""))
ggsave(""involvement_explore.png"", dpi = 300)

corPlot(consumers)

## Factor Analysis

piiFac &lt;- fa(consumers, nfactors = 2, rotate = ""oblimin"")

fa.diagram(piiFac)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Learn to use R Code to Solve Water Problems</h2>
<!-- /wp:heading -->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380""/></a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->"
7676,2019-02-24,Strategic Data Science: Creating Value With Data Big and Small,https://lucidmanager.org/strategic-data-science/,strategic-data-science,The Devil is in the Data,Data Science Strategy,"<!-- wp:paragraph -->
<p>Data science is without a doubt the most popular business fad of the past decade. The wonderful promises of machine learning blind many managers, so they forget about deploying these new approaches strategically. To create value from data, managers need to use a strategic approach to data science. This article provides a framework for data science, following my book <a href=""https://www.packtpub.com/big-data-and-business-intelligence/principles-strategic-data-science"">Principles of Strategic Data Science</a>, published by Packt.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":9024,""width"":512,""height"":426,""linkDestination"":""custom""} -->
<div class=""wp-block-image""><figure class=""aligncenter is-resized""><a href=""https://www.packtpub.com/big-data-and-business-intelligence/principles-strategic-data-science""><img src=""https://i0.wp.com/lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/08/sds_3d.png?fit=1024%2C852&amp;ssl=1"" alt="""" class=""wp-image-9024"" width=""512"" height=""426""/></a><figcaption>Peter Prevos, Principles of Strategic Data Science.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>What is Data Science?</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The manager to understand the importance of data was <a href=""https://lucidmanager.org/frederick-taylor-management-fundamentalism/"">Frederick Taylor</a>. He was a pioneer in using data to manage a business. He used data because he wanted to lower the influence of opinions and rules-of-thumb in favour of a scientific approach to management. The term data science emerged in the middle of the last century when electronic computation first became a topic of study. In those days, the discipline was literally a science of storing and manipulating data.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The current definition has drifted away from this initial academic activity to a business activity. The current data science hype can be traced back to an article in the 2012 edition of <a rel=""noopener"" href=""https://hbr.org/2012/10/data-scientist-the-sexiest-job-of-the-21st-century"">Harvard Business Review</a>. Davenport and Patil proclaimed data scientist to be the sexiest job of the twenty-first century. Subsequently, in the wake of this article, the number of data science searches in Google increased rapidly.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Organisations have for a long time used data to improve the lives of their customers, shareholders or society overall. Management gurus promoted concepts such as the data-driven organisation, evidence-based management, business intelligence and Six Sigma to help businesses realise the benefits of their data. Data science is an evolution of these methods enabled by the data revolution.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":3} -->
<h3>The Data Revolution</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Recent developments in information technology have significantly improved what we can do with data, resulting in what we now know as data science. Firstly, most business processes are managed electronically, which has exponentially increased the amount of available data. Developments in communication, such as the Internet of Things and personal mobile devices, have significantly reduced the price of collecting data.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Secondly, the computing capabilities on the average office worker's desk outstrip the capabilities of the supercomputers of the past. Not only is it cheaper to collect vast amounts of electronic data, but processing these enormous volumes has also come within reach of the average office worker.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Lastly, developments in applied mathematics and open source licensing have accelerated our capabilities in analysing this data. These new technologies allow us to discover patterns that were previously invisible. Data science is available to anyone wanting to learn because most tools to examine data are freely available on the internet with a helpful community sharing knowledge on how to use them.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>These three developments enabled an evolution from traditional business analysis to data science. Subsequently, data science has become the strategic and <em>systematic</em> approach to analysing data to achieve organisational objectives using electronic computing. This definition is agnostic of the promises of machine learning and leverages the three developments mentioned above. Data science as such is the next evolution in business analysis that maximises the value we can extract from data.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":3} -->
<h3>Data Science Strategy Competencies</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The craft of data science combines three different competencies. To illustrate this idea, data scientist Drew Conway visualised these core competencies of data science in a <a rel=""noopener"" href=""http://drewconway.com/zia/2013/3/26/the-data-science-venn-diagram"">Venn diagram</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":8538,""width"":500,""height"":262,""className"":""size-full wp-image-7861""} -->
<div class=""wp-block-image size-full wp-image-7861""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/05/figure03_Conway.png"" alt=""data science competencies"" class=""wp-image-8538"" width=""500"" height=""262""/><figcaption>Data science competencies (Based on Conway, 2009).</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Firstly and most importantly, data science requires <em>domain knowledge</em>. Any analysis needs to be grounded in the reality it seeks to improve. Subject-matter expertise is a necessary condition to make sense of an investigation. Professional expertise in most areas uses <em>mathematics</em> to understand and improve outcomes. New mathematical tools expand the traditional approaches to develop a deeper understanding of the domain under consideration. Lastly, <em>computer science</em> is the competency that binds the available data with mathematics. Writing computer code to extract, transform and analyse data to create information and stimulate knowledge is an essential skill for any data scientist.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://youtu.be/cJO8ASwk_XU"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://youtu.be/cJO8ASwk_XU
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Good Data Science</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In order to create value with data, we need to know how to create or recognise good data science. The second chapter of the book uses three principles originally introduced two thousand years ago by the Roman architect and engineer Vitruvius. He wrote that buildings need to be <em>useful</em>, <em>sound</em> and <em>aesthetic</em>. These requirements are also ideally suited to define best-practice in data science.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":8827,""width"":300,""height"":260,""className"":""size-full wp-image-7862""} -->
<div class=""wp-block-image size-full wp-image-7862""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/02/vitrivius.png"" alt=""The Vitruvian triangle for data science."" class=""wp-image-8827"" width=""300"" height=""260""/><figcaption>The Vitruvian triangle for data science.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:core-embed/youtube {""url"":""https://youtu.be/Gge5aZ9jZqo"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://youtu.be/Gge5aZ9jZqo
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading {""level"":3} -->
<h3>Usefulness</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>For data science to be useful, it needs to contribute to the objectives of an organisation positively. It is in this sense that data science is an applied science and not an academic pursuit. The famous Data-Information-Knowledge pyramid visualises the process of creating value from data.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><em>Useful</em> data science meaningfully improves our reality through data. Data is a representation of either a social or physical reality. Any data source is ever only a sample of the fullness and complexity of the real world. Information is data imbued with context. The raw data collected from reality needs to be summarised, visualised and analysed so that managers understand the reality of their business. This information increases knowledge about a business process, which is subsequently used to improve the reality from which the data was collected. This feedback loop visualises the essence of analysing data in businesses. Data science is a seductive activity because it is reasonably straightforward to create impressive visualisations with sophisticated algorithms. If data products don't improve or enlighten the current situation, they are in essence useless.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":8826,""width"":512,""height"":276,""className"":""size-full wp-image-7863""} -->
<div class=""wp-block-image size-full wp-image-7863""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/02/feedback-loop-1024x551.png"" alt=""Reality - Data - Information - Knowledge pyramid"" class=""wp-image-8826"" width=""512"" height=""276""/><figcaption>Reality - Data - Information - Knowledge pyramid.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:core-embed/youtube {""url"":""https://youtu.be/_ITXY6Daa5s"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://youtu.be/_ITXY6Daa5s
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Soundness</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Data science needs to be <em>sound</em> to ensure that the outcomes are valid and reliable. The validity and reliability of data are where the science meets the traditional approaches to analysing data. Validity is the extent to which the data represents the reality it describes. The reliability of data relates to the accuracy of the measurement. These two concepts depend on the type of data under consideration. Measuring physical processes is less complicated than the social aspects of society. Validity and reliability are in essence a sophisticated way of expressing the well-known Garbage-In-Garbage-Out principle.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":8825,""width"":768,""height"":327} -->
<div class=""wp-block-image""><figure class=""aligncenter is-resized""><a href=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2019/04/figure06_Soundness.png""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/02/soundness-1024x436.png"" alt=""Reliability and validity of data and analysis."" class=""wp-image-8825"" width=""768"" height=""327""/></a><figcaption>Reliability and validity of data and analysis.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>The soundness of data science also relates to the reproducibility of the analysis to ensure that other professionals can review the outcomes. Reproducibility prevents that the data and the process by which it was transformed and analysed become a black-box where we have no reason to trust the results. Data science also needs to be sound concerning the governance of the workflow. All data sources need to be curated by relevant subject matter experts to ensure their validity and reliability. Data experts provide that the data is available to those who need it.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://youtu.be/_hAXvAvx92I"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://youtu.be/_hAXvAvx92I
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading {""level"":3} -->
<h3>Aesthetics</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Lastly, data science needs to be <em>aesthetic</em> to ensure that any visualisation or report is easy to understand by the consumer of the analysis. This requirement is not about beautification through infographics. Aesthetic data products minimise the risk or making wrong decisions because the information is presented without room for misinterpretation. Any visualisation needs to focus on telling a story with the data. This story can be a comparison, a prediction, a trend or whatever else is relevant to the problem.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>One of the essential principles of aesthetic data science is the data-to-pixel ratio. This principle means that we need to maximise the ratio between all the pixels on a screen and those pixels that present information. Good data visualisation practices austerity to ensure that the people that consume the information understand the story that needs to be told.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":8807,""width"":768,""height"":427,""className"":""wp-image-7747""} -->
<div class=""wp-block-image wp-image-7747""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/06/visualisation-1024x569.png"" alt=""Example of low and high data-to-pixel ratio."" class=""wp-image-8807"" width=""768"" height=""427""/><figcaption>Example of low and high data-to-pixel ratio.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=5grTD8cGZQM"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=5grTD8cGZQM
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Data Science Strategy</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The data science continuum is a strategic journey for organisations that seek to maximise value from data. As an organisation moves along the continuum, increased complexity is the payoff for increased value. This continuum looks like hierarchy, but all phases are equally important. The last stages cannot exist without the previous ones. Therefore, implementing machine learning without a solid grasp of data collection will result in useless outcomes.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":8824,""width"":512,""height"":353,""className"":""wp-image-7749""} -->
<div class=""wp-block-image wp-image-7749""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/02/data-science-continuum-1024x706.png"" alt=""Strategic Data science continuum."" class=""wp-image-8824"" width=""512"" height=""353""/><figcaption>Data science strategy continuum.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Collecting data requires considerations on what to collect, how to collect it and at what frequency. To collect meaningful data requires a good understanding of the relationship between reality and data. There is no such thing as raw data as all information relies on assumptions and practical limitations.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":3} -->
<h3>Type of Value from Data</h3>
<!-- /wp:heading -->

<!-- wp:list -->
<ul><li>Describing the data is the first step in extracting value. </li><li>Descriptive statistics are the core of most business reporting and are an essential first step in analysing the data.</li><li>Diagnostics or analysis is the core activity of most professions. Each subject area uses specialised methods to create new information from data.</li><li>Predictive analysis seems to be the holy grail for many managers. A prediction is not a perfect description of the future but it provides the distribution of possible futures. Managers can use this information to change the present to construct their desired future.</li><li>Prescriptive analysis uses the knowledge created in the previous phases to automatically run a business process and even decide on future courses of action.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>Any organisation starting with data science should follow the five phases in this process and not jump ahead to try to bypass the seemingly less valuable stages.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=7BR3_No2qm8"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=7BR3_No2qm8
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>The Data-Driven Organisation</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Implementing a data science strategy is more than a matter of establishing a specialised team and solve complex problems. Creating a data-driven organisation that maximises the value of data requires a whole-of-business approach that involves people with the right attitude and skills, appropriate systems and robust processes.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>A data science team combines the three competencies described in the Conway Venn diagram. People that have skills in all three of these areas are rare, and the industry calls them unicorns. There is no need for recruiters to start hunting unicorns because these three areas of expertise can also exist within a team. Possibly more important than the technical skills are the social skills of a data scientist. Not only need they create useful, sound and aesthetic data science, they also need to convince the consumers of their work of its value.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":3} -->
<h3>Data Literacy</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>One of the problems of creating value with data is ensuring that the results are implemented in the organisation. A starting point to achieve this is to ensure that the users of data products have a relevant level of data literacy. Developing data literacy among consumers of data science is probably one of the greatest challenges. The required level of data literacy depends on the type of position and the role of the data consumer within the organisation.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Data scientists use an extensive range of tools and are often opportunistic in their choice of software. <a href=""https://lucidmanager.org/spreadsheets-for-data-science/"">Spreadsheets</a> are not very suitable to create good data science. Data science requires coding skills and the Python and R languages are powerful tools to solve complex problems. After the data specialists have developed the best way to analyse data, they need to communicate these to their customers. Many specific products exist to communicate data to users with interactive dashboards and many other dynamic systems.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The final part of this book on data science strategy delves into the ethics of data science. From the fact that something can be done, we certainly cannot conclude that it should be done. Just like any other profession that impacts humans, data scientists need ethical guidelines to ensure that their activities cause no harm. The book provides some basic guidelines that can assist data scientists to assess the ethical merits of their projects.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Summary</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>In summary, data science is about more than using the latest algorithms to analyse data. Good data science has to be useful in that it positively influences the objectives of the organisation. Furthermore, good data science has to be sound through a methodical approach. </p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":8835,""linkDestination"":""custom""} -->
<div class=""wp-block-image""><figure class=""aligncenter""><a href=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2019/04/First-Rule-of-Data-Science-Ethics.jpg""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/06/golden-rule-data-science-ethics-1024x512.jpg"" alt=""Golden rule of data science ethics: &quot;Don't be creepy&quot;"" class=""wp-image-8835""/></a></figure></div>
<!-- /wp:image -->"
7757,2019-03-22,Decode Lyrics in Pop Music: Visualise Prose with the Songsim algorithm,https://lucidmanager.org/decoding-lyrics-with-songsim/,decoding-lyrics-with-songsim,The Devil is in the Data,Digital Humanities|R Language,"<!-- wp:paragraph -->
<p>Music is an inherently mathematical form of art. Ancient Greek mathematician Pythagoras was the first to describe the logic of the scales that form melody and harmony. Numbers can also represent the rhythm of the music. Even the lyrics have a mathematical structure. Poets structure syllables and repeat words to create pleasing sounding prose. This article shows how to decode lyrics from pop songs and visualise them using the Songsim method to analyse their metre.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Decode Lyrics using the Songsim algorithm</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Data visualiser, pop music appreciator and machine learner <a href=""https://twitter.com/HalfEatenScone"" rel=""noopener noreferrer"">Colin Morris</a> has extensively analysed the repetitiveness of song lyrics. Colin demonstrated that lyrics are becoming more repetitive since the early days of pop music. The most repetitive song is <em>Around the World</em> by Daft Punk, which should not be a surprise since the artist repeats the same phrase 144 times. <em>Bohemian Rhapsody</em> by Queen has some of the least repetitive lyrics in popular music.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The TedX presentation (see below) by Colin Morris shows how he visualises the repetitiveness of song lyrics with what he calls the <a rel=""noopener noreferrer"" href=""https://colinmorris.github.io/SongSim/#/"">Songsim</a> algorithm. As a result, the more points in the graph, the more often the composer repeated a word</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":7797,""className"":""wp-image-7797 size-large""} -->
<div class=""wp-block-image wp-image-7797 size-large""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2019/03/DaftPunk-Queen-1024x768.png"" alt=""Decdodig lyrics: Daft Punk versus Queen"" class=""wp-image-7797""/><figcaption>Visualise the lyrics of Around the World and Bohemian Rhapsody.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>The visual language of song lyrics</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Morris decided to use a self-similarity matrix, which biologists use to visualise DNA sequences, to decode lyrics. In this method, the individual words of the song are the names of the columns and the names of the rows in a matrix. For every point in the song where the row name equals the column name, shows a dot. By definition, the diagonal of every similarity matrix is filled. The timeline of the song thus runs along the diagonal from top left to bottom right.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Patterns away from the diagonal represent two different points in time that have the same words. The more of these patterns we see, the more repetitive a song is. Let's demonstrate this with the <a href=""https://www.youtube.com/watch?v=g3qPT30LejM"" rel=""noopener noreferrer"">first words ever recorded</a> by Thomas Edison in 1877.</p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class=""wp-block-quote""><p>Mary had a little lamb, whose fleece was white as snow. And everywhere that Mary went, the lamb was sure to go.</p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>The similarity matrix below visualises the two first sentences of the famous nursery rhyme. It shows where the words ""Mary"", ""lamb"" and ""was"" are repeated once.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":7798,""width"":512,""height"":512,""className"":""wp-image-7798""} -->
<div class=""wp-block-image wp-image-7798""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2019/03/edison_little_lamb-1024x1024.png"" alt=""Self-similarity matrix for Mary had a Little Lamb by Thomas Edison."" class=""wp-image-7798"" width=""512"" height=""512""/><figcaption>Self-similarity matrix for Mary had a Little Lamb by Thomas Edison.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>The snowflake diagrams are a visual language to decode lyrics. The verses are the gutters with only diagonal lines. A verse is not very repetitive besides some stop words. The verse repeats through the song. Many songs have a bridge that contrasts with the rest of the song. As a result, the bridge is in most songs a unique pattern with self-similarity.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The diagram below visualises the lyrics of one of the most famous pop songs ever, <em>Waterloo</em> by Abba. The first 30 words are the opening verse, which shows little repetition, other than stop words such as and the pronoun I. After that we see diagonal lines appearing that represent the repetitive use of the song title. Towards the end of the song, we see the bridge, which is like a little snowflake within the diagram.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":7799,""width"":512,""height"":512,""className"":""wp-image-7799""} -->
<div class=""wp-block-image wp-image-7799""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2019/03/Abba-Waterloo-1024x1024.png"" alt=""Decoding lyrics with songsim: Waterloo by Abba."" class=""wp-image-7799"" width=""512"" height=""512""/><figcaption>Decoding lyrics: Waterloo by Abba.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:core-embed/youtube {""url"":""https://www.youtube.com/watch?v=_tjFwcmHy5M"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=_tjFwcmHy5M
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>The next section shows how to implement this approach with ggplot, scraping pop song lyrics from the azlyrics.com website.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Implementing Songsim with ggplot</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The code below visualises song lyrics or poetry as suggested by Colin Morris. The code uses four libraries. I use the tidyverse series of libraries because it makes life very easy. The tidytext library uses the tidyverse principles to analyse text. The old reshape2 library helps to transform a matrix, and lastly, rvest helps to scrape song lyrics from the azlyrics website.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The first function scrapes song lyrics from the azlyrics website using the artist and song as input. The first three lines clean the artist and song variables. This code removes any character that is not a number or a letter, converts to lowercase and lastly removes the definite article in the artist name. These two fields are then concatenated to create the URL, which the function prints. The remainder of the code scrapes the lyrics from the website or trips on an error 404 when it cannot find the song/artist combination.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The second function implements the Morris method to visualise the lyrics. The code extracts single words from the text and places them in a data frame (tibble). This data frame is subsequently converted to a boolean matrix that contains the visualisation.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The code looks at each word and places the value TRUE where reappears in the song. Each of the vectors is then concatenated to a matrix. Lastly, ggplot visualises the matrix is visualised as a raster.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>What does your favourite song look like a snowflake diagram?</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>The Songsim code</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Finally, you can view the code below or download the latest version from my <a rel=""noopener noreferrer"" href=""https://github.com/pprevos/r.prevos.net/blob/master/Miscellaneous/lyrics.R"">GitHub repository</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">## Decoding lyrics

library(tidyverse)
library(tidytext)
library(reshape2)
library(rvest)

get_lyrics &lt;- function(artist, song) {
    artist &lt;- gsub(""[^A-Za-z0-9]+"", """", tolower(artist))
    song &lt;- gsub(""[^A-Za-z0-9]+"", """", tolower(song))
    artist &lt;- gsub(""^the"", """", artist)
    url = paste(""http://azlyrics.com/lyrics/"", 
                artist, ""/"", song, "".html"", sep = """")
    print(url)

    azlyrics &lt;- read_html(url)
    lyrics &lt;- html_nodes(azlyrics, ""div"")
    lyrics &lt;- html_text(lyrics[22])
    gsub(""\r|\n"", "" "", lyrics)
}

plot_snowflake &lt;- function(artist, song){
    lyrics &lt;;- get_lyrics(artist, song)
    lyrics &lt;- data_frame(line = lyrics) %>%
        filter(line != """")

    words &lt;- lyrics  %>%
        unnest_tokens(word, line) 
    words_matrix &lt;- lapply(1:nrow(words),
                           function(w){
                               as.character(words[w, 1]) == words
                           }
                           ) %>%
        do.call(cbind, .)
    rownames(words_matrix) &lt;- 1:nrow(words)
    colnames(words_matrix) &lt;- 1:nrow(words)
    
    melt(words_matrix, varnames = c(""x"",  ""y"")) %>%
        ggplot(aes(x, -y, fill = value)) +
        geom_raster() +
        scale_fill_manual(values = c(""white"", ""dodgerblue4""), guide = FALSE) +
        theme_void() +     
        ggtitle(artist, subtitle = song)
}

plot_snowflake(""Abba"", ""Waterloo"")</pre>
<!-- /wp:enlighter/codeblock -->"
7852,2019-04-08,Analyse Site Structure and Internal Linking Structure with igraph,https://lucidmanager.org/analyse-site-structure/,analyse-site-structure,The Devil is in the Data,Network Analysis|R Language,"<!-- wp:paragraph -->
<p>One of the essential parts of Search Engine Optimisation (SEO) is a logical site structure. Site structure relates to how the pages of a website link to each other. A well-designed structure of internal links improves the user's experience. It also helps web crawlers to find their way through the website. This article shows how to use the igraph software to analyse site structure.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The iGraph package is a versatile library that can analyse many different types of data, some examples:</p>
<!-- /wp:paragraph -->

<!-- wp:uagb/post-carousel {""block_id"":""7c19722c-e4c5-4691-b7ff-ff744137574b"",""categories"":""5"",""taxonomyType"":""post_tag"",""displayPostDate"":false,""displayPostExcerpt"":false,""displayPostAuthor"":false,""displayPostComment"":false,""displayPostLink"":false,""columns"":2,""titleTag"":""h4""} /-->

<!-- wp:paragraph -->
<p>The Lucid Manager website has been around for ten years now, and the content has grown organically over time, which is a reflection of my changing interests and evolving career. Although I use categories and tags to organise the articles, internal linking between posts is a bit haphazard. This post shows how I extracted the relevant data from the Wordpress database and visualised the internal links with the iGraph package. This analysis shows that my website needs a bit of rework to improve its jungle of internal links to provide you and search engines a better experience. You can view the R code to investigate site structure below or download the latest version from my <a href=""https://github.com/pprevos/r.prevos.net/tree/master/Miscellaneous/Wordpress"" target=""_blank"" rel=""noopener noreferrer"">GitHub</a> repository.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Site Structure</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>A website needs to have a <a href=""https://yoast.com/site-structure-the-ultimate-guide/"" target=""_blank"" rel=""noopener noreferrer"">structure</a> to prevent it from being a loose collecting of articles. Internal links on a website organise the available information through taxonomy, and these links provide context to the text by referring to related pages. The taxonomy consists of menus, breadcrumbs, categories, tags and other structural elements. Contextual links are located in the body of text of each article and provide additional or related information to the reader.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Wordpress automatically adds links to categories and tags and the creates an ordered structure. Body text links are produced much more organically and can therefore quickly turn into a chaotic jungle of relationships. Wordpress has several plugins that help with site structure, but not of these tools provide a complete overview of the structure in the internal links.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The taxonomy provides an automated structure of the website by categorising articles. The internal linking structure is organic and needs some further consideration. This analysis focuses on the organic links within the body of the text to visualise and analyse the internal linking structure.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Extracting Wordpress Data</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The Lucid Manager is created with Wordpress. This system stores the body text of all articles in the <code>wp_posts</code> table in the database. To analyse site structure, we need the following fields:<br>
- <code>post_name</code> (slug)<br>
- <code>post_content</code> (full text)<br>
- <code>post_type</code> (only posts)<br>
- <code>post_status</code> (only published posts)</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The post type is in most instances either a page or a post, but can also be attachments and so on. The post name (slug) links posts together, and the post content contains the full text of the article in HTML.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Several methods are available to extract the required data from the Wordpress database. The easiest way is to use a plugin such as <a href=""http://www.wpallimport.com/export/"" target=""_blank"" rel=""noopener noreferrer"">WP All Export</a>. You can drag-and-drop the required fields or run a SQL query. The second method is to log in to the phpMyAdmin on your cPanel and run the relevant queries.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The third method involves using the <a href=""https://cran.r-project.org/web/packages/RMySQL/index.html"" target=""_blank"" rel=""noopener noreferrer"">RMySQL</a> package to download data from the site directly. You will need to create a new user with limited access rights and open the database to your IP address.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The first step reads the data from the database and selects all published posts. The credentials are read from the <code>dbconnect.R</code> file, so I don't publish sensitive data on this website. The table names will be different if you use a Wordpress network. Thanks to 'phaskat' on the <a href=""https://wordpress.stackexchange.com/questions/333163/i-would-like-some-help-wth-an-sql-query-to-link-posts-with-categories/333189#333189"" target=""_blank"" rel=""noopener noreferrer"">Wordpress StackExchange</a> for helping with the queries. Please note that when using a Wordpress network (as I do), you will need to replace the wp prefix in the table name with the relevant string.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">## Load data (CSV exported from wp_posts table in MySQL database)
library(tidyverse)
library(tidytext)
library(igraph)
library(RMySQL)
library(RColorBrewer)

## Download data using RmySQL
source(""dbconnect.R"")
## lucidmanager &lt;- dbConnect(MySQL(),
##                          user = ""username"",
##                          password = ""Password1"",
##                          dbname = ""databe name"",
##                          host = ""URL"")

posts.query &lt;- ""SELECT p.post_name, p.post_content, t.name
FROM wp_posts p
JOIN wp_term_relationships tr ON (tr.object_id = p.ID)
JOIN wp_term_taxonomy tt ON (tt.term_taxonomy_id = tr.term_taxonomy_id )
JOIN wp_terms t ON (t.term_id = tt.term_id)
WHERE
    p.post_type='post'
AND
    p.post_status='publish'
AND
    tt.taxonomy = 'category'""

pages.query &lt;- ""SELECT post_name, post_content
FROM
    wp_posts
WHERE
    post_type='page'
AND
post_status='publish'""

posts.data &lt;- dbSendQuery(lucidmanager, posts.query)
posts &lt;- fetch(posts.data, n=-1)

pages.data &lt;- dbSendQuery(lucidmanager, pages.query)
pages &lt;- fetch(pages.data, n=-1)

dbDisconnect(lucidmanager)

pages$name = ""Page""
content &lt;- rbind(posts, pages)
as_tibble(content)</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Converting the data to a network</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The second step uses the <a href=""https://www.tidytextmining.com/"" target=""_blank"" rel=""noopener noreferrer"">tidytext package</a> to convert the texts of the articles into tokens. In this case, a token is defined as any set of characters between spaces. In the default setting, the tokenisation function also splits words at dashes, which is not helpful because I want to preserve the hyperlinks as one token.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The third step uses regular expressions to find internal links and only retain the slug. The slug is the text after the website name. The <code>post_name</code> field in the database contains the slug for the post itself.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>These steps result in a table that shows how all slugs link to each other. In network analysis, this is an <a href=""https://en.wikipedia.org/wiki/Adjacency_list"" target=""_blank"" rel=""noopener noreferrer"">adjacency list</a> as each line represents a relationship in the network.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">links &lt;- content %&gt;%
  unnest_tokens(word, post_content,
                             token = stringr::str_split, pattern = "" "") %&gt;%
    filter(grepl("".+lucidmanager.org/"", word)) %&gt;%
    mutate(link = gsub("".+lucidmanager.org/"", """", word),
           link = gsub(""/.+"", """", link)) %&gt;%
    filter(link != ""tag"" &amp; link !=  ""wp-content"" &amp; link != ""author"") %&gt;%
    select(category = name, post_name, link)
tibble(links)</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Analysing Site Structure with iGraph</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Network analysis is the perfect tool to analyse site structure because each post on the website is a node and a link between two articles is a graph edge (arrow).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The Lucid Manager currently discusses strategic and fun data analysis, but in the past, I wrote articles about water utility marketing and critical perspectives on management theories. The questions I like to answer with this analysis are:<br>
- Are all pages connected to each other in one or more steps?<br>
- What is the most linked page?<br>
- Which pages link to themselves?<br>
- Are there duplicated links within one post?</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The iGraph software transforms the link table to a network. Any posts and pages without any links (solitary pages) are added separately. Each post is also given a colour related to its category, and pages are a separate colour.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This analysis shows that the internal link structure contains several sub networks, which are groups of pages that are only linked to each other. This graph will help in to identify more linking opportunities to dissolve sub networks.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The <a href=""https://igraph.org/r/doc/degree.html"" target=""_blank"" rel=""noopener noreferrer"">degree function</a> in iGraph determines the number of adjacent edges of each graph. The degree function can specify incoming and outgoing links. My article about service quality in water utilities is the most linked post on this site. In network analysis, this is the node with the highest degree of linking.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The loops in the diagram indicate self-referencing articles. The <a href=""https://igraph.org/r/doc/which_multiple.html"" target=""_blank"" rel=""noopener noreferrer"">which_loop</a> function identifies which arrows have the same start and end. The E function shows the list of edges, which shows that four pages on my website refer to themselves.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Lastly, the <a href=""https://igraph.org/r/doc/which_multiple.html"" target=""_blank"" rel=""noopener noreferrer"">which_multiple</a> function identifies any duplicated edges in the graph. Within this context, these are pages that contain the same link more than once. The Lucid Manager website has seventeen instances of duplicated links.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This first phase gives me plenty of homework to improve the internal linking structure of this website.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":7884} -->
<div class=""wp-block-image""><figure class=""aligncenter""><a href=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2019/04/lucidmanager_links.png""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2019/04/lucidmanager_links.png"" alt=""Visualising website structure. Click to enlarge."" class=""wp-image-7884"" /></a><figcaption>Visualising website structure.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">solitary &lt;- c(posts$post_name, pages$post_name)[!(c(posts$post_name, pages$post_name) %in%
                                                  unique(c(links$post_name, links$link)))]
network &lt;- select(links, post_name, link) %&gt;%
  graph_from_data_frame(directed = TRUE) + 
  vertices(solitary)

colour &lt;- tibble(post_name = V(network)$name) %&gt;%
  left_join(content) %&gt;%
  mutate(name = factor(name),
         colour = brewer.pal(length(unique(content$name)), ""Set2"")[name]) %&gt;%
  select(-post_content)

V(network)$color &lt;- as.vector(colour$colour)

par(mar = rep(0, 4))
plot(network,
     layout = layout.fruchterman.reingold,
     vertex.label.cex = .7,
     vertex.size = degree(network),
     vertex.label.color = ""black"",
     vertex.frame.color = NA,
     edge.arrow.size = .2,
     edge.color = ""darkgray""
     )

## Diagnose network
which.max(degree(network, mode = ""in""))

E(network)[which_loop(network)]

E(network)[which_multiple(network)]</pre>
<!-- /wp:preformatted -->

<!-- wp:heading -->
<h2>Future improvements</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This analysis is a great step to start systematically analysing organic website structure. Several other techniques help to understand the structure of a website further. Community detection and the inclusion of tags and categories in the data can provide additional context.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>SEO experts might find this concept useful. Perhaps somebody else can develop a Wordpress plugin to provide this visualisation.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380"" /></a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->"
8087,2019-05-12,The Secret of Landusia: A Text Adventure in the R Language,https://lucidmanager.org/text-adventure/,text-adventure,The Devil is in the Data,R Games|R Language,"<!-- wp:paragraph -->
<p>In the 1980s and early 1990s, I spent a lot of time playing and writing text adventure games on my Atari 8-bit computer. Text adventures, or interactive fiction, are games where the player reads a story on the screen. The player can change the outcomes of the story by issuing text instructions to the computer. These lines are an extract from <a rel=""noreferrer noopener"" href=""http://rickadams.org/adventure/"" target=""_blank"">Colossal Cave</a>, by Will Crowther and Don Woods, the very first text adventure written in the mid-1970s:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph {""customTextColor"":""#05af70"",""backgroundColor"":""very-dark-gray"",""fontSize"":""small""} -->
<p style=""color:#05af70"" class=""has-text-color has-background has-small-font-size has-very-dark-gray-background-color"">You are standing at the end of a road before a small brick building. Around you is a forest. A small stream flows out of the building and down a gully. <br><br>&gt; go south<br><br>You are in a valley in the forest beside a stream tumbling along a rocky bed.<br><br>&gt; enter stream<br><br>Your feet are now wet.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The basic premise of a text adventure is that the player finds herself in a simulated world. Unlike contemporary simulations, this virtual world is created only with text. This might seem a strange idea to modern games, but simulated worlds through text have existed for thousands of years. A text adventure enhances the traditional book by giving the player the freedom to act within the narrative. The objective of these games is to solve problems to reach a specified goal.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This article describes how to write a text adventure in the R language. This article replicates a game and the techniques described by Hal Renko and Sam Edwards in the Dutch book <em>Adventures!</em> (1986).</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":8089} -->
<figure class=""wp-block-image""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/05/renko_edwards.jpg"" alt=""Text adventures by Hal Renko and Sam Edwards."" class=""wp-image-8089""/><figcaption>Cover of the 1986 book <em>Adventures!</em></figcaption></figure>
<!-- /wp:image -->

<!-- wp:uagb/call-to-action {""textAlign"":""center"",""ctaPosition"":""below-title"",""block_id"":""baa675c6-3184-42df-9e27-4461c832a909"",""ctaTarget"":true,""ctaIcon"":""github"",""ctaText"":""Download code"",""ctaLink"":""https://github.com/pprevos/RGames/tree/master/Adventure"",""ctaBtnLinkColor"":""#f9f9f8"",""ctaBgColor"":""#4f2647"",""ctaBgHoverColor"":""#6a6a9d""} -->
<div class=""uagb-cta__outer-wrap"" id=""uagb-cta-block-baa675c6-3184-42df-9e27-4461c832a909""><div class=""uagb-cta__content-wrap uagb-cta__block uagb-cta__icon-position-below-title ""><div class=""uagb-cta__left-right-wrap""><div class=""uagb-cta__content""><div class=""uagb-cta__title-wrap""><h3 class=""uagb-cta__title"">Spoiler Alert!</h3></div><div class=""uagb-cta-text-wrap""><p class=""uagb-cta__desc"">The sections below describe the detailed workings and the narrative of the game. If you don't like spoilers, then perhaps you should download the code and play <em>The Secret of Landusia</em> before reading further.</p></div><div class=""uagb-cta__link-wrapper uagb-cta__block-link-style""><div class=""uagb-cta__button-wrapper""><a href=""https://github.com/pprevos/RGames/tree/master/Adventure"" class=""uagb-cta__block-link uagb-cta__button-link-wrapper uagb-cta-typeof-button"" target=""_blank"" rel=""noopener noreferrer""><span class=""uagb-cta__link-content-inner""><span>Download code</span></span><span class=""uagb-cta-button-icon uagb-cta__align-button-after uagb-cta-with-svg""></span></a></div></div></div></div></div></div>
<!-- /wp:uagb/call-to-action -->

<!-- wp:heading -->
<h2>The Secret of Landusia Text Adventure</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This section explains the detailed workings of the Landusia game. To view the code, please go to the <a rel=""noreferrer noopener"" aria-label=""GitHub (opens in a new tab)"" href=""https://github.com/pprevos/RGames/tree/master/Adventure"" target=""_blank"">GitHub</a> repository. The text adventure consists of four files:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>adventure.R: The code.</li><li>actions.md: Markdown file with descriptions of rooms and actions.</li><li>map.csv: Matrix of the relationship between rooms.</li><li>objects.csv: Matrix of the status of objects and actors.</li></ul>
<!-- /wp:list -->

<!-- wp:heading {""level"":3} -->
<h3>The Game Loop</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The computer displays the current state of the game with a short piece of prose. The player then enters a command in natural language, which changes the state of the game. When the state of the player or the game reaches a certain point, the player has either won or lost the game. The game loop processes the commands of the player and determines the new state of the game. The state of the game consists of:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><em>Player</em>: The player can have many attributes, such as health, objects they are carrying and their location.</li><li><em>Map</em>: Logic of the game localities and a description of each area.</li><li><em>Objects</em>: Are either placed in a room or are with the player.</li><li><em>Actors</em>: Can act independently.</li></ul>
<!-- /wp:list -->

<!-- wp:image {""align"":""center"",""id"":8284} -->
<div class=""wp-block-image""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/05/flowchart_PNG.png"" alt=""Text adventure flowchart."" class=""wp-image-8284""/><figcaption>Text adventure flowchart.</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:heading {""level"":3} -->
<h3>Initialisation</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The initialisation defines the vocabulary through a vector of verbs and a vector of directions. The code reads the map, objects and prose into memory and sets the starting variables for the player. The initialisation includes two auxiliary functions that the player cannot call directly.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The prose function takes a key phrase and finds the location of the heading for that key in the <code>actions</code> variable. The following lines of code print the text up to the next heading indicator. The prose function describes rooms, actions, actors and so on. Using a markdown file simplifies writing the text so it is not hidden amongst code. The prose function reads keywords after double hashtags. Other headings are used for convenience.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The inventory function lists all objects that the player carries. This function is a separate verb in most adventure games, but in this game, it is integrated with other verbs.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>The Player</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The program simulates the player with a set of parameters, such as their location, level of health and whatever other aspect is relevant. A player can, for example, only carry a certain number of objects, can only endure two blows by a sword, and so on.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The Landusia game, the player has a level of <code>health</code> and maximum carrying <code>capacity</code>. The <code>room</code> variable keeps track of where the player is located.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":3} -->
<h3>The Map</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The game consists of 28 'rooms'. The map is stored in a <a rel=""noreferrer noopener"" href=""https://github.com/pprevos/RGames/blob/master/Adventure/map.csv"" target=""_blank"">matrix</a> which indicates the relationships between the rooms. Each direction can have one or no exit. The map can also dynamically change during the game. Specific directions can, for example, only become available after the player opens a door. A rockfall could close an entrance, and so on. The player can move around the map by issuing directional commands. These commands are the four cardinal compass directions, and up and down.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In Landusia, the first nine rooms are a forest. The blacksmith lives south of the forest. Clovar's castle lies to the south-east and the temple north-east of the forest. The connection between room 14 and 15 opens after the player uses the rope in room 14. </p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":8105,""linkDestination"":""media""} -->
<figure class=""wp-block-image""><a href=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/05/landusia_map.png""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/05/landusia_map.png"" alt=""Text adventure map: Secret of Landusia"" class=""wp-image-8105""/></a><figcaption><em>Secret of Landusia</em> map (click to enlarge).</figcaption></figure>
<!-- /wp:image -->

<!-- wp:heading {""level"":3} -->
<h3>Objects</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The descriptions of the different rooms of the game can contain objects. These objects are fixed in that their description is hard-coded into the game. A text adventure can also have movable objects. Each object can have its own properties, such as weight, and location. The location of the object can either be a room or the player (room zero). These properties are stored in another <a rel=""noreferrer noopener"" href=""https://github.com/pprevos/RGames/blob/master/Adventure/objects.csv"" target=""_blank"">matrix</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The Landusia game has four objects: bandage, sword, flute and rope. These objects are scattered around the map and have a certain weight. The <code>capacity</code> variable limits what the layer can carry simultaneously.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":8290} -->
<figure class=""wp-block-image""><img src=""https://i2.wp.com/lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/05/landusia-battlements.jpg?fit=905%2C289&amp;ssl=1"" alt=""The Secret of Landusia. Hal Reno &amp; Sam Edwards (1986)."" class=""wp-image-8290""/></figure>
<!-- /wp:image -->

<!-- wp:heading {""level"":3} -->
<h3>Actors</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Actors are like objects, with the difference that they are active in the game. As the game progresses, actors take independent actions. Actors can move around the map and respond to the actions of the player. They can have properties, such as health and strength. Actors can be either friends or enemies that create a dynamic narrative.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Landusia has four actors which are stored in the same matrix a the objects. Each actor has a name, location, health and status. The actors function controls their actions.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":4} -->
<h4>Wizard</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The wizard appears in the living quarters. His only task is to give the player the flute, once they manage to reach him. After this one action, the wizard vanishes by changing his location to room 100.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":4} -->
<h4>Crow</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>When the player is in the forest, a random variable determine whether they are swooped by a crow. Another random variable determines whether the player was hurt. If the crow manages to hit the player, the code reduces the <code>health</code> variable.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":8114} -->
<figure class=""wp-block-image""><img src=""https://i0.wp.com/lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/05/landusia.jpg?fit=905%2C460&amp;ssl=1"" alt=""The Secret of Landusia. Hal Reno &amp; Sam Edwards (1986)."" class=""wp-image-8114""/></figure>
<!-- /wp:image -->

<!-- wp:heading {""level"":4} -->
<h4>Dragon</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The dragon sequence depends on the room the player is in. In room 17, the dragon has a 50% chance of hitting, while in room 18, the dragon is always sucessful. The player needs to kill the dragon with the sword (see below). The success of these fights depends on a random variable.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":4} -->
<h4>Blacksmith</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The blacksmith has the most complex handler of them all. He starts lying wounded on the floor. If the player does not help the blacksmith by using the bandage, he will die. If the player uses the bandage, the blacksmith is healed and move to the workshop to forge a sword for the player. The status variable controls the evolution of the blacksmith in the game.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":3} -->
<h3>Command interpreter</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The command interpreter asks the player for instructions, which the program then interprets. The state of the game (player, map, objects and actors) is changed, depending on the input. If the state of the game reaches a particular defined state, the game will end either successfully or miserably.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The basic principle of all command translators in interactive fiction is that they analyse the input using <a rel=""noreferrer noopener"" aria-label=""regex (opens in a new tab)"" href=""https://www.regular-expressions.info/rlanguage.html"" target=""_blank"">regex</a>-type approaches. The interpreter compares the player's instructions with a vocabulary and strips verbs and nouns.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>For example, ""take lamp"" calls the take function and passes it the parameter <em>lamp</em>. The object <em>lamp</em> will then be moved from its current location to the player. The game could also check if the player still has enough carrying capacity and so on.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>If the player enters a command that the interpreter cannot parse, then a negative response follows. The better the text adventure, the higher the likelihood that the game understands the command. Traditional text adventures use elaborate command interpreters to maximise the level of realism of the simulated world. This text adventure uses a minimised vocabulary and each of the verbs has its own function. </p>
<!-- /wp:paragraph -->

<!-- wp:image {""id"":8291} -->
<figure class=""wp-block-image""><img src=""https://i2.wp.com/lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/05/landusia-dragon.jpg?fit=905%2C712&amp;ssl=1"" alt=""Hal Renko &amp; Sam Edwards, The Secret of Landusia(1986)."" class=""wp-image-8291""/></figure>
<!-- /wp:image -->

<!-- wp:heading {""level"":4} -->
<h4>Look</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The look function takes a room number as input and displays the prose related to the room. The next section lists the available passages and objects in the room. The final part of the look function displays any objects that the player is carrying.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":4} -->
<h4>Take and Put</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>These two functions allow a player to take an object or place it on the ground. The weight of the object is added or subtracted to the carrying capacity. When the object is not present in the room or not carried by the player, the code responds appropriately.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>These functions cannot respond to objects mentioned in the room descriptions or actors, such as trees or the dragon. This can be easily remedied by creating two types of objects, moveable and immovable.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":4} -->
<h4>Wait</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The wait function does nothing. Waiting might be useful to let other actors do their thing. The wait function has a dummy parameter because there is none, but the main loop assigns one to each verb. This verb is needed to give the blacksmith enough time to forge the sword.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":4} -->
<h4>Use</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The use function starts by checking whether the player actually has the object in their possession. The remainder of the function contains instructions for each of the four objects. The bandage will either heal yourself or the blacksmith. The sword is not very useful in this context. The flute activates the magical teleportation by changing the <code>room</code> variable. Finally, using the rope changes the map by opening the connection between rooms 14 and 15. This action also changes the prose so that the room descriptions are enhanced.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":4} -->
<h4>Kill</h4>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This last function is conditional upon having the sword. If the player has no sword, then their fists are the weapon of choice. If an opponent is present in the same room as the player, they have a 60% chance of hitting the opponent. The sword has a higher strength than a fist fight. The actor function controls the return hits.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Expanding the Game</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>This game is modular in structure so that it should be easy to enhance this game or to write a completely different game. They key to writing a good adventure is simplicity. It is easy to get carried away with writing complex command structure that the player has to guess are available.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Feel free to leave a message below if you find bugs or like to enhance the prose or code.</p>
<!-- /wp:paragraph -->

<!-- wp:heading {""level"":3} -->
<h3>The next wave of interactive fiction?</h3>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>A lot has changed in computing since the heyday of text adventures. Although these games provided an illusion of freedom to act in a simulated world, the player is always limited by what the writer intended them to do.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Perhaps natural language processing, complex Markov chains and text-generating deep learning methods can generate the ultimate text adventure. Imagine a text adventure where the computer understands the basic structure but freely develops the prose and interactions.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Other Games in the R Langauge</h2>
<!-- /wp:heading -->

<!-- wp:uagb/post-carousel {""block_id"":""e7f9ec85"",""categories"":""9"",""taxonomyType"":""post_tag"",""displayPostDate"":false,""displayPostExcerpt"":false,""displayPostAuthor"":false,""displayPostComment"":false,""imgSize"":""medium_large"",""displayPostLink"":false,""columns"":2,""arrowDots"":""arrows""} /-->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380""/></a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->"
8965,2019-07-20,GEDCOM Reader for the R Language: Analysing Family History,https://lucidmanager.org/gedcom-reader/,gedcom-reader,The Devil is in the Data,Genealogy|R Language,"<!-- wp:paragraph -->
<p>Understanding who you are is strongly related to understanding your family history. Discovering ancestors is now a popular hobby, as many archives are available on the internet. The GEDCOM format provides a standardised way to store information about ancestors. This article shows how to develop a GEDCOM reader using the R language.</p>
<!-- /wp:paragraph -->

<!-- wp:uagb/call-to-action {""classMigrate"":true,""block_id"":""7a41c36d-d40e-49a6-a633-93d78c4d157b"",""ctaTarget"":true,""ctaIcon"":""github"",""ctaIconSpace"":7,""ctaText"":""Download"",""ctaLink"":""https://github.com/pprevos/Genealogy"",""contentWidth"":52,""ctaBtnLinkColor"":""#f9f9f8"",""ctaBgColor"":""#4f2647""} -->
<div class=""uagb-cta__outer-wrap uagb-block-7a41c36d-d40e-49a6-a633-93d78c4d157b""><div class=""uagb-cta__content-wrap uagb-cta__block uagb-cta__icon-position-right uagb-cta__content-right uagb-cta__content-stacked-tablet uagb-cta__button-valign-middle ""><div class=""uagb-cta__left-right-wrap""><div class=""uagb-cta__content""><div class=""uagb-cta__title-wrap""><h3 class=""uagb-cta__title"">Download the Code</h3></div><div class=""uagb-cta-text-wrap""><p class=""uagb-cta__desc"">The text in this article explains the basic principles to write a GEDCOM reader. You can download the latest version from <a href=""https://github.com/pprevos/Genealogy"" target=""_blank"" rel=""noreferrer noopener"" aria-label=""GitHub (opens in a new tab)"">GitHub</a>.</p></div></div><div class=""uagb-cta__link-wrapper uagb-cta__block-link-style""><div class=""uagb-cta__button-wrapper""><a href=""https://github.com/pprevos/Genealogy"" class=""uagb-cta__block-link uagb-cta__button-link-wrapper uagb-cta-typeof-button"" target=""_blank"" rel=""noopener noreferrer""><span class=""uagb-cta__link-content-inner""><span>Download</span></span><span class=""uagb-cta-button-icon uagb-cta__align-button-after uagb-cta-with-svg""><svg xmlns=""http://www.w3.org/2000/svg"" viewbox=""0 0 496 512""><path d=""M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z""></path></svg></span></a></div></div></div></div></div>
<!-- /wp:uagb/call-to-action -->

<!-- wp:heading -->
<h2>The GEDCOM format</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The GEDCOM format is not an ideal way to store information, but it has become the de-facto standard for family history. This format includes metadata and two sets of data. The file contains a list of the individuals, and it lists the families to which they belong.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The basic principle is that each line has a level, indicated by the first digit. At level zero, we find metadata and the individuals and their family. At level one, we see the various types of data, such as births, deaths and marriages. The deeper levels provide the data for these events.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p><a rel=""noreferrer noopener"" aria-label=""Heiner Eichmann (opens in a new tab)"" href=""http://heiner-eichmann.de/gedcom/gedcom.htm"" target=""_blank"">Heiner Eichmann</a> maintains a website that explains the format and provides some examples of files to help you understand the syntax.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The GEDCOM format is not only old in the way it stores data, but it is also limited in the types of human relationships. These files only store genetic relationships between people and assume that these relationships are marriages between a wife and a husband. Human relationships are, however, a lot more complicated than the genetic relationships between children and their parents, grandparents and ancestors.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>These issues aside, all genealogical software can export a file to GEDCOM. The next section shows how to create a basic GEDCOM reader using the <a rel=""noreferrer noopener"" aria-label=""stringr (opens in a new tab)"" href=""https://stringr.tidyverse.org/"" target=""_blank"">stringr</a>, <a rel=""noreferrer noopener"" aria-label=""tibble (opens in a new tab)"" href=""https://tibble.tidyverse.org/"" target=""_blank"">tibble</a> and <a rel=""noreferrer noopener"" aria-label=""dplyr (opens in a new tab)"" href=""https://dplyr.tidyverse.org/"" target=""_blank"">dplyr</a> packages from the <a href=""https://tidyverse.org/"">Tidyverse</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>GEDCOM Reader</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The <code>read.gedcom()</code> function takes a GEDCOM file as input and delivers a data frame (tibble) with basic information:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>ID</li><li>Full name</li><li>Gender</li><li>Birthdate and place</li><li>Father</li><li>Mother</li><li>Death date and place</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>This code only can be easily expanded to include further fields by adding lines in the while-loops and including the fields in the data frame.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The first lines read the file and setup the data frame. The <code>extract()</code> function extracts an individual's ID from a line in the file. The for loop runs through each line of the GEDCOM file. When the start of a new individual is detected, the GEDCOM reader collects the relevant information. </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Births and christenings are considered equal to simplify the data. In older data, we often only know one or the other. The function looks for the start of a family. It extracts the husband and wife and assigns these as parents to each of the children. The last section cleans the data and returns the result.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">## Read GEDCOM file

## The Devil is in the Data
## lucidmanager.org/data-science
## Dr Peter Prevos

read.gedcom &lt;- function(gedcom.loc) {
    require(stringr)
    require(tibble)
    require(dplyr)

    gedcom &lt;- str_squish(readLines(gedcom.loc))
    idv &lt;- sum(grepl(""^0.*INDI$"", gedcom))
    fam &lt;- sum(grepl(""^0.*FAM$"", gedcom))
    cat(paste(""Individuals: "", idv, ""\n""))
    cat(paste(""Families: "", fam, ""\n""))
    family &lt;- tibble(id = NA,
                     Full_Name = NA,
                     Gender = NA,
                     Birth_Date = NA,
                     Birth_Place = NA,
                     Father_id = NA,
                     Mother_id = NA,
                     Death_Date = NA,
                     Death_Place = NA)
    ## Extract data
    extract &lt;- function(line, type) {
        str_trim(str_sub(line, str_locate(line, type)[2] + 1))
    }
    id &lt;- 0
    for (l in 1:length(gedcom)) {
        if (str_detect(gedcom[l], ""^0"") &amp; str_detect(gedcom[l], ""INDI$"")) {
            id &lt;- id + 1
            family[id, ""id""] &lt;- unlist(str_split(gedcom[l], ""@""))[2]
            l &lt;- l + 1
            while(!str_detect(gedcom[l], ""^0"")) {
                if (grepl(""NAME"", gedcom[l]))
                    family[id, ""Full_Name""] &lt;- extract(gedcom[l], ""NAME"")
                if (grepl(""SEX"", gedcom[l]))
                    family[id, ""Gender""] &lt;- extract(gedcom[l], ""SEX"")
                l &lt;- l + 1
                if (grepl(""BIRT|CHR"", gedcom[l])) {
                    l &lt;- l + 1
                    while (!str_detect(gedcom[l], ""^1"")) {
                        if (grepl(""DATE"", gedcom[l]))
                            family[id, ""Birth_Date""] &lt;- extract(gedcom[l], ""DATE"")
                        if (grepl(""PLAC"", gedcom[l]))
                            family[id, ""Birth_Place""] &lt;- extract(gedcom[l], ""PLAC"")
                        l &lt;- l + 1
                    }
                }
                if (grepl(""DEAT|BURI"", gedcom[l])) {
                    l &lt;- l + 1
                    while (!str_detect(gedcom[l], ""^1"")) {
                        if (grepl(""DATE"", gedcom[l]))
                            family[id, ""Death_Date""] &lt;- extract(gedcom[l], ""DATE"")
                        if (grepl(""PLAC"", gedcom[l]))
                            family[id, ""Death_Place""] &lt;- extract(gedcom[l], ""PLAC"")
                        l &lt;- l + 1
                    }
                }
            }
        }
        if (str_detect(gedcom[l], ""^0"") &amp; str_detect(gedcom[l], ""FAM"")) {
            l &lt;- l + 1
            while(!str_detect(gedcom[l], ""^0"")) {
                if (grepl(""HUSB"", gedcom[l]))
                    husband &lt;- unlist(str_split(gedcom[l], ""@""))[2]
                if (grepl(""WIFE"", gedcom[l]))
                    wife &lt;- unlist(str_split(gedcom[l], ""@""))[2]
                if (grepl(""CHIL"", gedcom[l])) {
                    child &lt;- which(family$id == unlist(str_split(gedcom[l], ""@""))[2])
                    family[child, ""Father_id""] &lt;- husband
                    family[child, ""Mother_id""] &lt;- wife
                }
                l &lt;- l + 1
            }
        }
    }
    family %>%
        mutate(Full_Name = gsub(""/"", """", str_trim(Full_Name)),
               Birth_Date = as.Date(family$Birth_Date, format = ""%d %b %Y""),
               Death_Date = as.Date(family$Death_Date, format = ""%d %b %Y"")) %>%
        return()
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Analysing the data</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>There are many websites with GEDCOM files of family histories of famous and not so famous people. The <a rel=""noreferrer noopener"" aria-label=""Famous GEDCOMs (opens in a new tab)"" href=""https://webtreeprint.com/tp_famous_gedcoms.php"" target=""_blank"">Famous GEDCOMs</a> website has a few useful examples to test the GEDCOM reader.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Once the data is in a data frame, you can analyse it any way you please. The code below downloads a file with the presidents of the US, with their ancestors and descendants. The <code>alive()</code> function filters people who are alive at a certain date. For people without birth date, it sets a maximum age of 100 years.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The histogram shows the distribution of ages at time of death of all the people in the presidents file.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>These are just some random examples of how to analyse family history data with this GEDCOM reader. The next article will explain how to plot a population pyramid using this data. A future article will discuss how to visualise the structure of family history.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":8968,""width"":512,""height"":512} -->
<div class=""wp-block-image""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/07/years-1024x1024.png"" alt=""Analysing a GEDCOM file"" class=""wp-image-8968"" width=""512"" height=""512""/><figcaption>Birth years of people of in the Presidents file</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">## Basic family history statistics
library(tidyverse)
library(lubridate)
source(""read.gedcom.R"")
presidents &lt;- read.gedcom(""https://webtreeprint.com/tp_downloader.php?path=famous_gedcoms/pres.ged"")

filter(presidents, grepl(""Jefferson"", Full_Name))

mutate(presidents, Year = year(Birth_Date)) %>%
    ggplot(aes(Year)) +
    geom_histogram(binwidth = 10, fill = ""#6A6A9D"", col = ""white"") +
    labs(title = ""Birth years in the presidents file"")

alive &lt;- function(population, census_date){
    max_date &lt;- census_date + 100 * 365.25
    filter(people, (is.na(Birth_Date) &amp; (Death_Date &lt;= max_date &amp;
                                         Death_Date >= census_date)) |
                   (Birth_Date &lt;= census_date &amp; Death_Date >= census_date)) %>%
        arrange(Birth_Date) %>%
        mutate(Age = as.numeric(census_date - Birth_Date) / 365.25) %>%
        return()
}

alive(presidents, as.Date(""1840-03-07""))</pre>
<!-- /wp:enlighter/codeblock -->"
9686,2017-08-17,Visualising Water Consumption using a Geographic Bubble Chart,https://lucidmanager.org/geographic-bubble-chart/,geographic-bubble-chart,The Devil is in the Data,Hydroinformatics|Map Porn|R Language|Vietnam,"<!-- wp:paragraph -->
<p>A geographic bubble chart is a straightforward method to visualise quantitative information with a geospatial relationship. Last week I was in Vietnam helping the Phú Thọ Water Supply Joint Stock Company with their data science. They asked me to create a map of a sample of their water consumption data. In this post, I share this little ditty to explain how to plot a bubble chart over a map using the ggmap package.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In this post, I share this little ditty to explain how to plot a bubble chart over a map using the ggmap package. You can find the code and data for this article on my <a href=""https://github.com/pprevos/hydroinformatics/tree/master/WaterFlow/PhuTho"">GitHub</a> repository. With thanks to&nbsp;Ms Quy and Mr Tuyen of Phu Tho water for their permission to use this data. Other posts on this blog detail how to analyse water consumption from <a href=""https://lucidmanager.org/digital-water-meter-data/"">digital metering data</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This map visualises water consumption in the targeted area of Việt Trì. The larger the bubble, the larger the consumption. It is no surprise that two commercial customers used the most water. Ggplot&nbsp;automatically&nbsp;adds the legend for the consumption variable.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":966,""width"":748,""height"":561} -->
<div class=""wp-block-image""><figure class=""aligncenter is-resized""><img src=""https://lucidmanager.org/wp-content/blogs.dir/4/files/sites/4/2017/08/VietTri_cropped.png"" alt=""Geographic Bubble Chart: Visualising Water Consumption in Vietnam."" class=""wp-image-966"" width=""748"" height=""561""/></figure></div>
<!-- /wp:image -->

<!-- wp:heading -->
<h2>Load and Explore the Data</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The sample data contains a list of just over 100 readings from water meters in the city of&nbsp;Việt Trì in Vietnam, plus their geospatial location. This data uses the World Geodetic System of 1984 (WGS84), which is compatible with Google Maps and similar systems.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">water &lt;- read.csv(""PhuTho/MeterReads.csv"")
water$Consumption &lt;- water$read_new - water$read_old
## Summarise the data
head(water)
summary(water$Consumption)</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>The consumption at each connection is between 0 and 529 cubic metres, with an average usage of 23.45 cubic metres.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Visualise the data with a geographic bubble chart</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>With the <a href=""https://journal.r-project.org/archive/2013-1/kahle-wickham.pdf"">ggmap</a> extension of the ggplot package, we can visualise any spatial data set on a map. The only condition is that the spatial coordinates are in the WGS84 datum. The ggmap package adds a geographical layer to ggplot by adding a Google Maps or Open Street Map canvas. The first step is to download the map canvas. To do this, you need to know the centre coordinates and the zoom factor. To determine the perfect zoon factor requires some trial and error. The ggmap&nbsp;package provides for various map types, which are described in detail in the <a href=""https://cran.r-project.org/web/packages/ggmap/ggmap.pdf"">documentation</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">library(ggmap)
centre &lt;- c(mean(range(water$lon)), mean(range(water$lat)))
viettri &lt;- get_map(centre, zoom = 17, maptype = ""hybrid"")
g &lt;- ggmap(viettri)</pre>
<!-- /wp:preformatted -->

<!-- wp:paragraph -->
<p>The ggmap package follows the same conventions as ggplot. We first call the map layer and then add any required geom. The point geom creates a&nbsp;nice bubble chart when used in combination with the <code>scale_size_area option</code>. This option scales the points to a maximum size so that they are easily visible. The transparency (alpha) minimises problems with overplotting. This last code snippet plots the map with water consumption.</p>
<!-- /wp:paragraph -->

<!-- wp:preformatted {""className"":""lang:r decode:true""} -->
<pre class=""wp-block-preformatted lang:r decode:true"">g + geom_point(data = reads, aes(x = lon, y = lat, size = Consumption),
               shape = 21, colour = ""dodgerblue4"", fill = ""dodgerblue"", 
               alpha = .5) +
    scale_size_area(max_size = 20) + # Size of the biggest point
    ggtitle(""Việt Trì sự tiêu thụ nước"")</pre>
<!-- /wp:preformatted -->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380""/></a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->"
9687,2018-07-09,Euler Problem 33: Digit Cancelling Fractions and Ford Circles,https://lucidmanager.org/euler-problem-33-ford-circles/,euler-problem-33-ford-circles,The Devil is in the Data,Numberphile|Project Euler Solutions in R|R Language,"<!-- wp:paragraph -->
<p>Euler Problem 33 takes us back to the world of fractions from our primary school days. This article discusses how to solve this problem using Farey sequences and how to visualise Ford Circles with the ggplot2 package.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Many kids hate and struggle learning about fractions, but once you master them, a new world of numbers opens up. Unfortunately, the proliferation of digital calculators has negated the use of fractions in favour of decimal expressions. <a href=""https://lucidmanager.org/euler-problem-26/"">Fractions</a> are an aesthetic way to express numbers, without having to resort to ugly random sequences of decimals. This is why I prefer to use 22/7 as an <a href=""https://lucidmanager.org/approximations-of-pi/"">approximation of Pi</a> over the ugly infinite series of decimals.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This&nbsp;Numberphile video below explains fractions and&nbsp;Farey sequences. A Farey sequence contains all fractions between 0 and 1 with a maximum denominator. More formally, a <a rel=""noopener"" href=""https://en.wikipedia.org/wiki/Farey_sequence"">Farey sequence</a> of order <em>n</em> is the sequence of completely reduced fractions between 0 and 1.  These fractions have denominators less than or equal to $latex n$, arranged in order of increasing size. For example, the Farey Sequence with order 3 is:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>$latex F_3 = \Big\{ \frac{0}{1},\frac{1}{3},\frac{1}{2},\frac{2}{3},\frac{1}{1}\Big\} $</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Ford Circles are a fractal-esque way to visualise Farey  sequences , but before we get to this, first solve Euler problem 33.</p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {""url"":""https:\/\/www.youtube.com\/watch?v=0hlvhQZIOQw"",""type"":""video"",""providerNameSlug"":""youtube"",""className"":""wp-embed-aspect-16-9 wp-has-aspect-ratio""} -->
<figure class=""wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio""><div class=""wp-block-embed__wrapper"">
https://www.youtube.com/watch?v=0hlvhQZIOQw
</div><figcaption>Funny Fractions and Ford Circles by Numberphile.</figcaption></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:heading -->
<h2>Euler Problem 33 Definition</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>The fraction&nbsp;<sup>49</sup>/<sub>98</sub>&nbsp;is a curious fraction, as an inexperienced mathematician in attempting to simplify it may incorrectly believe that&nbsp;<sup>49</sup>/<sub>98</sub>&nbsp;=&nbsp;<sup>4</sup>/<sub>8</sub>, which is correct, is obtained by cancelling the 9s. We shall consider fractions like&nbsp;<sup>30</sup>/<sub>50</sub>&nbsp;=&nbsp;<sup>3</sup>/<sub>5</sub>, to be trivial examples.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>There are precisely four nontrivial examples of this type of fraction, less than one in value, and containing two digits in the numerator and denominator. If the product of these four fractions is given in its lowest common terms, <a href=""https://projecteuler.net/problem=33"" rel=""noopener"">find the value of the denominator</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Proposed Solution in R</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>To solve this problem, we create a pseudo-Farey sequence by generating all different fractions with two decimals in the numerator and denominator. The loop generates all combinations of denominators and numerators, excluding the trivial ones (multiples of 10 and 11). This solution converts the numbers to strings, strips any common duplicates, and tests the condition. The code concatenates vectors, which is not good practice. However, the loop is so short it does not matter much.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>You can view the code below or download it from my <a href=""https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem033.R"" rel=""noopener"">GitHub page</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">num &lt;- vector()
den &lt;- vector()
for (a in 11:99) {
    for (b in (a + 1):99) {
        trivial &lt;- (a %% 10 == 0 | b &amp;&amp; 10 == 0 | a %% 11 == 0 | b %% 11 == 0)
        if (!trivial) {
            i &lt;- as.numeric(unlist(strsplit(as.character(a), """")))
            j &lt;- as.numeric(unlist(strsplit(as.character(b), """")))
            digs &lt;- c(i, j)
            dup &lt;- digs[duplicated(digs)]
            digs &lt;- digs[which(digs != dup)]
            if (length(digs) == 2 &amp; a/b == digs[1]/digs[2]) {
                num &lt;- c(num, a)
                den &lt;- c(den, b)
                }
        }
    }
}
paste(num, den, sep = ""/"")
answer &lt;- prod(den) / prod(num)
print(answer)</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:heading -->
<h2>Farey Sequences and Ford Circles</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Next step is to generalise Euler problem 33 and write a function to generate Farey Sequences and visualise them using Ford Circles.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>The <code>farey</code> function generates a data table with the numerators (p) and denominators (q) of a Farey sequence. The function builds a list of all possible fractions for the solution space, excluding those with one as a Greatest Common Dominator, as defined by the <code>gcd</code> function.</p>
<!-- /wp:paragraph -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">farey &lt;- function(n) {
    fseq &lt;- list()
    fseq[[1]] &lt;- c(0, 1)
    i &lt;- 2
    gcd &lt;- function(a, b) { # Euclid's method
        if (a == 0) return(b)
        if (b == 0) return(a)
        gcd(b, a %% b)
    }
    for (q in 2:n) {
        for (p in 1:(q - 1)){
            if (gcd(p, q) == 1) {
                fseq[[i]] &lt;- c(p, q)
                i &lt;- i + 1
                }
        }
    }
    fseq[[i]] &lt;- c(1, 1)
    fseq &lt;- as.data.frame(do.call(rbind, fseq))
    names(fseq) &lt;- c(""p"", ""q"")
    fseq &lt;- fseq[order(fseq$p / fseq$q), ]
    return(fseq)
}</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:paragraph -->
<p>Standard ggplot2 cannot draw circles where the radius of the circles is related to the coordinate system. I tried to use the <a href=""https://cran.r-project.org/web/packages/ggforce/"" rel=""noopener"">ggforce</a> package to plot circles in ggplot2, but for some reason, I was not able to install this package on Ubuntu. As an alternative, I used a circle function sourced from <a href=""https://stackoverflow.com/questions/6862742/draw-a-circle-with-ggplot2"" rel=""noopener"">StackOverflow</a>. This function is called in a for-loop to build the circles on top of the empty canvas.</p>
<!-- /wp:paragraph -->

<!-- wp:image {""align"":""center"",""id"":9063,""className"":""size-full wp-image-6716""} -->
<div class=""wp-block-image size-full wp-image-6716""><figure class=""aligncenter""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2018/07/FordCircles-1024x614.jpg"" alt=""Farey Sequence and Ford Circles (n = 20)."" class=""wp-image-9063"" /><figcaption>Farey Sequence and Ford Circles (n = 20).</figcaption></figure></div>
<!-- /wp:image -->

<!-- wp:enlighter/codeblock -->
<pre class=""EnlighterJSRAW"" data-enlighter-language=""generic"" data-enlighter-theme="""" data-enlighter-highlight="""" data-enlighter-linenumbers="""" data-enlighter-lineoffset="""" data-enlighter-title="""" data-enlighter-group="""">library(tidyverse)
lm_palette &lt;- c(""#008da1"", ""#005395"", ""#262e43"", ""#3b2758"", ""#865596"", ""#f26230"")
ford_circles &lt;- farey(20) %&gt;%
    mutate(x = p / q,
           y = 1 / (2* q^2),
           r = y,
           c = lm_palette[(q - 1)%%6 + 1])

g_circle &lt;- function(r, x, y, color = NA, fill = ""black"", ...) {
    x &lt;- x + r * cos(seq(0, pi, length.out = 100))
    ymax &lt;- y + r * sin(seq(0, pi, length.out = 100))
    ymin &lt;- y + r * sin(seq(0, -pi, length.out = 100))
    annotate(""ribbon"", x = x, ymin = ymin, ymax = ymax,
             color = color, fill = fill, ...)
}

p &lt;- ggplot(ford_circles, aes(x, y))
for (i in 1:nrow(ford_circles)) {
    p &lt;- p + g_circle(ford_circles$r[i], ford_circles$x[i], ford_circles$y[i],
                      fill = ford_circles$c[i])
}
p + xlim(c(0, 1)) + coord_fixed() + theme_void()</pre>
<!-- /wp:enlighter/codeblock -->

<!-- wp:image {""id"":9380,""sizeSlug"":""large"",""linkDestination"":""custom""} -->
<figure class=""wp-block-image size-large""><a href=""https://leanpub.com/c/R4H2O""><img src=""https://lucidmanager.org/wp-content/blogs.dir/9/files/sites/9/2019/11/9-1024x512.png"" alt=""R for Water Professionals"" class=""wp-image-9380"" /></a><figcaption><strong>LEARN MORE ABOUT R FOR WATER PROFESSIONALS HERE!</strong></figcaption></figure>
<!-- /wp:image -->"
