#+title: Euler Problem 29: Distinct Powers
#+date: 2017-08-03 10:00:00
#+lastmod: 2020-07-18
#+categories[]: The-Devil-is-in-the-Data
#+tags[]: Numberphile Project-Euler-Solutions-in-R R-Language
#+draft: true

Euler Problem 29 is another permutation problem that is quite easy to
solve using [[https://lucidmanager.org/euler-problem-6/][brute
force]]. The
[[http://www.mathblog.dk/project-euler-29-distinct-terms-sequence-ab/][MathBlog]]
site by Kristian Edlund has a nice solution using only pen and paper.

Raising a number to a power can have interesting results. The video
below explains why this
[[https://lucidmanager.org/pandigital-products-euler-problem-32/][pandigital]]
formula approximates $latex e $ to billions of decimals:

$latex (1 + 9^{-4^{6 \times 7}})^{3^{2^{85}}} \approx e &s=2$

{{< youtube "xgBGibfLD-U" >}}

Incredible formula - Numberphile.

** Euler Problem 29 Definition
   :PROPERTIES:
   :CUSTOM_ID: euler-problem-29-definition
   :END:

Consider all integer combinations of: $latex a^b $ for $latex 2 \leq a
\leq 5 $ and $latex \leq b \leq 5 $.

$latex 2^2=4, \quad 2^3 = 8, \quad 2^4 = 16, \quad 2^5 = 32 $

$latex 3^2 = 9,\quad 3^3 = 27, \quad 3^4 = 81,\quad 3^5 = 243 $

$latex 4^2 = 16,\quad 4^3 = 64, \quad 4^4 = 256, \quad 4^5 = 1024 $

$latex 5^2 = 25,\quad 5^3 = 125, \quad 5^4 = 625,\quad 5^5 = 3125 $

If they are then placed in numerical order, with any repeats removed, we
get the following sequence of 15 distinct terms:

$latex 4, \ 8, \ 9, \ 16, \ 25, \ 27, \ 32, \ 64, \ 81, \ 125, \ 243, \
256,\ 625, \ 1024, \ 3125 $

How many [[https://projecteuler.net/problem=29][distinct terms are in
the sequence]] generated by $latex a^b $ for $latex 2 \leq a \leq 100 $
and $latex 2 \leq b \leq 100 $?

** Brute Force Solution
   :PROPERTIES:
   :CUSTOM_ID: brute-force-solution
   :END:

This code calculates all powers from $latex 2^2 $ to $latex 2^{100} $
and determines the number of unique values. There is no need to use
Multiple Precision Arithmetic because we are only interested in their
uniqueness and not the precise value,

View the code below or download latest version of this code on
[[https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem029.R][GitHub]].

#+BEGIN_EXAMPLE
  target <- 100
  terms <- vector()
  i <- 1
      for (a in 2:target) {
      for (b in 2:target) {
          terms[i] <- a^b
          i <- i + 1
      }
  }
  answer <- length(unique(terms))
  print(answer)
#+END_EXAMPLE
