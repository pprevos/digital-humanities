#+title: Euler Problem 23: Finding Non-Abundant Sums
#+date: 2017-06-01 10:00:00
#+lastmod: 2020-07-18
#+categories[]: The-Devil-is-in-the-Data
#+tags[]: Numberphile Project-Euler-Solutions-in-R R-Language
#+draft: true

Euler problem 23 asks us to solve a problem
with [[https://en.wikipedia.org/wiki/Abundant_number][abundant or
excessive numbers]]. These are numbers for which the sum of its proper
divisors is greater than the number itself.

Twelve is an abundant number because the sum of its proper divisors (the
aliquot sum) is larger than 12: (1 + 2 + 3 + 4 + 6 = 16).
All [[https://en.wikipedia.org/wiki/Highly_composite_number][highly
composite numbers]] or anti-primes greater than six are abundant
numbers. These numbers have so many divisors that they are the opposite
of primes, as explained in the Numberphile video below.

{{< youtube "2JM2oImb9Qg" >}}

5040 and other Anti-Prime Numbers - Numberphile.

** Euler Problem 23 Definition
   :PROPERTIES:
   :CUSTOM_ID: euler-problem-23-definition
   :END:

A perfect number is a number for which the sum of its proper divisors is
exactly equal to the number. For example, the sum of the proper divisors
of 28 would be 1 + 2 + 4 + 7 + 14 = 28, which means that 28 is a perfect
number. A number /n/ is called deficient if the sum of its proper
divisors is less than n and it is called abundant if this sum exceeds
/n/.

As 12 is the smallest abundant number, 1 + 2 + 3 + 4 + 6 = 16, the
smallest number that can be written as the sum of two abundant numbers
is 24. By mathematical analysis, it can be shown that all integers
greater than 28123 can be written as the sum of two abundant numbers.
However, this upper limit cannot be reduced any further by analysis,
even though it is known that the greatest number that cannot be
expressed as the sum of two abundant numbers is less than this limit.

[[https://projecteuler.net/problem=23][Find the sum]] of all the
positive integers which cannot be written as the sum of two abundant
numbers.

** Solution
   :PROPERTIES:
   :CUSTOM_ID: solution
   :END:

This solution repurposes the /divisors/ function that determines the
proper divisors for a number, introduced for
[[https://lucidmanager.org/euler-problem-21-amicable-numbers/][Euler
Problem 21]]. The first code snippet creates the sequence of all
abundant numbers up to 28123 (sequence
[[https://oeis.org/A005101][A005101]] in the OEIS). An abundant number
is one where its [[https://en.wikipedia.org/wiki/Aliquot_sum][aliquot
sum]] is larger than /n/.

#+BEGIN_EXAMPLE
  A005101 <- function(x){
      abundant <- vector()
      a <- 1
      for (n in 1:x) {
          aliquot.sum <- sum(proper.divisors(n)) - n
          if (aliquot.sum > n) {
              abundant[a] <- n
              a <- a + 1
          }
      }
  return(abundant)
  }

  abundant <- A005101(28123)
#+END_EXAMPLE

The solution to this problem is also a sequence in the Online
Encyclopedia of Integer Sequences (OEIS
[[http://oeis.org/A048242][A048242]]). This page states that the highest
number in this sequence is 20161, not 28123 as stated in the problem
definition.

The second section of code creates a list of all potential numbers not
the sum of two abundant numbers. The next bit of code sieves any sum of
two abundant numbers from the list. You find the answer by adding the
remaining numbers in the sequence.

#+BEGIN_EXAMPLE
  A048242 <- 1:20161

  for (i in 1:length(abundant)) {
      for (j in i:length(abundant)) {
          if (abundant[i] + abundant[j] <= 20161) {
              A048242[abundant[i] + abundant[j]] <- NA
          }
      }
  }
  A048242 <- A048242[!is.na(A048242)]
  answer <- sum(A048242)
  print(answer)
#+END_EXAMPLE

You can download the latest version of this code from
[[https://github.com/pprevos/ProjectEuler/blob/master/solutions/problem023.R][GitHub]].
